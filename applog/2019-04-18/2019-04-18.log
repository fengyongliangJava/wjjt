2019-04-18 08:20:37 -Starting BootdoApplication on ZJZL-20180906VX with PID 1812 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 08:20:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 08:20:37 -The following profiles are active: dev
2019-04-18 08:20:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 08:20:37 CST 2019]; root of context hierarchy
2019-04-18 08:20:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 08:20:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 08:20:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 08:20:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 08:20:52 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 08:20:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 08:20:52 -Starting service [Tomcat]
2019-04-18 08:20:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 08:20:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 08:20:52 -Initializing Spring embedded WebApplicationContext
2019-04-18 08:20:52 -Root WebApplicationContext: initialization completed in 14745 ms
2019-04-18 08:20:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 08:20:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 08:20:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 08:20:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 08:20:53 -Filter xssFilter was not registered (disabled)
2019-04-18 08:20:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 08:20:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 08:20:53 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 08:20:53 -Servlet dispatcherServlet mapped to [/]
2019-04-18 08:20:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 08:20:37 CST 2019]; root of context hierarchy
2019-04-18 08:20:58 -Using default implementation for ThreadExecutor
2019-04-18 08:20:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 08:20:58 -Quartz Scheduler v.2.2.1 created.
2019-04-18 08:20:58 -RAMJobStore initialized.
2019-04-18 08:20:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 08:20:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 08:20:58 -Quartz scheduler version: 2.2.1
2019-04-18 08:20:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b0e031b
2019-04-18 08:20:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 08:20:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 08:21:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 08:21:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 08:21:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 08:21:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 08:21:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 08:21:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 08:21:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 08:21:01 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 08:21:01 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 08:21:01 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 08:21:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 08:21:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 08:21:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 08:21:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 08:21:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 08:21:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 08:21:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 08:21:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 08:21:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 08:21:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 08:21:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 08:21:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 08:21:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 08:21:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 08:21:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 08:21:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 08:21:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 08:21:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 08:21:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 08:21:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 08:21:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 08:21:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 08:21:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 08:21:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 08:21:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 08:21:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 08:21:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 08:21:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 08:21:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 08:21:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 08:21:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 08:21:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 08:21:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 08:21:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 08:21:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 08:21:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 08:21:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 08:21:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 08:21:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 08:21:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 08:21:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 08:21:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 08:21:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 08:21:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 08:21:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 08:21:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 08:21:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 08:21:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 08:21:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 08:21:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 08:21:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 08:21:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 08:21:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 08:21:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 08:21:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 08:21:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 08:21:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 08:21:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 08:21:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 08:21:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 08:21:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 08:21:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 08:21:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 08:21:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 08:21:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 08:21:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 08:21:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 08:21:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 08:21:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 08:21:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 08:21:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 08:21:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 08:21:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 08:21:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 08:21:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 08:21:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 08:21:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 08:21:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 08:21:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 08:21:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 08:21:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 08:21:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 08:21:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 08:21:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 08:21:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 08:21:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 08:20:37 CST 2019]; root of context hierarchy
2019-04-18 08:21:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 08:21:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 08:21:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 08:21:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 08:21:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 08:21:08 -Registering beans for JMX exposure on startup
2019-04-18 08:21:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 08:21:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 08:21:08 -Starting beans in phase 2147483647
2019-04-18 08:21:08 -Context refreshed
2019-04-18 08:21:08 -Found 1 custom documentation plugin(s)
2019-04-18 08:21:08 -Scanning for api listing references
2019-04-18 08:21:09 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 08:21:09 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 08:21:09 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_1
2019-04-18 08:21:09 -Generating unique operation named: addUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: editUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: listUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_2
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_3
2019-04-18 08:21:09 -Generating unique operation named: saveUsingPOST_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPOST_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPUT_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 08:21:09 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 08:21:09 -Generating unique operation named: addUsingGET_2
2019-04-18 08:21:09 -Generating unique operation named: editUsingGET_2
2019-04-18 08:21:09 -Generating unique operation named: listUsingGET_2
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_4
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_5
2019-04-18 08:21:09 -Generating unique operation named: saveUsingPOST_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPOST_2
2019-04-18 08:21:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: addUsingGET_3
2019-04-18 08:21:09 -Generating unique operation named: editUsingGET_3
2019-04-18 08:21:09 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 08:21:09 -Generating unique operation named: listUsingGET_3
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_6
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_7
2019-04-18 08:21:09 -Generating unique operation named: saveUsingPOST_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingGET_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPOST_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPUT_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 08:21:09 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 08:21:09 -Generating unique operation named: addUsingGET_4
2019-04-18 08:21:09 -Generating unique operation named: editUsingGET_4
2019-04-18 08:21:09 -Generating unique operation named: listUsingGET_4
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_8
2019-04-18 08:21:09 -Generating unique operation named: removeUsingPOST_9
2019-04-18 08:21:09 -Generating unique operation named: saveUsingPOST_4
2019-04-18 08:21:09 -Generating unique operation named: updateUsingGET_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPOST_4
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPUT_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 08:21:09 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 08:21:09 -Generating unique operation named: ElecUsingGET_1
2019-04-18 08:21:09 -Generating unique operation named: addUsingGET_5
2019-04-18 08:21:09 -Generating unique operation named: editUsingGET_5
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_5
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_10
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_11
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_6
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_6
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_6
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_7
2019-04-18 08:21:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_7
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_12
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_13
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 08:21:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_7
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_8
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_8
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_14
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_15
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_8
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_9
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_9
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_16
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_17
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_9
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_10
2019-04-18 08:21:10 -Generating unique operation named: infoUsingGET_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingPOST_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingPUT_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 08:21:10 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_10
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_18
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_19
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_10
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_11
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_20
2019-04-18 08:21:10 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_10
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_11
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_12
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_21
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_10
2019-04-18 08:21:10 -Generating unique operation named: treeUsingGET_1
2019-04-18 08:21:10 -Generating unique operation named: treeUsingGET_2
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_11
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_11
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_12
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_13
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_22
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_23
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_11
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_12
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_12
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_13
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_14
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_24
2019-04-18 08:21:10 -Generating unique operation named: removeUsingPOST_25
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_12
2019-04-18 08:21:10 -Generating unique operation named: updateUsingGET_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_13
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPUT_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 08:21:10 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 08:21:10 -Generating unique operation named: addUsingGET_13
2019-04-18 08:21:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 08:21:10 -Generating unique operation named: editUsingGET_14
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_15
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_13
2019-04-18 08:21:10 -Generating unique operation named: saveUsingPOST_14
2019-04-18 08:21:10 -Generating unique operation named: updateUsingPOST_14
2019-04-18 08:21:10 -Generating unique operation named: listUsingGET_16
2019-04-18 08:21:10 -Generating unique operation named: listUsingHEAD_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingPOST_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingPUT_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingPATCH_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingDELETE_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 08:21:10 -Generating unique operation named: listUsingTRACE_1
2019-04-18 08:21:11 -Generating unique operation named: countDDUsingGET_1
2019-04-18 08:21:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 08:21:11 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 08:21:11 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 08:21:11 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 08:21:11 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 08:21:11 -Generating unique operation named: addUsingGET_14
2019-04-18 08:21:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 08:21:11 -Generating unique operation named: editUsingGET_15
2019-04-18 08:21:11 -Generating unique operation named: listUsingGET_17
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_26
2019-04-18 08:21:11 -Generating unique operation named: saveUsingPOST_15
2019-04-18 08:21:11 -Generating unique operation named: treeUsingGET_3
2019-04-18 08:21:11 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPOST_15
2019-04-18 08:21:11 -Generating unique operation named: addUsingGET_15
2019-04-18 08:21:11 -Generating unique operation named: editUsingGET_16
2019-04-18 08:21:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 08:21:11 -Generating unique operation named: listUsingGET_18
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_27
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_28
2019-04-18 08:21:11 -Generating unique operation named: saveUsingPOST_16
2019-04-18 08:21:11 -Generating unique operation named: updateUsingGET_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPOST_16
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPUT_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 08:21:11 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 08:21:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 08:21:11 -Generating unique operation named: addUsingGET_16
2019-04-18 08:21:11 -Generating unique operation named: editUsingGET_17
2019-04-18 08:21:11 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 08:21:11 -Generating unique operation named: listUsingGET_19
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_29
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_30
2019-04-18 08:21:11 -Generating unique operation named: saveUsingPOST_17
2019-04-18 08:21:11 -Generating unique operation named: updateUsingGET_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPOST_17
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPUT_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 08:21:11 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 08:21:11 -Generating unique operation named: addUsingGET_17
2019-04-18 08:21:11 -Generating unique operation named: editUsingGET_18
2019-04-18 08:21:11 -Generating unique operation named: listUsingGET_20
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_31
2019-04-18 08:21:11 -Generating unique operation named: removeUsingPOST_32
2019-04-18 08:21:11 -Generating unique operation named: saveUsingPOST_18
2019-04-18 08:21:11 -Generating unique operation named: updateUsingGET_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPOST_18
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPUT_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 08:21:11 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 08:21:11 -Starting Quartz Scheduler now
2019-04-18 08:21:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 08:21:11 -Starting...
2019-04-18 08:21:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 08:21:11 -Started.
2019-04-18 08:21:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 08:21:11 -Using a shared selector for servlet write/read
2019-04-18 08:21:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 08:21:11 -Started BootdoApplication in 35.919 seconds (JVM running for 38.089)
2019-04-18 08:21:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 08:21:12 -==> Parameters: 
2019-04-18 08:21:12 -<==      Total: 1
2019-04-18 08:22:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-18 08:24:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 08:24:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 08:24:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-04-18 08:24:15 -Enabling session validation scheduler...
2019-04-18 08:24:15 -请求地址 : http://localhost:8081/login;JSESSIONID=8348b317-d01c-495d-8d80-a249f0e07ec3
2019-04-18 08:24:15 -HTTP METHOD : GET
2019-04-18 08:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 08:24:15 -参数 : [{}]
2019-04-18 08:24:15 -耗时 : 7
2019-04-18 08:24:15 -返回值 : login
2019-04-18 08:24:19 -请求地址 : http://localhost:8081/getVerify
2019-04-18 08:24:19 -HTTP METHOD : GET
2019-04-18 08:24:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 08:24:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51bee0a4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14bc64f7]
2019-04-18 08:24:24 -7852
2019-04-18 08:24:25 -耗时 : 5592
2019-04-18 08:24:25 -返回值 : null
2019-04-18 08:24:32 -请求地址 : http://localhost:8081/login
2019-04-18 08:24:32 -HTTP METHOD : POST
2019-04-18 08:24:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 08:24:32 -参数 : [admin, 111111, 7852, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7aa09efb]
2019-04-18 08:24:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 08:24:32 -==> Parameters: admin(String)
2019-04-18 08:24:32 -<==      Total: 1
2019-04-18 08:24:32 -耗时 : 320
2019-04-18 08:24:32 -返回值 : {msg=操作成功, code=0}
2019-04-18 08:24:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 08:24:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 08:24:32 -==> Parameters: 1(Long), admin(String), 登录(String), 320(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 08:24:32.824(Timestamp)
2019-04-18 08:24:33 -<==    Updates: 1
2019-04-18 08:24:33 -请求地址 : http://localhost:8081/index
2019-04-18 08:24:33 -HTTP METHOD : GET
2019-04-18 08:24:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 08:24:33 -参数 : [{}]
2019-04-18 08:24:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 08:24:33 -==> Parameters: 1(Long)
2019-04-18 08:24:33 -<==      Total: 49
2019-04-18 08:24:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 08:24:33 -==> Parameters: 138(Long)
2019-04-18 08:24:33 -<==      Total: 1
2019-04-18 08:24:33 -耗时 : 653
2019-04-18 08:24:33 -返回值 : index_v1
2019-04-18 08:24:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 08:24:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 653(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 08:24:33.964(Timestamp)
2019-04-18 08:24:34 -<==    Updates: 1
2019-04-18 08:24:34 -请求地址 : http://localhost:8081/main
2019-04-18 08:24:34 -HTTP METHOD : GET
2019-04-18 08:24:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 08:24:34 -参数 : []
2019-04-18 08:24:34 -耗时 : 0
2019-04-18 08:24:34 -返回值 : main
2019-04-18 08:24:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 08:24:38 -HTTP METHOD : GET
2019-04-18 08:24:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 08:24:38 -参数 : []
2019-04-18 08:24:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 08:24:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 08:24:38 -<==      Total: 0
2019-04-18 08:24:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 08:24:38 -==> Parameters: 1(Long), 0(String)
2019-04-18 08:24:38 -<==      Total: 1
2019-04-18 08:24:38 -耗时 : 65
2019-04-18 08:24:38 -返回值 : com.bootdo.common.utils.PageUtils@613dd3f9
2019-04-18 08:24:38 -请求地址 : http://localhost:8081/main
2019-04-18 08:24:38 -HTTP METHOD : GET
2019-04-18 08:24:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 08:24:38 -参数 : []
2019-04-18 08:24:38 -耗时 : 0
2019-04-18 08:24:38 -返回值 : main
2019-04-18 08:24:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 08:24:41 -==> Parameters: 1(Long)
2019-04-18 08:24:41 -<==      Total: 93
2019-04-18 08:24:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-18 08:24:41 -HTTP METHOD : GET
2019-04-18 08:24:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-18 08:24:41 -参数 : []
2019-04-18 08:24:41 -耗时 : 0
2019-04-18 08:24:41 -返回值 : /moneyList/moneyList
2019-04-18 08:24:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 08:24:50 -HTTP METHOD : GET
2019-04-18 08:24:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 08:24:50 -参数 : []
2019-04-18 08:24:50 -耗时 : 0
2019-04-18 08:24:50 -返回值 : system/dept/deptTree
2019-04-18 08:24:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 08:24:50 -HTTP METHOD : GET
2019-04-18 08:24:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 08:24:50 -参数 : []
2019-04-18 08:24:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 08:24:50 -==> Parameters: 
2019-04-18 08:24:50 -<==      Total: 3
2019-04-18 08:24:50 -耗时 : 38
2019-04-18 08:24:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 08:24:56 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:24:56 -HTTP METHOD : POST
2019-04-18 08:24:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:24:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4f5e2345]
2019-04-18 08:24:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:24:56 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:24:56 -<==      Total: 3
2019-04-18 08:24:56 -耗时 : 283
2019-04-18 08:24:56 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5ba92d8b, com.bootdo.moneyList.damain.MoneyListDO@2a512acd, com.bootdo.moneyList.damain.MoneyListDO@371566eb]
2019-04-18 08:24:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:24:58 -HTTP METHOD : POST
2019-04-18 08:24:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:24:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@671e44b5]
2019-04-18 08:24:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:24:58 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:24:58 -<==      Total: 3
2019-04-18 08:24:58 -耗时 : 6
2019-04-18 08:24:58 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@10816a0b, com.bootdo.moneyList.damain.MoneyListDO@3f23fc07, com.bootdo.moneyList.damain.MoneyListDO@73706279]
2019-04-18 08:24:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:24:59 -HTTP METHOD : POST
2019-04-18 08:24:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:24:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5e06c56e]
2019-04-18 08:24:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:24:59 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:24:59 -<==      Total: 3
2019-04-18 08:24:59 -耗时 : 5
2019-04-18 08:24:59 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1648d0ee, com.bootdo.moneyList.damain.MoneyListDO@53a075d9, com.bootdo.moneyList.damain.MoneyListDO@3b65f776]
2019-04-18 08:25:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:25:00 -HTTP METHOD : POST
2019-04-18 08:25:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:25:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1aac79f3]
2019-04-18 08:25:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:25:00 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:25:00 -<==      Total: 3
2019-04-18 08:25:00 -耗时 : 5
2019-04-18 08:25:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@55e70034, com.bootdo.moneyList.damain.MoneyListDO@30a157ce, com.bootdo.moneyList.damain.MoneyListDO@493bc3c8]
2019-04-18 08:25:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:25:01 -HTTP METHOD : POST
2019-04-18 08:25:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:25:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1d5fe98b]
2019-04-18 08:25:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:25:01 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:25:01 -<==      Total: 3
2019-04-18 08:25:01 -耗时 : 81
2019-04-18 08:25:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3b4b6d21, com.bootdo.moneyList.damain.MoneyListDO@610e3bac, com.bootdo.moneyList.damain.MoneyListDO@3ff85b7]
2019-04-18 08:25:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:25:02 -HTTP METHOD : POST
2019-04-18 08:25:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:25:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1c243959]
2019-04-18 08:25:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:25:02 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:25:02 -<==      Total: 3
2019-04-18 08:25:02 -耗时 : 10
2019-04-18 08:25:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@cb6d8b, com.bootdo.moneyList.damain.MoneyListDO@2217f4da, com.bootdo.moneyList.damain.MoneyListDO@15d2af63]
2019-04-18 08:25:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:25:04 -HTTP METHOD : POST
2019-04-18 08:25:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:25:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@794769dd]
2019-04-18 08:25:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:25:04 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:25:04 -<==      Total: 3
2019-04-18 08:25:04 -耗时 : 7
2019-04-18 08:25:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1a95a1f, com.bootdo.moneyList.damain.MoneyListDO@2e63ca65, com.bootdo.moneyList.damain.MoneyListDO@6c2857f5]
2019-04-18 08:25:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-18 08:25:04 -HTTP METHOD : POST
2019-04-18 08:25:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-18 08:25:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35deacba]
2019-04-18 08:25:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-18 08:25:04 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-18 08:25:04 -<==      Total: 3
2019-04-18 08:25:04 -耗时 : 7
2019-04-18 08:25:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5f740d, com.bootdo.moneyList.damain.MoneyListDO@72e9b505, com.bootdo.moneyList.damain.MoneyListDO@2124281a]
2019-04-18 08:25:06 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-18 08:25:06 -HTTP METHOD : POST
2019-04-18 08:25:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-18 08:25:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7497dc7e]
2019-04-18 08:25:06 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? UNION ALL select user_name from water WHERE create_time = ? and user_org = ? )userName 
2019-04-18 08:25:06 -==> Parameters: 2019-02(String), 五九(String), 2019-02(String), 五九(String), 2019-02(String), 五九(String)
2019-04-18 08:25:06 -<==      Total: 0
2019-04-18 08:25:06 -耗时 : 13
2019-04-18 08:25:06 -返回值 : []
2019-04-18 09:07:03 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:66)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:72)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$e10f298d.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 09:26:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 7640 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 09:26:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 09:26:36 -The following profiles are active: dev
2019-04-18 09:26:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 09:26:36 CST 2019]; root of context hierarchy
2019-04-18 09:26:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 09:26:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$225aa5a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$14b3d447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 09:26:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 09:26:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 09:26:50 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 09:26:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 09:26:50 -Starting service [Tomcat]
2019-04-18 09:26:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 09:26:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 09:26:51 -Initializing Spring embedded WebApplicationContext
2019-04-18 09:26:51 -Root WebApplicationContext: initialization completed in 14124 ms
2019-04-18 09:26:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 09:26:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 09:26:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 09:26:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 09:26:51 -Filter xssFilter was not registered (disabled)
2019-04-18 09:26:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 09:26:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 09:26:51 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 09:26:51 -Servlet dispatcherServlet mapped to [/]
2019-04-18 09:26:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 09:26:36 CST 2019]; root of context hierarchy
2019-04-18 09:26:56 -Using default implementation for ThreadExecutor
2019-04-18 09:26:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 09:26:56 -Quartz Scheduler v.2.2.1 created.
2019-04-18 09:26:56 -RAMJobStore initialized.
2019-04-18 09:26:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 09:26:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 09:26:56 -Quartz scheduler version: 2.2.1
2019-04-18 09:26:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@78479f2b
2019-04-18 09:26:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 09:26:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 09:27:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 09:27:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 09:27:00 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 09:27:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 09:27:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 09:27:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 09:27:00 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 09:27:00 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 09:27:00 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 09:27:00 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 09:27:00 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 09:27:00 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 09:27:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 09:27:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 09:27:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 09:27:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 09:27:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 09:27:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 09:27:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 09:27:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 09:27:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 09:27:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 09:27:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 09:27:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 09:27:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 09:27:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 09:27:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 09:27:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 09:27:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 09:27:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 09:27:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 09:27:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 09:27:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 09:27:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 09:27:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 09:27:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 09:27:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 09:27:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 09:27:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 09:27:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 09:27:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 09:27:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 09:27:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 09:27:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 09:27:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 09:27:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 09:27:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 09:27:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 09:27:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 09:27:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 09:27:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 09:27:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 09:27:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 09:27:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 09:27:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 09:27:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 09:27:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 09:27:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 09:27:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 09:27:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 09:27:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 09:27:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 09:27:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 09:27:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 09:27:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 09:27:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 09:27:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 09:27:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 09:27:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 09:27:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 09:27:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 09:27:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 09:27:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 09:27:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 09:27:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 09:27:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 09:27:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 09:27:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 09:27:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 09:27:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 09:27:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 09:27:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 09:27:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 09:27:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 09:27:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 09:27:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 09:27:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 09:27:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 09:27:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 09:27:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 09:27:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 09:27:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 09:27:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 09:27:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 09:27:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 09:26:36 CST 2019]; root of context hierarchy
2019-04-18 09:27:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 09:27:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 09:27:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 09:27:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 09:27:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 09:27:05 -Registering beans for JMX exposure on startup
2019-04-18 09:27:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 09:27:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 09:27:05 -Starting beans in phase 2147483647
2019-04-18 09:27:05 -Context refreshed
2019-04-18 09:27:05 -Found 1 custom documentation plugin(s)
2019-04-18 09:27:06 -Scanning for api listing references
2019-04-18 09:27:07 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 09:27:07 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 09:27:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_1
2019-04-18 09:27:07 -Generating unique operation named: addUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: editUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: listUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_2
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_3
2019-04-18 09:27:07 -Generating unique operation named: saveUsingPOST_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPOST_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPUT_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 09:27:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 09:27:07 -Generating unique operation named: addUsingGET_2
2019-04-18 09:27:07 -Generating unique operation named: editUsingGET_2
2019-04-18 09:27:07 -Generating unique operation named: listUsingGET_2
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_4
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_5
2019-04-18 09:27:07 -Generating unique operation named: saveUsingPOST_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPOST_2
2019-04-18 09:27:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: addUsingGET_3
2019-04-18 09:27:07 -Generating unique operation named: editUsingGET_3
2019-04-18 09:27:07 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 09:27:07 -Generating unique operation named: listUsingGET_3
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_6
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_7
2019-04-18 09:27:07 -Generating unique operation named: saveUsingPOST_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingGET_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPOST_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPUT_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 09:27:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 09:27:07 -Generating unique operation named: addUsingGET_4
2019-04-18 09:27:07 -Generating unique operation named: editUsingGET_4
2019-04-18 09:27:07 -Generating unique operation named: listUsingGET_4
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_8
2019-04-18 09:27:07 -Generating unique operation named: removeUsingPOST_9
2019-04-18 09:27:07 -Generating unique operation named: saveUsingPOST_4
2019-04-18 09:27:07 -Generating unique operation named: updateUsingGET_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPOST_4
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPUT_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 09:27:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 09:27:07 -Generating unique operation named: ElecUsingGET_1
2019-04-18 09:27:07 -Generating unique operation named: addUsingGET_5
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_5
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_5
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_10
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_11
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingGET_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPUT_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 09:27:08 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_6
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_6
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_6
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_7
2019-04-18 09:27:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_7
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_12
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_13
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingGET_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPUT_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 09:27:08 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 09:27:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_7
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_8
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_8
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_14
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_15
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingGET_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_8
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPUT_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 09:27:08 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_8
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_9
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_9
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_16
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_17
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_8
2019-04-18 09:27:08 -Generating unique operation named: updateUsingGET_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_9
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPUT_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 09:27:08 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_9
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_10
2019-04-18 09:27:08 -Generating unique operation named: infoUsingGET_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingPOST_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingPUT_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 09:27:08 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_10
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_18
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_19
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_9
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_10
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_11
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_20
2019-04-18 09:27:08 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_10
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_11
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_12
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_21
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_10
2019-04-18 09:27:08 -Generating unique operation named: treeUsingGET_1
2019-04-18 09:27:08 -Generating unique operation named: treeUsingGET_2
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_11
2019-04-18 09:27:08 -Generating unique operation named: addUsingGET_11
2019-04-18 09:27:08 -Generating unique operation named: editUsingGET_12
2019-04-18 09:27:08 -Generating unique operation named: listUsingGET_13
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_22
2019-04-18 09:27:08 -Generating unique operation named: removeUsingPOST_23
2019-04-18 09:27:08 -Generating unique operation named: saveUsingPOST_11
2019-04-18 09:27:08 -Generating unique operation named: updateUsingGET_8
2019-04-18 09:27:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 09:27:08 -Generating unique operation named: updateUsingPOST_12
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPUT_8
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 09:27:09 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 09:27:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 09:27:09 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 09:27:09 -Generating unique operation named: addUsingGET_12
2019-04-18 09:27:09 -Generating unique operation named: editUsingGET_13
2019-04-18 09:27:09 -Generating unique operation named: listUsingGET_14
2019-04-18 09:27:09 -Generating unique operation named: removeUsingPOST_24
2019-04-18 09:27:09 -Generating unique operation named: removeUsingPOST_25
2019-04-18 09:27:09 -Generating unique operation named: saveUsingPOST_12
2019-04-18 09:27:09 -Generating unique operation named: updateUsingGET_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPOST_13
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPUT_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 09:27:09 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 09:27:09 -Generating unique operation named: addUsingGET_13
2019-04-18 09:27:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 09:27:09 -Generating unique operation named: editUsingGET_14
2019-04-18 09:27:09 -Generating unique operation named: listUsingGET_15
2019-04-18 09:27:09 -Generating unique operation named: saveUsingPOST_13
2019-04-18 09:27:09 -Generating unique operation named: saveUsingPOST_14
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPOST_14
2019-04-18 09:27:09 -Generating unique operation named: listUsingGET_16
2019-04-18 09:27:09 -Generating unique operation named: listUsingHEAD_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingPOST_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingPUT_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingPATCH_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingDELETE_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 09:27:09 -Generating unique operation named: listUsingTRACE_1
2019-04-18 09:27:09 -Generating unique operation named: countDDUsingGET_1
2019-04-18 09:27:09 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 09:27:09 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 09:27:09 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 09:27:09 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 09:27:09 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 09:27:09 -Generating unique operation named: addUsingGET_14
2019-04-18 09:27:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 09:27:09 -Generating unique operation named: editUsingGET_15
2019-04-18 09:27:09 -Generating unique operation named: listUsingGET_17
2019-04-18 09:27:09 -Generating unique operation named: removeUsingPOST_26
2019-04-18 09:27:09 -Generating unique operation named: saveUsingPOST_15
2019-04-18 09:27:09 -Generating unique operation named: treeUsingGET_3
2019-04-18 09:27:09 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 09:27:09 -Generating unique operation named: updateUsingPOST_15
2019-04-18 09:27:09 -Generating unique operation named: addUsingGET_15
2019-04-18 09:27:09 -Generating unique operation named: editUsingGET_16
2019-04-18 09:27:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 09:27:09 -Generating unique operation named: listUsingGET_18
2019-04-18 09:27:09 -Generating unique operation named: removeUsingPOST_27
2019-04-18 09:27:09 -Generating unique operation named: removeUsingPOST_28
2019-04-18 09:27:09 -Generating unique operation named: saveUsingPOST_16
2019-04-18 09:27:09 -Generating unique operation named: updateUsingGET_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPOST_16
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPUT_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 09:27:10 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 09:27:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 09:27:10 -Generating unique operation named: addUsingGET_16
2019-04-18 09:27:10 -Generating unique operation named: editUsingGET_17
2019-04-18 09:27:10 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 09:27:10 -Generating unique operation named: listUsingGET_19
2019-04-18 09:27:10 -Generating unique operation named: removeUsingPOST_29
2019-04-18 09:27:10 -Generating unique operation named: removeUsingPOST_30
2019-04-18 09:27:10 -Generating unique operation named: saveUsingPOST_17
2019-04-18 09:27:10 -Generating unique operation named: updateUsingGET_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPOST_17
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPUT_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 09:27:10 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 09:27:10 -Generating unique operation named: addUsingGET_17
2019-04-18 09:27:10 -Generating unique operation named: editUsingGET_18
2019-04-18 09:27:10 -Generating unique operation named: listUsingGET_20
2019-04-18 09:27:10 -Generating unique operation named: removeUsingPOST_31
2019-04-18 09:27:10 -Generating unique operation named: removeUsingPOST_32
2019-04-18 09:27:10 -Generating unique operation named: saveUsingPOST_18
2019-04-18 09:27:10 -Generating unique operation named: updateUsingGET_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPOST_18
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPUT_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 09:27:10 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 09:27:10 -Starting Quartz Scheduler now
2019-04-18 09:27:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 09:27:10 -Starting...
2019-04-18 09:27:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 09:27:10 -Started.
2019-04-18 09:27:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 09:27:10 -Using a shared selector for servlet write/read
2019-04-18 09:27:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 09:27:10 -Started BootdoApplication in 34.96 seconds (JVM running for 35.805)
2019-04-18 09:27:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 09:27:11 -==> Parameters: 
2019-04-18 09:27:11 -<==      Total: 1
2019-04-18 09:27:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 09:27:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 09:27:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-04-18 09:27:53 -Enabling session validation scheduler...
2019-04-18 09:27:53 -请求地址 : http://localhost:8081/login;JSESSIONID=d9fd761b-d8cb-4ae3-8ac8-318441e72bef
2019-04-18 09:27:53 -HTTP METHOD : GET
2019-04-18 09:27:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 09:27:53 -参数 : [{}]
2019-04-18 09:27:53 -耗时 : 4
2019-04-18 09:27:53 -返回值 : login
2019-04-18 09:27:55 -请求地址 : http://localhost:8081/getVerify
2019-04-18 09:27:55 -HTTP METHOD : GET
2019-04-18 09:27:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 09:27:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2735f9a2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37eda534]
2019-04-18 09:28:00 -1601
2019-04-18 09:28:00 -耗时 : 5025
2019-04-18 09:28:00 -返回值 : null
2019-04-18 09:28:00 -请求地址 : http://localhost:8081/login
2019-04-18 09:28:00 -HTTP METHOD : GET
2019-04-18 09:28:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 09:28:00 -参数 : [{}]
2019-04-18 09:28:00 -耗时 : 1
2019-04-18 09:28:00 -返回值 : login
2019-04-18 09:28:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-18 09:28:06 -请求地址 : http://localhost:8081/login
2019-04-18 09:28:06 -HTTP METHOD : POST
2019-04-18 09:28:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 09:28:06 -参数 : [admin, 111111, 1601, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e77350e]
2019-04-18 09:28:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 09:28:06 -==> Parameters: admin(String)
2019-04-18 09:28:06 -<==      Total: 1
2019-04-18 09:28:06 -耗时 : 445
2019-04-18 09:28:06 -返回值 : {msg=操作成功, code=0}
2019-04-18 09:28:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 09:28:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 09:28:07 -==> Parameters: 1(Long), admin(String), 登录(String), 445(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 09:28:07.016(Timestamp)
2019-04-18 09:28:07 -请求地址 : http://localhost:8081/index
2019-04-18 09:28:07 -HTTP METHOD : GET
2019-04-18 09:28:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 09:28:07 -参数 : [{}]
2019-04-18 09:28:07 -<==    Updates: 1
2019-04-18 09:28:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 09:28:07 -==> Parameters: 1(Long)
2019-04-18 09:28:08 -<==      Total: 49
2019-04-18 09:28:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 09:28:08 -==> Parameters: 138(Long)
2019-04-18 09:28:08 -<==      Total: 1
2019-04-18 09:28:08 -耗时 : 638
2019-04-18 09:28:08 -返回值 : index_v1
2019-04-18 09:28:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 09:28:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 638(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 09:28:08.269(Timestamp)
2019-04-18 09:28:08 -<==    Updates: 1
2019-04-18 09:28:08 -请求地址 : http://localhost:8081/main
2019-04-18 09:28:08 -HTTP METHOD : GET
2019-04-18 09:28:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 09:28:08 -参数 : []
2019-04-18 09:28:08 -耗时 : 3
2019-04-18 09:28:08 -返回值 : main
2019-04-18 09:28:09 -请求地址 : http://localhost:8081/main
2019-04-18 09:28:09 -HTTP METHOD : GET
2019-04-18 09:28:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 09:28:09 -参数 : []
2019-04-18 09:28:09 -耗时 : 1
2019-04-18 09:28:09 -返回值 : main
2019-04-18 09:28:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 09:28:09 -HTTP METHOD : GET
2019-04-18 09:28:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 09:28:09 -参数 : []
2019-04-18 09:28:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 09:28:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 09:28:09 -<==      Total: 0
2019-04-18 09:28:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 09:28:09 -==> Parameters: 1(Long), 0(String)
2019-04-18 09:28:09 -<==      Total: 1
2019-04-18 09:28:09 -耗时 : 110
2019-04-18 09:28:09 -返回值 : com.bootdo.common.utils.PageUtils@e75881c
2019-04-18 09:28:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 09:28:14 -==> Parameters: 1(Long)
2019-04-18 09:28:14 -<==      Total: 93
2019-04-18 09:28:14 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 09:28:14 -HTTP METHOD : GET
2019-04-18 09:28:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 09:28:14 -参数 : []
2019-04-18 09:28:14 -耗时 : 11
2019-04-18 09:28:14 -返回值 : charts/countDD
2019-04-18 09:28:14 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 09:28:14 -HTTP METHOD : GET
2019-04-18 09:28:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 09:28:14 -参数 : []
2019-04-18 09:28:14 -耗时 : 13
2019-04-18 09:28:14 -返回值 : charts/tableDD
2019-04-18 09:28:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 09:28:15 -HTTP METHOD : GET
2019-04-18 09:28:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 09:28:15 -参数 : [userType]
2019-04-18 09:28:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 09:28:15 -==> Parameters: userType(String)
2019-04-18 09:28:15 -<==      Total: 4
2019-04-18 09:28:15 -耗时 : 94
2019-04-18 09:28:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 09:28:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 09:28:20 -HTTP METHOD : GET
2019-04-18 09:28:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 09:28:20 -参数 : []
2019-04-18 09:28:20 -耗时 : 1
2019-04-18 09:28:20 -返回值 : system/dept/deptTree
2019-04-18 09:28:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 09:28:20 -HTTP METHOD : GET
2019-04-18 09:28:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 09:28:20 -参数 : []
2019-04-18 09:28:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 09:28:20 -==> Parameters: 
2019-04-18 09:28:20 -<==      Total: 3
2019-04-18 09:28:20 -耗时 : 79
2019-04-18 09:28:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 09:28:27 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-18 09:28:27 -HTTP METHOD : GET
2019-04-18 09:28:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-18 09:28:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@77011db1, com.bootdo.moneyLog.vo.HeatLogVo@28efb9fe, com.bootdo.moneyLog.vo.WaterLogVo@1ba579e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@28d01cd]
2019-04-18 09:28:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? 
2019-04-18 09:28:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 1-0001(String)
2019-04-18 09:28:28 -<==      Total: 1
2019-04-18 09:28:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? and user_id = ? 
2019-04-18 09:28:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 1-0001(String)
2019-04-18 09:28:28 -<==      Total: 0
2019-04-18 09:28:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? and user_id = ? 
2019-04-18 09:28:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 1-0001(String)
2019-04-18 09:28:28 -<==      Total: 0
2019-04-18 09:28:29 -耗时 : 1399
2019-04-18 09:28:29 -返回值 : null
2019-04-18 09:30:19 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-18 09:30:19 -HTTP METHOD : GET
2019-04-18 09:30:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-18 09:30:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@32232493, com.bootdo.moneyLog.vo.HeatLogVo@16c9a93e, com.bootdo.moneyLog.vo.WaterLogVo@3bbad20a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ce2e31]
2019-04-18 09:30:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 09:30:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 09:30:19 -<==      Total: 3
2019-04-18 09:30:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 09:30:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 09:30:19 -<==      Total: 1
2019-04-18 09:30:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 09:30:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 09:30:19 -<==      Total: 1
2019-04-18 09:30:19 -耗时 : 129
2019-04-18 09:30:19 -返回值 : null
2019-04-18 09:52:47 -请求地址 : http://localhost:8081/index
2019-04-18 09:52:47 -HTTP METHOD : GET
2019-04-18 09:52:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 09:52:47 -参数 : [{}]
2019-04-18 09:52:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 09:52:47 -==> Parameters: 1(Long)
2019-04-18 09:52:47 -<==      Total: 49
2019-04-18 09:52:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 09:52:47 -==> Parameters: 138(Long)
2019-04-18 09:52:47 -<==      Total: 1
2019-04-18 09:52:47 -耗时 : 39
2019-04-18 09:52:47 -返回值 : index_v1
2019-04-18 09:52:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 09:52:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 09:52:47.857(Timestamp)
2019-04-18 09:52:47 -<==    Updates: 1
2019-04-18 09:52:48 -请求地址 : http://localhost:8081/main
2019-04-18 09:52:48 -HTTP METHOD : GET
2019-04-18 09:52:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 09:52:48 -参数 : []
2019-04-18 09:52:48 -耗时 : 0
2019-04-18 09:52:48 -返回值 : main
2019-04-18 09:52:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 09:52:49 -HTTP METHOD : GET
2019-04-18 09:52:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 09:52:49 -参数 : []
2019-04-18 09:52:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 09:52:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 09:52:49 -<==      Total: 0
2019-04-18 09:52:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 09:52:49 -==> Parameters: 1(Long), 0(String)
2019-04-18 09:52:49 -<==      Total: 1
2019-04-18 09:52:49 -耗时 : 23
2019-04-18 09:52:49 -返回值 : com.bootdo.common.utils.PageUtils@76c2ab83
2019-04-18 09:52:49 -请求地址 : http://localhost:8081/main
2019-04-18 09:52:49 -HTTP METHOD : GET
2019-04-18 09:52:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 09:52:49 -参数 : []
2019-04-18 09:52:49 -耗时 : 1
2019-04-18 09:52:49 -返回值 : main
2019-04-18 09:52:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 09:52:52 -==> Parameters: 1(Long)
2019-04-18 09:52:52 -<==      Total: 93
2019-04-18 09:52:52 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 09:52:52 -HTTP METHOD : GET
2019-04-18 09:52:52 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 09:52:52 -参数 : []
2019-04-18 09:52:52 -耗时 : 0
2019-04-18 09:52:52 -返回值 : charts/countDD
2019-04-18 09:52:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 09:52:53 -HTTP METHOD : GET
2019-04-18 09:52:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 09:52:53 -参数 : [userType]
2019-04-18 09:52:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 09:52:53 -==> Parameters: userType(String)
2019-04-18 09:52:53 -<==      Total: 4
2019-04-18 09:52:53 -耗时 : 7
2019-04-18 09:52:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 09:53:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 09:53:01 -HTTP METHOD : GET
2019-04-18 09:53:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 09:53:01 -参数 : []
2019-04-18 09:53:01 -耗时 : 3
2019-04-18 09:53:01 -返回值 : system/dept/deptTree
2019-04-18 09:53:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 09:53:01 -HTTP METHOD : GET
2019-04-18 09:53:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 09:53:01 -参数 : []
2019-04-18 09:53:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 09:53:01 -==> Parameters: 
2019-04-18 09:53:01 -<==      Total: 3
2019-04-18 09:53:01 -耗时 : 5
2019-04-18 09:53:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 09:53:03 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-18 09:53:03 -HTTP METHOD : GET
2019-04-18 09:53:03 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-18 09:53:03 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4c50e589, com.bootdo.moneyLog.vo.HeatLogVo@498971b0, com.bootdo.moneyLog.vo.WaterLogVo@4e2ecb97, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1dcba040]
2019-04-18 09:53:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-18 09:53:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-18 09:53:03 -<==      Total: 3
2019-04-18 09:53:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-18 09:53:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-18 09:53:03 -<==      Total: 1
2019-04-18 09:53:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-18 09:53:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-18 09:53:03 -<==      Total: 1
2019-04-18 09:53:03 -耗时 : 39
2019-04-18 09:53:03 -返回值 : null
2019-04-18 09:53:13 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 09:58:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-04-18 10:18:16 -Starting BootdoApplication on ZJZL-20180906VX with PID 1904 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:18:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:18:16 -The following profiles are active: dev
2019-04-18 10:18:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:18:16 CST 2019]; root of context hierarchy
2019-04-18 10:18:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:18:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:18:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:18:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:18:25 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:18:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:18:25 -Starting service [Tomcat]
2019-04-18 10:18:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:18:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:18:26 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:18:26 -Root WebApplicationContext: initialization completed in 9668 ms
2019-04-18 10:18:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:18:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:18:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:18:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:18:27 -Filter xssFilter was not registered (disabled)
2019-04-18 10:18:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:18:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:18:27 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:18:27 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:18:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:18:16 CST 2019]; root of context hierarchy
2019-04-18 10:18:31 -Using default implementation for ThreadExecutor
2019-04-18 10:18:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:18:31 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:18:31 -RAMJobStore initialized.
2019-04-18 10:18:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:18:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:18:31 -Quartz scheduler version: 2.2.1
2019-04-18 10:18:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-04-18 10:18:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:18:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:18:38 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:38 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:18:38 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:38 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:38 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:18:38 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:38 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:38 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:18:38 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:38 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:38 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:18:38 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:38 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:38 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:18:38 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:38 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:18:38 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:38 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:18:38 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:18:38 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:38 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:38 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:18:39 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:18:39 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:39 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:18:39 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:18:39 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:18:39 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:18:39 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:18:39 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:18:39 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:18:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:18:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:18:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:18:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:18:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:18:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:18:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:18:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:18:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:18:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:18:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:18:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:18:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:18:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:18:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:18:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:18:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:18:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:18:39 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:18:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:18:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:18:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:18:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:18:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:18:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:18:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:18:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:18:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:18:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:18:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:18:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:18:39 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:18:39 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:18:39 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:18:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:18:39 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:18:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:18:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:18:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:18:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:18:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:18:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:18:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:18:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:18:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:18:39 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:18:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:18:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:18:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:18:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:18:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:18:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:18:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:18:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:18:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:18:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:18:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:18:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:18:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:18:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:18:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:18:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:18:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:18:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:18:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:18:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:18:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:18:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:18:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:18:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:18:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:18:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:18:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:18:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:18:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:18:39 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:18:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:18:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:18:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:18:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:18:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:18:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:18:40 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:18:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:18:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:18:16 CST 2019]; root of context hierarchy
2019-04-18 10:18:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:18:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:18:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:18:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:18:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:18:44 -Registering beans for JMX exposure on startup
2019-04-18 10:18:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:18:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:18:44 -Starting beans in phase 2147483647
2019-04-18 10:18:44 -Context refreshed
2019-04-18 10:18:44 -Found 1 custom documentation plugin(s)
2019-04-18 10:18:44 -Scanning for api listing references
2019-04-18 10:18:45 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:18:45 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:18:45 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:18:45 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:18:45 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:18:45 -Generating unique operation named: addUsingGET_1
2019-04-18 10:18:45 -Generating unique operation named: editUsingGET_1
2019-04-18 10:18:45 -Generating unique operation named: listUsingGET_1
2019-04-18 10:18:45 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:18:46 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_3
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_3
2019-04-18 10:18:46 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_3
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_4
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_4
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_4
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:18:46 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_5
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_5
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_5
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_6
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_6
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_7
2019-04-18 10:18:46 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_7
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:18:46 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_7
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_8
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_8
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:18:46 -Generating unique operation named: addUsingGET_8
2019-04-18 10:18:46 -Generating unique operation named: editUsingGET_9
2019-04-18 10:18:46 -Generating unique operation named: listUsingGET_9
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:18:46 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:18:46 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:18:46 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:18:46 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_9
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_10
2019-04-18 10:18:47 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:18:47 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_10
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_11
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:18:47 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_10
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_11
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_12
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:18:47 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_11
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_12
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_13
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:18:47 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:18:47 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_12
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_13
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_14
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:18:47 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:18:47 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_13
2019-04-18 10:18:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_14
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_15
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_16
2019-04-18 10:18:47 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:18:47 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:18:47 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:18:47 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:18:47 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:18:47 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_14
2019-04-18 10:18:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_15
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_17
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:18:47 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:18:47 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:18:47 -Generating unique operation named: addUsingGET_15
2019-04-18 10:18:47 -Generating unique operation named: editUsingGET_16
2019-04-18 10:18:47 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:18:47 -Generating unique operation named: listUsingGET_18
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:18:47 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:18:47 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:18:47 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:18:47 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:18:47 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:18:48 -Generating unique operation named: addUsingGET_16
2019-04-18 10:18:48 -Generating unique operation named: editUsingGET_17
2019-04-18 10:18:48 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:18:48 -Generating unique operation named: listUsingGET_19
2019-04-18 10:18:48 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:18:48 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:18:48 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:18:48 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:18:48 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:18:48 -Generating unique operation named: addUsingGET_17
2019-04-18 10:18:48 -Generating unique operation named: editUsingGET_18
2019-04-18 10:18:48 -Generating unique operation named: listUsingGET_20
2019-04-18 10:18:48 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:18:48 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:18:48 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:18:48 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:18:48 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:18:48 -Starting Quartz Scheduler now
2019-04-18 10:18:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:18:48 -Starting...
2019-04-18 10:18:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:18:48 -Started.
2019-04-18 10:18:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:18:48 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-18 10:18:48 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:18:48 -Stopping service [Tomcat]
2019-04-18 10:18:48 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-18 10:18:48 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-18 10:18:48 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-18 10:18:48 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-18 10:18:48 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-18 10:18:48 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:18:16 CST 2019]; root of context hierarchy
2019-04-18 10:18:48 -Stopping beans in phase 2147483647
2019-04-18 10:18:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:18:48 -Stopping...
2019-04-18 10:18:48 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:18:48 -Stopped.
2019-04-18 10:18:48 -Unregistering JMX-exposed beans on shutdown
2019-04-18 10:18:48 -Unregistering JMX-exposed beans
2019-04-18 10:18:48 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-18 10:18:48 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-18 10:18:48 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-18 10:18:48 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-18 10:18:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-18 10:18:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:18:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-18 10:18:48 -Shutting down Quartz Scheduler
2019-04-18 10:19:59 -Starting BootdoApplication on ZJZL-20180906VX with PID 10220 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:19:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:19:59 -The following profiles are active: dev
2019-04-18 10:20:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:20:00 CST 2019]; root of context hierarchy
2019-04-18 10:20:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:20:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:20:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:20:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:20:09 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:20:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:20:09 -Starting service [Tomcat]
2019-04-18 10:20:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:20:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:20:09 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:20:09 -Root WebApplicationContext: initialization completed in 9711 ms
2019-04-18 10:20:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:20:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:20:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:20:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:20:10 -Filter xssFilter was not registered (disabled)
2019-04-18 10:20:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:20:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:20:10 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:20:10 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:20:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:20:00 CST 2019]; root of context hierarchy
2019-04-18 10:20:14 -Using default implementation for ThreadExecutor
2019-04-18 10:20:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:20:14 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:20:14 -RAMJobStore initialized.
2019-04-18 10:20:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:20:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:20:14 -Quartz scheduler version: 2.2.1
2019-04-18 10:20:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-04-18 10:20:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:20:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:20:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:20:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:20:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:20:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:20:17 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:20:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:20:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:20:17 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:20:17 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:20:17 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:20:17 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:20:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:20:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:20:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:20:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:20:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:20:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:20:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:20:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:20:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:20:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:20:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:20:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:20:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:20:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:20:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:20:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:20:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:20:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:20:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:20:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:20:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:20:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:20:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:20:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:20:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:20:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:20:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:20:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:20:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:20:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:20:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:20:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:20:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:20:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:20:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:20:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:20:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:20:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:20:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:20:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:20:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:20:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:20:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:20:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:20:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:20:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:20:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:20:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:20:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:20:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:20:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:20:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:20:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:20:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:20:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:20:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:20:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:20:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:20:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:20:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:20:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:20:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:20:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:20:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:20:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:20:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:20:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:20:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:20:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:20:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:20:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:20:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:20:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:20:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:20:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:20:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:20:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:20:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:20:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:20:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:20:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:20:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:20:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:20:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:20:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:20:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:20:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:20:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:20:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:20:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:20:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:20:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:20:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:20:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:20:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:20:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:20:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:20:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:20:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:20:00 CST 2019]; root of context hierarchy
2019-04-18 10:20:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:20:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:20:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:20:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:20:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:20:22 -Registering beans for JMX exposure on startup
2019-04-18 10:20:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:20:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:20:22 -Starting beans in phase 2147483647
2019-04-18 10:20:22 -Context refreshed
2019-04-18 10:20:22 -Found 1 custom documentation plugin(s)
2019-04-18 10:20:22 -Scanning for api listing references
2019-04-18 10:20:22 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:20:22 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:20:22 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:20:22 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:20:23 -Generating unique operation named: addUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:20:23 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:20:23 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:20:23 -Generating unique operation named: addUsingGET_2
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_2
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_2
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:20:23 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:20:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: addUsingGET_3
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_3
2019-04-18 10:20:23 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_3
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:20:23 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:20:23 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:20:23 -Generating unique operation named: addUsingGET_4
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_4
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_4
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:20:23 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:20:23 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:20:23 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:20:23 -Generating unique operation named: addUsingGET_5
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_5
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_5
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:20:23 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:20:23 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:20:23 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:20:23 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:20:23 -Generating unique operation named: editUsingGET_6
2019-04-18 10:20:23 -Generating unique operation named: listUsingGET_6
2019-04-18 10:20:23 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_6
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_7
2019-04-18 10:20:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_7
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:20:24 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:20:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_7
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_8
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_8
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:20:24 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_8
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_9
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_9
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:20:24 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_9
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_10
2019-04-18 10:20:24 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:20:24 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_10
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_11
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:20:24 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_10
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_11
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_12
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:20:24 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:20:24 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_11
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_12
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_13
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:20:24 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:20:24 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_12
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_13
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_14
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:20:24 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:20:24 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:20:24 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:20:24 -Generating unique operation named: addUsingGET_13
2019-04-18 10:20:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:20:24 -Generating unique operation named: editUsingGET_14
2019-04-18 10:20:24 -Generating unique operation named: listUsingGET_15
2019-04-18 10:20:24 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:20:25 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:20:25 -Generating unique operation named: listUsingGET_16
2019-04-18 10:20:25 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:20:25 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:20:25 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:20:25 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:20:25 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:20:25 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:20:25 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:20:25 -Generating unique operation named: addUsingGET_14
2019-04-18 10:20:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:20:25 -Generating unique operation named: editUsingGET_15
2019-04-18 10:20:25 -Generating unique operation named: listUsingGET_17
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:20:25 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:20:25 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:20:25 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:20:25 -Generating unique operation named: addUsingGET_15
2019-04-18 10:20:25 -Generating unique operation named: editUsingGET_16
2019-04-18 10:20:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:20:25 -Generating unique operation named: listUsingGET_18
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:20:25 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:20:25 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:20:25 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:20:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:20:25 -Generating unique operation named: addUsingGET_16
2019-04-18 10:20:25 -Generating unique operation named: editUsingGET_17
2019-04-18 10:20:25 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:20:25 -Generating unique operation named: listUsingGET_19
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:20:25 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:20:25 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:20:25 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:20:25 -Generating unique operation named: addUsingGET_17
2019-04-18 10:20:25 -Generating unique operation named: editUsingGET_18
2019-04-18 10:20:25 -Generating unique operation named: listUsingGET_20
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:20:25 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:20:25 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:20:25 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:20:25 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:20:25 -Starting Quartz Scheduler now
2019-04-18 10:20:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:20:25 -Starting...
2019-04-18 10:20:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:20:25 -Started.
2019-04-18 10:20:25 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:20:25 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-18 10:20:25 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:20:25 -Stopping service [Tomcat]
2019-04-18 10:20:25 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-18 10:20:25 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-18 10:20:25 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-18 10:20:25 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-18 10:20:25 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-18 10:20:25 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:20:00 CST 2019]; root of context hierarchy
2019-04-18 10:20:25 -Stopping beans in phase 2147483647
2019-04-18 10:20:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:20:25 -Stopping...
2019-04-18 10:20:25 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:20:25 -Stopped.
2019-04-18 10:20:25 -Unregistering JMX-exposed beans on shutdown
2019-04-18 10:20:25 -Unregistering JMX-exposed beans
2019-04-18 10:20:25 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-18 10:20:25 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-18 10:20:25 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-18 10:20:25 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-18 10:20:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-18 10:20:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:20:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-18 10:20:25 -Shutting down Quartz Scheduler
2019-04-18 10:27:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 8568 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:27:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:27:20 -The following profiles are active: dev
2019-04-18 10:27:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:27:20 CST 2019]; root of context hierarchy
2019-04-18 10:27:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:27:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:25 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:27:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:27:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:27:28 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:27:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:27:28 -Starting service [Tomcat]
2019-04-18 10:27:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:27:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:27:28 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:27:28 -Root WebApplicationContext: initialization completed in 7493 ms
2019-04-18 10:27:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:27:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:27:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:27:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:27:29 -Filter xssFilter was not registered (disabled)
2019-04-18 10:27:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:27:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:27:29 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:27:29 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:27:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:27:20 CST 2019]; root of context hierarchy
2019-04-18 10:27:32 -Using default implementation for ThreadExecutor
2019-04-18 10:27:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:27:32 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:27:32 -RAMJobStore initialized.
2019-04-18 10:27:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:27:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:27:32 -Quartz scheduler version: 2.2.1
2019-04-18 10:27:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b0e031b
2019-04-18 10:27:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:27:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:27:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:27:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:27:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:27:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:27:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:27:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:27:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:27:35 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:27:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:27:35 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:27:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:27:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:27:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:27:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:27:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:27:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:27:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:27:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:27:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:27:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:27:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:27:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:27:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:27:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:27:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:27:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:27:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:27:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:27:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:27:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:27:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:27:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:27:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:27:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:27:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:27:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:27:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:27:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:27:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:27:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:27:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:27:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:27:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:27:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:27:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:27:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:27:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:27:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:27:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:27:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:27:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:27:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:27:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:27:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:27:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:27:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:27:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:27:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:27:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:27:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:27:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:27:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:27:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:27:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:27:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:27:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:27:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:27:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:27:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:27:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:27:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:27:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:27:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:27:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:27:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:27:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:27:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:27:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:27:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:27:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:27:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:27:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:27:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:27:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:27:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:27:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:27:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:27:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:27:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:27:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:27:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:27:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:27:36 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:27:36 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:27:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:27:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:27:20 CST 2019]; root of context hierarchy
2019-04-18 10:27:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:27:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:27:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:27:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:27:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:27:39 -Registering beans for JMX exposure on startup
2019-04-18 10:27:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:27:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:27:39 -Starting beans in phase 2147483647
2019-04-18 10:27:39 -Context refreshed
2019-04-18 10:27:39 -Found 1 custom documentation plugin(s)
2019-04-18 10:27:39 -Scanning for api listing references
2019-04-18 10:27:40 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:27:40 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:27:40 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:27:40 -Generating unique operation named: addUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: editUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: listUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:27:40 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:27:40 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:27:40 -Generating unique operation named: addUsingGET_2
2019-04-18 10:27:40 -Generating unique operation named: editUsingGET_2
2019-04-18 10:27:40 -Generating unique operation named: listUsingGET_2
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:27:40 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:27:40 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: addUsingGET_3
2019-04-18 10:27:40 -Generating unique operation named: editUsingGET_3
2019-04-18 10:27:40 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:27:40 -Generating unique operation named: listUsingGET_3
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:27:40 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:27:40 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:27:40 -Generating unique operation named: addUsingGET_4
2019-04-18 10:27:40 -Generating unique operation named: editUsingGET_4
2019-04-18 10:27:40 -Generating unique operation named: listUsingGET_4
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:27:40 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:27:40 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:27:40 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:27:40 -Generating unique operation named: addUsingGET_5
2019-04-18 10:27:40 -Generating unique operation named: editUsingGET_5
2019-04-18 10:27:40 -Generating unique operation named: listUsingGET_5
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:27:40 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:27:40 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:27:40 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:27:40 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_6
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_6
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_7
2019-04-18 10:27:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_7
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:27:41 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:27:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_7
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_8
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_8
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:27:41 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_8
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_9
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_9
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:27:41 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_9
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_10
2019-04-18 10:27:41 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:27:41 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_10
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_11
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:27:41 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_10
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_11
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_12
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:27:41 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:27:41 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_11
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_12
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_13
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:27:41 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:27:41 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_12
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_13
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_14
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:27:41 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:27:41 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:27:41 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:27:41 -Generating unique operation named: addUsingGET_13
2019-04-18 10:27:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:27:41 -Generating unique operation named: editUsingGET_14
2019-04-18 10:27:41 -Generating unique operation named: listUsingGET_15
2019-04-18 10:27:41 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:27:42 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:27:42 -Generating unique operation named: listUsingGET_16
2019-04-18 10:27:42 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:27:42 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:27:42 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:27:42 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:27:42 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:27:42 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:27:42 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:27:42 -Generating unique operation named: addUsingGET_14
2019-04-18 10:27:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:27:42 -Generating unique operation named: editUsingGET_15
2019-04-18 10:27:42 -Generating unique operation named: listUsingGET_17
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:27:42 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:27:42 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:27:42 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:27:42 -Generating unique operation named: addUsingGET_15
2019-04-18 10:27:42 -Generating unique operation named: editUsingGET_16
2019-04-18 10:27:42 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:27:42 -Generating unique operation named: listUsingGET_18
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:27:42 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:27:42 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:27:42 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:27:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:27:42 -Generating unique operation named: addUsingGET_16
2019-04-18 10:27:42 -Generating unique operation named: editUsingGET_17
2019-04-18 10:27:42 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:27:42 -Generating unique operation named: listUsingGET_19
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:27:42 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:27:42 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:27:42 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:27:42 -Generating unique operation named: addUsingGET_17
2019-04-18 10:27:42 -Generating unique operation named: editUsingGET_18
2019-04-18 10:27:42 -Generating unique operation named: listUsingGET_20
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:27:42 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:27:42 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:27:42 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:27:42 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:27:43 -Starting Quartz Scheduler now
2019-04-18 10:27:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:27:43 -Starting...
2019-04-18 10:27:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:27:43 -Started.
2019-04-18 10:27:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:27:43 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-18 10:27:43 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:27:43 -Stopping service [Tomcat]
2019-04-18 10:27:43 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-18 10:27:43 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-18 10:27:43 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-18 10:27:43 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-18 10:27:43 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-18 10:27:43 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:27:20 CST 2019]; root of context hierarchy
2019-04-18 10:27:43 -Stopping beans in phase 2147483647
2019-04-18 10:27:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:27:43 -Stopping...
2019-04-18 10:27:43 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:27:43 -Stopped.
2019-04-18 10:27:43 -Unregistering JMX-exposed beans on shutdown
2019-04-18 10:27:43 -Unregistering JMX-exposed beans
2019-04-18 10:27:43 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-18 10:27:43 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-18 10:27:43 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-18 10:27:43 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-18 10:27:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-18 10:27:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:27:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-18 10:27:43 -Shutting down Quartz Scheduler
2019-04-18 10:28:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 9272 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:28:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:28:57 -The following profiles are active: dev
2019-04-18 10:28:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:28:58 CST 2019]; root of context hierarchy
2019-04-18 10:29:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:29:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:03 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:29:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:29:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:29:04 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:29:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:29:04 -Starting service [Tomcat]
2019-04-18 10:29:04 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:29:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:29:05 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:29:05 -Root WebApplicationContext: initialization completed in 7290 ms
2019-04-18 10:29:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:29:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:29:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:29:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:29:05 -Filter xssFilter was not registered (disabled)
2019-04-18 10:29:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:29:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:29:05 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:29:05 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:29:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:28:58 CST 2019]; root of context hierarchy
2019-04-18 10:29:09 -Using default implementation for ThreadExecutor
2019-04-18 10:29:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:29:09 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:29:09 -RAMJobStore initialized.
2019-04-18 10:29:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:29:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:29:09 -Quartz scheduler version: 2.2.1
2019-04-18 10:29:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-18 10:29:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:29:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:29:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:29:12 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:29:12 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:29:12 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:29:12 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:29:12 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:29:12 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:29:12 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:29:12 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:29:12 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:29:12 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:29:12 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:29:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:29:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:29:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:29:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:29:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:29:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:29:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:29:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:29:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:29:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:29:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:29:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:29:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:29:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:29:12 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:29:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:29:12 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:29:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:29:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:29:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:29:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:29:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:29:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:29:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:29:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:29:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:29:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:29:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:29:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:29:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:29:12 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:29:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:29:12 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:29:12 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:29:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:29:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:29:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:29:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:29:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:29:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:29:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:29:12 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:29:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:29:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:29:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:29:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:29:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:29:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:29:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:29:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:29:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:29:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:29:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:29:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:29:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:29:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:29:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:29:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:29:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:29:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:29:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:29:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:29:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:29:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:29:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:29:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:29:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:29:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:29:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:29:12 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:29:12 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:29:12 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:29:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:29:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:29:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:29:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:29:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:29:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:29:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:29:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:29:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:29:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:28:58 CST 2019]; root of context hierarchy
2019-04-18 10:29:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:29:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:29:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:29:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:29:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:29:16 -Registering beans for JMX exposure on startup
2019-04-18 10:29:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:29:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:29:16 -Starting beans in phase 2147483647
2019-04-18 10:29:16 -Context refreshed
2019-04-18 10:29:16 -Found 1 custom documentation plugin(s)
2019-04-18 10:29:16 -Scanning for api listing references
2019-04-18 10:29:16 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:29:16 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:29:16 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:29:16 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:29:16 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:29:16 -Generating unique operation named: addUsingGET_1
2019-04-18 10:29:16 -Generating unique operation named: editUsingGET_1
2019-04-18 10:29:16 -Generating unique operation named: listUsingGET_1
2019-04-18 10:29:16 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:29:16 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:29:16 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:29:16 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:29:16 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:29:16 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:29:17 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_3
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_3
2019-04-18 10:29:17 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_3
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_4
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_4
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_4
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:29:17 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_5
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_5
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_5
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_6
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_6
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_7
2019-04-18 10:29:17 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_7
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:29:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_7
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_8
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_8
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_8
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_9
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_9
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:29:17 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:29:17 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_9
2019-04-18 10:29:17 -Generating unique operation named: editUsingGET_10
2019-04-18 10:29:17 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:29:17 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_10
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:29:17 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:29:17 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:29:17 -Generating unique operation named: listUsingGET_11
2019-04-18 10:29:17 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:29:17 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:29:17 -Generating unique operation named: addUsingGET_10
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_11
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_12
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:29:18 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_11
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_12
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_13
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:29:18 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_12
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_13
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_14
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:29:18 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_13
2019-04-18 10:29:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_14
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_15
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_16
2019-04-18 10:29:18 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:29:18 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:29:18 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:29:18 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:29:18 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_14
2019-04-18 10:29:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_15
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_17
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:29:18 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:29:18 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_15
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_16
2019-04-18 10:29:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_18
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:29:18 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:29:18 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:29:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_16
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_17
2019-04-18 10:29:18 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_19
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:29:18 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:29:18 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:29:18 -Generating unique operation named: addUsingGET_17
2019-04-18 10:29:18 -Generating unique operation named: editUsingGET_18
2019-04-18 10:29:18 -Generating unique operation named: listUsingGET_20
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:29:18 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:29:18 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:29:18 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:29:18 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:29:18 -Starting Quartz Scheduler now
2019-04-18 10:29:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:29:18 -Starting...
2019-04-18 10:29:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:29:18 -Started.
2019-04-18 10:29:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:29:18 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-18 10:29:18 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:29:18 -Stopping service [Tomcat]
2019-04-18 10:29:19 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-18 10:29:19 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-18 10:29:19 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-18 10:29:19 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-18 10:29:19 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-18 10:29:19 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:28:58 CST 2019]; root of context hierarchy
2019-04-18 10:29:19 -Stopping beans in phase 2147483647
2019-04-18 10:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:29:19 -Stopping...
2019-04-18 10:29:19 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:29:19 -Stopped.
2019-04-18 10:29:19 -Unregistering JMX-exposed beans on shutdown
2019-04-18 10:29:19 -Unregistering JMX-exposed beans
2019-04-18 10:29:19 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-18 10:29:19 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-18 10:29:19 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-18 10:29:19 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-18 10:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-18 10:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:29:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-18 10:29:19 -Shutting down Quartz Scheduler
2019-04-18 10:30:27 -Starting BootdoApplication on ZJZL-20180906VX with PID 6788 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:30:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:30:27 -The following profiles are active: dev
2019-04-18 10:30:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:30:28 CST 2019]; root of context hierarchy
2019-04-18 10:30:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:30:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:30:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:30:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:30:34 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:30:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:30:34 -Starting service [Tomcat]
2019-04-18 10:30:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:30:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:30:35 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:30:35 -Root WebApplicationContext: initialization completed in 7197 ms
2019-04-18 10:30:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:30:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:30:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:30:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:30:35 -Filter xssFilter was not registered (disabled)
2019-04-18 10:30:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:30:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:30:35 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:30:35 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:30:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:30:28 CST 2019]; root of context hierarchy
2019-04-18 10:30:39 -Using default implementation for ThreadExecutor
2019-04-18 10:30:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:30:39 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:30:39 -RAMJobStore initialized.
2019-04-18 10:30:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:30:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:30:39 -Quartz scheduler version: 2.2.1
2019-04-18 10:30:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-04-18 10:30:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:30:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:30:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:30:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:30:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:30:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:30:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:30:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:30:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:30:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:30:41 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:30:41 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:30:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:30:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:30:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:30:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:30:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:30:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:30:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:30:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:30:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:30:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:30:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:30:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:30:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:30:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:30:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:30:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:30:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:30:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:30:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:30:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:30:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:30:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:30:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:30:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:30:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:41 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:30:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:30:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:30:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:30:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:30:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:30:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:30:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:30:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:30:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:30:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:30:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:30:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:30:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:30:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:30:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:30:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:30:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:30:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:30:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:30:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:30:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:30:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:30:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:30:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:30:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:30:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:30:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:30:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:30:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:30:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:30:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:30:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:30:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:30:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:30:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:30:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:30:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:30:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:30:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:30:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:30:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:30:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:30:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:30:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:30:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:30:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:30:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:30:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:30:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:30:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:30:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:30:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:30:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:30:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:30:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:30:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:30:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:30:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:30:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:30:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:30:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:30:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:30:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:30:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:30:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:30:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:30:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:30:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:30:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:30:28 CST 2019]; root of context hierarchy
2019-04-18 10:30:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:30:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:30:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:30:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:30:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:30:45 -Registering beans for JMX exposure on startup
2019-04-18 10:30:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:30:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:30:46 -Starting beans in phase 2147483647
2019-04-18 10:30:46 -Context refreshed
2019-04-18 10:30:46 -Found 1 custom documentation plugin(s)
2019-04-18 10:30:46 -Scanning for api listing references
2019-04-18 10:30:46 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:30:46 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:30:46 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:30:46 -Generating unique operation named: addUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: editUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: listUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:30:46 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:30:46 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:30:46 -Generating unique operation named: addUsingGET_2
2019-04-18 10:30:46 -Generating unique operation named: editUsingGET_2
2019-04-18 10:30:46 -Generating unique operation named: listUsingGET_2
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:30:46 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:30:46 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:30:46 -Generating unique operation named: addUsingGET_3
2019-04-18 10:30:46 -Generating unique operation named: editUsingGET_3
2019-04-18 10:30:46 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:30:46 -Generating unique operation named: listUsingGET_3
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:30:46 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:30:46 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:30:46 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:30:46 -Generating unique operation named: addUsingGET_4
2019-04-18 10:30:46 -Generating unique operation named: editUsingGET_4
2019-04-18 10:30:46 -Generating unique operation named: listUsingGET_4
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:30:46 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:30:46 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:30:47 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_5
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_5
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_5
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_6
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_6
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_7
2019-04-18 10:30:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_7
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:30:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_7
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_8
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_8
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_8
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_9
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_9
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_9
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_10
2019-04-18 10:30:47 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:30:47 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_10
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_11
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:30:47 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_10
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_11
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_12
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:30:47 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:30:47 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_11
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_12
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_13
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:30:47 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:30:47 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:30:47 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:30:47 -Generating unique operation named: addUsingGET_12
2019-04-18 10:30:47 -Generating unique operation named: editUsingGET_13
2019-04-18 10:30:47 -Generating unique operation named: listUsingGET_14
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:30:47 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:30:48 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:30:48 -Generating unique operation named: addUsingGET_13
2019-04-18 10:30:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:30:48 -Generating unique operation named: editUsingGET_14
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_15
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_16
2019-04-18 10:30:48 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:30:48 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:30:48 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:30:48 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:30:48 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:30:48 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:30:48 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:30:48 -Generating unique operation named: addUsingGET_14
2019-04-18 10:30:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:30:48 -Generating unique operation named: editUsingGET_15
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_17
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:30:48 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:30:48 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:30:48 -Generating unique operation named: addUsingGET_15
2019-04-18 10:30:48 -Generating unique operation named: editUsingGET_16
2019-04-18 10:30:48 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_18
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:30:48 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:30:48 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:30:48 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:30:48 -Generating unique operation named: addUsingGET_16
2019-04-18 10:30:48 -Generating unique operation named: editUsingGET_17
2019-04-18 10:30:48 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_19
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:30:48 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:30:48 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:30:48 -Generating unique operation named: addUsingGET_17
2019-04-18 10:30:48 -Generating unique operation named: editUsingGET_18
2019-04-18 10:30:48 -Generating unique operation named: listUsingGET_20
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:30:48 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:30:48 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:30:48 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:30:48 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:30:48 -Starting Quartz Scheduler now
2019-04-18 10:30:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:30:48 -Starting...
2019-04-18 10:30:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:30:48 -Started.
2019-04-18 10:30:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:30:48 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-18 10:30:48 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:30:48 -Stopping service [Tomcat]
2019-04-18 10:30:48 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-18 10:30:48 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-18 10:30:48 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-18 10:30:48 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-18 10:30:48 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-18 10:30:48 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 10:30:28 CST 2019]; root of context hierarchy
2019-04-18 10:30:48 -Stopping beans in phase 2147483647
2019-04-18 10:30:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:30:48 -Stopping...
2019-04-18 10:30:48 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:30:48 -Stopped.
2019-04-18 10:30:48 -Unregistering JMX-exposed beans on shutdown
2019-04-18 10:30:48 -Unregistering JMX-exposed beans
2019-04-18 10:30:48 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-18 10:30:48 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-18 10:30:48 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-18 10:30:48 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-18 10:30:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-18 10:30:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-18 10:30:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-18 10:30:48 -Shutting down Quartz Scheduler
2019-04-18 10:46:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 3056 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 10:46:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 10:46:46 -The following profiles are active: dev
2019-04-18 10:46:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 10:46:46 CST 2019]; root of context hierarchy
2019-04-18 10:46:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 10:46:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$464ea31d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$38a7d1c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 10:46:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 10:46:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 10:46:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 10:46:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 10:46:57 -Starting service [Tomcat]
2019-04-18 10:46:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 10:46:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 10:46:57 -Initializing Spring embedded WebApplicationContext
2019-04-18 10:46:57 -Root WebApplicationContext: initialization completed in 10854 ms
2019-04-18 10:46:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 10:46:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 10:46:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 10:46:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 10:46:58 -Filter xssFilter was not registered (disabled)
2019-04-18 10:46:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 10:46:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 10:46:58 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 10:46:58 -Servlet dispatcherServlet mapped to [/]
2019-04-18 10:47:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 10:46:46 CST 2019]; root of context hierarchy
2019-04-18 10:47:03 -Using default implementation for ThreadExecutor
2019-04-18 10:47:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 10:47:03 -Quartz Scheduler v.2.2.1 created.
2019-04-18 10:47:03 -RAMJobStore initialized.
2019-04-18 10:47:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 10:47:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 10:47:03 -Quartz scheduler version: 2.2.1
2019-04-18 10:47:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@dc1fadd
2019-04-18 10:47:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 10:47:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 10:47:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 10:47:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 10:47:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 10:47:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 10:47:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 10:47:07 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 10:47:07 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 10:47:07 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 10:47:07 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 10:47:07 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 10:47:07 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 10:47:07 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 10:47:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 10:47:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 10:47:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 10:47:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 10:47:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 10:47:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 10:47:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 10:47:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:47:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 10:47:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 10:47:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 10:47:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 10:47:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 10:47:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 10:47:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 10:47:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 10:47:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 10:47:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 10:47:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 10:47:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 10:47:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 10:47:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 10:47:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 10:47:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 10:47:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 10:47:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 10:47:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 10:47:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:47:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 10:47:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 10:47:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 10:47:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 10:47:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:47:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 10:47:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 10:47:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:47:07 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:47:07 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 10:47:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 10:47:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 10:47:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 10:47:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 10:47:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 10:47:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 10:47:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 10:47:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 10:47:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 10:47:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 10:47:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 10:47:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 10:47:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 10:47:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 10:47:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 10:47:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 10:47:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 10:47:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 10:47:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 10:47:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 10:47:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 10:47:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 10:47:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 10:47:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 10:47:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 10:47:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 10:47:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:47:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 10:47:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 10:47:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 10:47:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 10:47:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 10:47:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 10:47:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 10:47:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 10:47:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 10:47:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 10:47:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 10:47:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 10:47:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 10:47:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 10:47:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 10:47:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 10:47:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 10:47:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 10:47:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 10:47:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 10:47:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 10:47:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 10:47:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 10:47:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 10:47:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 10:47:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:47:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 10:46:46 CST 2019]; root of context hierarchy
2019-04-18 10:47:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:47:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:47:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 10:47:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 10:47:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 10:47:13 -Registering beans for JMX exposure on startup
2019-04-18 10:47:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 10:47:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 10:47:13 -Starting beans in phase 2147483647
2019-04-18 10:47:13 -Context refreshed
2019-04-18 10:47:13 -Found 1 custom documentation plugin(s)
2019-04-18 10:47:13 -Scanning for api listing references
2019-04-18 10:47:13 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 10:47:13 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 10:47:13 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 10:47:13 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_1
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_2
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_3
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPUT_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 10:47:14 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_4
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_5
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_2
2019-04-18 10:47:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_3
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_3
2019-04-18 10:47:14 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_3
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_6
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_7
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPUT_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 10:47:14 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_4
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_4
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_4
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_8
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_9
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingGET_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPUT_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 10:47:14 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 10:47:14 -Generating unique operation named: ElecUsingGET_1
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_5
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_5
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_5
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_10
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_11
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingGET_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPUT_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 10:47:14 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_6
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_6
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_6
2019-04-18 10:47:14 -Generating unique operation named: addUsingGET_6
2019-04-18 10:47:14 -Generating unique operation named: editUsingGET_7
2019-04-18 10:47:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 10:47:14 -Generating unique operation named: listUsingGET_7
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_12
2019-04-18 10:47:14 -Generating unique operation named: removeUsingPOST_13
2019-04-18 10:47:14 -Generating unique operation named: saveUsingPOST_6
2019-04-18 10:47:14 -Generating unique operation named: updateUsingGET_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPOST_7
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPUT_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 10:47:14 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 10:47:14 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_7
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_8
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_8
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_14
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_15
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingGET_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPUT_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 10:47:15 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_8
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_9
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_9
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_16
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_17
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingGET_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPUT_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 10:47:15 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_9
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_10
2019-04-18 10:47:15 -Generating unique operation named: infoUsingGET_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingPOST_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingPUT_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 10:47:15 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_10
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_18
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_19
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_10
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_11
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_20
2019-04-18 10:47:15 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_10
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_11
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_12
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_21
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_10
2019-04-18 10:47:15 -Generating unique operation named: treeUsingGET_1
2019-04-18 10:47:15 -Generating unique operation named: treeUsingGET_2
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_11
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_11
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_12
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_13
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_22
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_23
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_11
2019-04-18 10:47:15 -Generating unique operation named: updateUsingGET_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_12
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPUT_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 10:47:15 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_12
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_13
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_14
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_24
2019-04-18 10:47:15 -Generating unique operation named: removeUsingPOST_25
2019-04-18 10:47:15 -Generating unique operation named: saveUsingPOST_12
2019-04-18 10:47:15 -Generating unique operation named: updateUsingGET_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPOST_13
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPUT_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 10:47:15 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 10:47:15 -Generating unique operation named: addUsingGET_13
2019-04-18 10:47:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 10:47:15 -Generating unique operation named: editUsingGET_14
2019-04-18 10:47:15 -Generating unique operation named: listUsingGET_15
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_13
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_14
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPOST_14
2019-04-18 10:47:16 -Generating unique operation named: listUsingGET_16
2019-04-18 10:47:16 -Generating unique operation named: listUsingHEAD_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingPOST_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingPUT_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingPATCH_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingDELETE_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingTRACE_1
2019-04-18 10:47:16 -Generating unique operation named: countDDUsingGET_1
2019-04-18 10:47:16 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 10:47:16 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 10:47:16 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 10:47:16 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 10:47:16 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 10:47:16 -Generating unique operation named: addUsingGET_14
2019-04-18 10:47:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 10:47:16 -Generating unique operation named: editUsingGET_15
2019-04-18 10:47:16 -Generating unique operation named: listUsingGET_17
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_26
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_15
2019-04-18 10:47:16 -Generating unique operation named: treeUsingGET_3
2019-04-18 10:47:16 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPOST_15
2019-04-18 10:47:16 -Generating unique operation named: addUsingGET_15
2019-04-18 10:47:16 -Generating unique operation named: editUsingGET_16
2019-04-18 10:47:16 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 10:47:16 -Generating unique operation named: listUsingGET_18
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_27
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_28
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_16
2019-04-18 10:47:16 -Generating unique operation named: updateUsingGET_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPOST_16
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPUT_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 10:47:16 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 10:47:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 10:47:16 -Generating unique operation named: addUsingGET_16
2019-04-18 10:47:16 -Generating unique operation named: editUsingGET_17
2019-04-18 10:47:16 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 10:47:16 -Generating unique operation named: listUsingGET_19
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_29
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_30
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_17
2019-04-18 10:47:16 -Generating unique operation named: updateUsingGET_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPOST_17
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPUT_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 10:47:16 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 10:47:16 -Generating unique operation named: addUsingGET_17
2019-04-18 10:47:16 -Generating unique operation named: editUsingGET_18
2019-04-18 10:47:16 -Generating unique operation named: listUsingGET_20
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_31
2019-04-18 10:47:16 -Generating unique operation named: removeUsingPOST_32
2019-04-18 10:47:16 -Generating unique operation named: saveUsingPOST_18
2019-04-18 10:47:16 -Generating unique operation named: updateUsingGET_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPOST_18
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPUT_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 10:47:16 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 10:47:16 -Starting Quartz Scheduler now
2019-04-18 10:47:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 10:47:16 -Starting...
2019-04-18 10:47:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 10:47:16 -Started.
2019-04-18 10:47:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 10:47:16 -Using a shared selector for servlet write/read
2019-04-18 10:47:16 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 10:47:16 -Started BootdoApplication in 31.558 seconds (JVM running for 32.439)
2019-04-18 10:47:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 10:47:17 -==> Parameters: 
2019-04-18 10:47:17 -<==      Total: 1
2019-04-18 10:47:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 10:47:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 10:47:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 99 ms
2019-04-18 10:47:46 -Enabling session validation scheduler...
2019-04-18 10:47:46 -请求地址 : http://localhost:8081/
2019-04-18 10:47:46 -HTTP METHOD : GET
2019-04-18 10:47:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-18 10:47:46 -参数 : [{}]
2019-04-18 10:47:46 -耗时 : 3
2019-04-18 10:47:46 -返回值 : redirect:/index
2019-04-18 10:47:46 -请求地址 : http://localhost:8081/login;JSESSIONID=8f2b1c99-5724-444b-92b7-b3f21d7f2f8a
2019-04-18 10:47:46 -HTTP METHOD : GET
2019-04-18 10:47:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 10:47:46 -参数 : [{}]
2019-04-18 10:47:46 -耗时 : 0
2019-04-18 10:47:46 -返回值 : login
2019-04-18 10:47:48 -请求地址 : http://localhost:8081/getVerify
2019-04-18 10:47:48 -HTTP METHOD : GET
2019-04-18 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 10:47:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38abb19a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36c358e1]
2019-04-18 10:47:54 -7094
2019-04-18 10:47:54 -耗时 : 5998
2019-04-18 10:47:54 -返回值 : null
2019-04-18 10:47:54 -请求地址 : http://localhost:8081/login
2019-04-18 10:47:54 -HTTP METHOD : GET
2019-04-18 10:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 10:47:54 -参数 : [{}]
2019-04-18 10:47:54 -耗时 : 1
2019-04-18 10:47:54 -返回值 : login
2019-04-18 10:48:04 -请求地址 : http://localhost:8081/login
2019-04-18 10:48:04 -HTTP METHOD : POST
2019-04-18 10:48:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 10:48:04 -参数 : [admin, 111111, 7094, org.apache.shiro.web.servlet.ShiroHttpServletRequest@558940fe]
2019-04-18 10:48:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 10:48:04 -==> Parameters: admin(String)
2019-04-18 10:48:04 -<==      Total: 1
2019-04-18 10:48:04 -耗时 : 213
2019-04-18 10:48:04 -返回值 : {msg=操作成功, code=0}
2019-04-18 10:48:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 10:48:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 10:48:05 -==> Parameters: 1(Long), admin(String), 登录(String), 213(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 10:48:05.0(Timestamp)
2019-04-18 10:48:05 -<==    Updates: 1
2019-04-18 10:48:05 -请求地址 : http://localhost:8081/index
2019-04-18 10:48:05 -HTTP METHOD : GET
2019-04-18 10:48:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 10:48:05 -参数 : [{}]
2019-04-18 10:48:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 10:48:05 -==> Parameters: 1(Long)
2019-04-18 10:48:05 -<==      Total: 49
2019-04-18 10:48:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 10:48:05 -==> Parameters: 138(Long)
2019-04-18 10:48:05 -<==      Total: 1
2019-04-18 10:48:05 -耗时 : 321
2019-04-18 10:48:05 -返回值 : index_v1
2019-04-18 10:48:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 10:48:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 321(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 10:48:05.833(Timestamp)
2019-04-18 10:48:05 -<==    Updates: 1
2019-04-18 10:48:06 -请求地址 : http://localhost:8081/main
2019-04-18 10:48:06 -HTTP METHOD : GET
2019-04-18 10:48:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 10:48:06 -参数 : []
2019-04-18 10:48:06 -耗时 : 0
2019-04-18 10:48:06 -返回值 : main
2019-04-18 10:48:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 10:48:08 -HTTP METHOD : GET
2019-04-18 10:48:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 10:48:08 -参数 : []
2019-04-18 10:48:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 10:48:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 10:48:08 -<==      Total: 0
2019-04-18 10:48:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 10:48:08 -==> Parameters: 1(Long), 0(String)
2019-04-18 10:48:08 -<==      Total: 1
2019-04-18 10:48:08 -耗时 : 64
2019-04-18 10:48:08 -返回值 : com.bootdo.common.utils.PageUtils@56300344
2019-04-18 10:48:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-18 10:48:08 -请求地址 : http://localhost:8081/main
2019-04-18 10:48:08 -HTTP METHOD : GET
2019-04-18 10:48:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 10:48:08 -参数 : []
2019-04-18 10:48:08 -耗时 : 1
2019-04-18 10:48:08 -返回值 : main
2019-04-18 10:48:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 10:48:18 -==> Parameters: 1(Long)
2019-04-18 10:48:18 -<==      Total: 93
2019-04-18 10:48:18 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 10:48:18 -HTTP METHOD : GET
2019-04-18 10:48:18 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 10:48:18 -参数 : []
2019-04-18 10:48:18 -耗时 : 16
2019-04-18 10:48:18 -返回值 : charts/tableDD
2019-04-18 10:48:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 10:48:25 -HTTP METHOD : GET
2019-04-18 10:48:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 10:48:25 -参数 : []
2019-04-18 10:48:25 -耗时 : 1
2019-04-18 10:48:25 -返回值 : system/dept/deptTree
2019-04-18 10:48:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 10:48:25 -HTTP METHOD : GET
2019-04-18 10:48:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 10:48:25 -参数 : []
2019-04-18 10:48:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 10:48:25 -==> Parameters: 
2019-04-18 10:48:25 -<==      Total: 3
2019-04-18 10:48:25 -耗时 : 78
2019-04-18 10:48:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 10:48:27 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-18 10:48:27 -HTTP METHOD : GET
2019-04-18 10:48:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-18 10:48:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5eb9caef, com.bootdo.moneyLog.vo.HeatLogVo@1de311c5, com.bootdo.moneyLog.vo.WaterLogVo@60f6be21, org.apache.shiro.web.servlet.ShiroHttpServletResponse@201cb0c0]
2019-04-18 10:48:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 10:48:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 10:48:28 -<==      Total: 3
2019-04-18 10:48:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 10:48:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 10:48:28 -<==      Total: 1
2019-04-18 10:48:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 10:48:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 10:48:28 -<==      Total: 1
2019-04-18 10:48:29 -耗时 : 1284
2019-04-18 10:48:29 -返回值 : null
2019-04-18 10:54:00 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-18 10:54:00 -HTTP METHOD : GET
2019-04-18 10:54:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-18 10:54:00 -参数 : []
2019-04-18 10:54:00 -耗时 : 13
2019-04-18 10:54:00 -返回值 : charts/tableElecMM
2019-04-18 10:54:46 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 10:54:46 -HTTP METHOD : GET
2019-04-18 10:54:46 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 10:54:46 -参数 : []
2019-04-18 10:54:46 -耗时 : 0
2019-04-18 10:54:46 -返回值 : charts/countYY
2019-04-18 10:54:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 10:54:46 -HTTP METHOD : GET
2019-04-18 10:54:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 10:54:46 -参数 : [userType]
2019-04-18 10:54:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 10:54:46 -==> Parameters: userType(String)
2019-04-18 10:54:46 -<==      Total: 4
2019-04-18 10:54:46 -耗时 : 58
2019-04-18 10:54:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 10:54:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 10:54:49 -HTTP METHOD : GET
2019-04-18 10:54:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 10:54:49 -参数 : []
2019-04-18 10:54:49 -耗时 : 12
2019-04-18 10:54:49 -返回值 : charts/tableElecYY
2019-04-18 11:02:00 -请求地址 : http://localhost:8081/index
2019-04-18 11:02:00 -HTTP METHOD : GET
2019-04-18 11:02:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:02:00 -参数 : [{}]
2019-04-18 11:02:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:02:00 -==> Parameters: 1(Long)
2019-04-18 11:02:00 -<==      Total: 49
2019-04-18 11:02:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:02:00 -==> Parameters: 138(Long)
2019-04-18 11:02:00 -<==      Total: 1
2019-04-18 11:02:00 -耗时 : 63
2019-04-18 11:02:00 -返回值 : index_v1
2019-04-18 11:02:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:02:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 63(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:02:00.383(Timestamp)
2019-04-18 11:02:00 -<==    Updates: 1
2019-04-18 11:02:00 -请求地址 : http://localhost:8081/main
2019-04-18 11:02:00 -HTTP METHOD : GET
2019-04-18 11:02:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:02:00 -参数 : []
2019-04-18 11:02:00 -耗时 : 0
2019-04-18 11:02:00 -返回值 : main
2019-04-18 11:02:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:02:01 -HTTP METHOD : GET
2019-04-18 11:02:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:02:01 -参数 : []
2019-04-18 11:02:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:02:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:02:01 -<==      Total: 0
2019-04-18 11:02:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:02:01 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:02:01 -<==      Total: 1
2019-04-18 11:02:01 -耗时 : 12
2019-04-18 11:02:01 -返回值 : com.bootdo.common.utils.PageUtils@7b7e9dff
2019-04-18 11:02:01 -请求地址 : http://localhost:8081/main
2019-04-18 11:02:01 -HTTP METHOD : GET
2019-04-18 11:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:02:01 -参数 : []
2019-04-18 11:02:01 -耗时 : 0
2019-04-18 11:02:01 -返回值 : main
2019-04-18 11:02:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 11:02:07 -==> Parameters: 1(Long)
2019-04-18 11:02:07 -<==      Total: 93
2019-04-18 11:02:07 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 11:02:07 -HTTP METHOD : GET
2019-04-18 11:02:07 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 11:02:07 -参数 : []
2019-04-18 11:02:07 -耗时 : 1
2019-04-18 11:02:07 -返回值 : charts/countYY
2019-04-18 11:02:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 11:02:08 -HTTP METHOD : GET
2019-04-18 11:02:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 11:02:08 -参数 : [userType]
2019-04-18 11:02:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 11:02:08 -==> Parameters: userType(String)
2019-04-18 11:02:08 -<==      Total: 4
2019-04-18 11:02:08 -耗时 : 5
2019-04-18 11:02:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 11:02:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:02:10 -HTTP METHOD : GET
2019-04-18 11:02:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:02:10 -参数 : []
2019-04-18 11:02:10 -耗时 : 1
2019-04-18 11:02:10 -返回值 : charts/tableElecYY
2019-04-18 11:02:46 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 11:03:02 -请求地址 : http://localhost:8081/index
2019-04-18 11:03:02 -HTTP METHOD : GET
2019-04-18 11:03:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:03:02 -参数 : [{}]
2019-04-18 11:03:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:03:02 -==> Parameters: 1(Long)
2019-04-18 11:03:02 -<==      Total: 49
2019-04-18 11:03:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:03:02 -==> Parameters: 138(Long)
2019-04-18 11:03:02 -<==      Total: 1
2019-04-18 11:03:02 -耗时 : 27
2019-04-18 11:03:02 -返回值 : index_v1
2019-04-18 11:03:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:03:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:03:02.411(Timestamp)
2019-04-18 11:03:02 -请求地址 : http://localhost:8081/main
2019-04-18 11:03:02 -HTTP METHOD : GET
2019-04-18 11:03:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:03:02 -参数 : []
2019-04-18 11:03:02 -耗时 : 1
2019-04-18 11:03:02 -返回值 : main
2019-04-18 11:03:02 -<==    Updates: 1
2019-04-18 11:03:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:03:02 -HTTP METHOD : GET
2019-04-18 11:03:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:03:02 -参数 : []
2019-04-18 11:03:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:03:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:03:02 -<==      Total: 0
2019-04-18 11:03:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:03:02 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:03:02 -<==      Total: 1
2019-04-18 11:03:02 -耗时 : 36
2019-04-18 11:03:02 -返回值 : com.bootdo.common.utils.PageUtils@1ff55ee4
2019-04-18 11:03:02 -请求地址 : http://localhost:8081/main
2019-04-18 11:03:02 -HTTP METHOD : GET
2019-04-18 11:03:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:03:02 -参数 : []
2019-04-18 11:03:02 -耗时 : 1
2019-04-18 11:03:02 -返回值 : main
2019-04-18 11:03:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:03:07 -HTTP METHOD : GET
2019-04-18 11:03:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:03:07 -参数 : []
2019-04-18 11:03:07 -耗时 : 1
2019-04-18 11:03:07 -返回值 : charts/tableElecYY
2019-04-18 11:09:03 -请求地址 : http://localhost:8081/index
2019-04-18 11:09:03 -HTTP METHOD : GET
2019-04-18 11:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:09:03 -参数 : [{}]
2019-04-18 11:09:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:09:03 -==> Parameters: 1(Long)
2019-04-18 11:09:03 -<==      Total: 49
2019-04-18 11:09:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:09:03 -==> Parameters: 138(Long)
2019-04-18 11:09:03 -<==      Total: 1
2019-04-18 11:09:03 -耗时 : 89
2019-04-18 11:09:03 -返回值 : index_v1
2019-04-18 11:09:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:09:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:09:03.674(Timestamp)
2019-04-18 11:09:03 -<==    Updates: 1
2019-04-18 11:09:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:09:03 -HTTP METHOD : GET
2019-04-18 11:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:09:03 -参数 : []
2019-04-18 11:09:03 -耗时 : 0
2019-04-18 11:09:03 -返回值 : main
2019-04-18 11:09:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:09:04 -HTTP METHOD : GET
2019-04-18 11:09:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:09:04 -参数 : []
2019-04-18 11:09:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:09:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:09:04 -<==      Total: 0
2019-04-18 11:09:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:09:04 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:09:04 -<==      Total: 1
2019-04-18 11:09:04 -耗时 : 10
2019-04-18 11:09:04 -返回值 : com.bootdo.common.utils.PageUtils@268b7abb
2019-04-18 11:09:04 -请求地址 : http://localhost:8081/main
2019-04-18 11:09:04 -HTTP METHOD : GET
2019-04-18 11:09:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:09:04 -参数 : []
2019-04-18 11:09:04 -耗时 : 1
2019-04-18 11:09:04 -返回值 : main
2019-04-18 11:09:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:09:07 -HTTP METHOD : GET
2019-04-18 11:09:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:09:07 -参数 : []
2019-04-18 11:09:07 -耗时 : 1
2019-04-18 11:09:07 -返回值 : charts/tableElecYY
2019-04-18 11:10:25 -请求地址 : http://localhost:8081/index
2019-04-18 11:10:25 -HTTP METHOD : GET
2019-04-18 11:10:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:10:25 -参数 : [{}]
2019-04-18 11:10:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:10:25 -==> Parameters: 1(Long)
2019-04-18 11:10:25 -<==      Total: 49
2019-04-18 11:10:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:10:25 -==> Parameters: 138(Long)
2019-04-18 11:10:25 -<==      Total: 1
2019-04-18 11:10:25 -耗时 : 34
2019-04-18 11:10:25 -返回值 : index_v1
2019-04-18 11:10:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:10:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:10:25.314(Timestamp)
2019-04-18 11:10:25 -请求地址 : http://localhost:8081/main
2019-04-18 11:10:25 -HTTP METHOD : GET
2019-04-18 11:10:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:10:25 -参数 : []
2019-04-18 11:10:25 -耗时 : 1
2019-04-18 11:10:25 -返回值 : main
2019-04-18 11:10:25 -<==    Updates: 1
2019-04-18 11:10:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:10:25 -HTTP METHOD : GET
2019-04-18 11:10:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:10:25 -参数 : []
2019-04-18 11:10:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:10:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:10:25 -<==      Total: 0
2019-04-18 11:10:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:10:25 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:10:25 -<==      Total: 1
2019-04-18 11:10:25 -耗时 : 8
2019-04-18 11:10:25 -返回值 : com.bootdo.common.utils.PageUtils@501a8f96
2019-04-18 11:10:25 -请求地址 : http://localhost:8081/main
2019-04-18 11:10:25 -HTTP METHOD : GET
2019-04-18 11:10:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:10:25 -参数 : []
2019-04-18 11:10:25 -耗时 : 0
2019-04-18 11:10:25 -返回值 : main
2019-04-18 11:10:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:10:28 -HTTP METHOD : GET
2019-04-18 11:10:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:10:28 -参数 : []
2019-04-18 11:10:28 -耗时 : 0
2019-04-18 11:10:28 -返回值 : charts/tableElecYY
2019-04-18 11:11:34 -请求地址 : http://localhost:8081/index
2019-04-18 11:11:34 -HTTP METHOD : GET
2019-04-18 11:11:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:11:34 -参数 : [{}]
2019-04-18 11:11:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:11:34 -==> Parameters: 1(Long)
2019-04-18 11:11:34 -<==      Total: 49
2019-04-18 11:11:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:11:34 -==> Parameters: 138(Long)
2019-04-18 11:11:34 -<==      Total: 1
2019-04-18 11:11:34 -耗时 : 29
2019-04-18 11:11:34 -返回值 : index_v1
2019-04-18 11:11:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:11:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:11:34.7(Timestamp)
2019-04-18 11:11:34 -<==    Updates: 1
2019-04-18 11:11:34 -请求地址 : http://localhost:8081/main
2019-04-18 11:11:34 -HTTP METHOD : GET
2019-04-18 11:11:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:11:34 -参数 : []
2019-04-18 11:11:34 -耗时 : 1
2019-04-18 11:11:34 -返回值 : main
2019-04-18 11:11:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:11:35 -HTTP METHOD : GET
2019-04-18 11:11:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:11:35 -参数 : []
2019-04-18 11:11:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:11:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:11:35 -<==      Total: 0
2019-04-18 11:11:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:11:35 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:11:35 -<==      Total: 1
2019-04-18 11:11:35 -耗时 : 8
2019-04-18 11:11:35 -返回值 : com.bootdo.common.utils.PageUtils@cf0b1fd
2019-04-18 11:11:35 -请求地址 : http://localhost:8081/main
2019-04-18 11:11:35 -HTTP METHOD : GET
2019-04-18 11:11:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:11:35 -参数 : []
2019-04-18 11:11:35 -耗时 : 1
2019-04-18 11:11:35 -返回值 : main
2019-04-18 11:11:43 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 11:11:43 -HTTP METHOD : GET
2019-04-18 11:11:43 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 11:11:43 -参数 : []
2019-04-18 11:11:43 -耗时 : 1
2019-04-18 11:11:43 -返回值 : charts/countYY
2019-04-18 11:11:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 11:11:43 -HTTP METHOD : GET
2019-04-18 11:11:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 11:11:43 -参数 : [userType]
2019-04-18 11:11:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 11:11:43 -==> Parameters: userType(String)
2019-04-18 11:11:43 -<==      Total: 4
2019-04-18 11:11:43 -耗时 : 6
2019-04-18 11:11:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 11:11:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:11:45 -HTTP METHOD : GET
2019-04-18 11:11:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:11:45 -参数 : []
2019-04-18 11:11:45 -耗时 : 1
2019-04-18 11:11:45 -返回值 : charts/tableElecYY
2019-04-18 11:16:49 -请求地址 : http://localhost:8081/index
2019-04-18 11:16:49 -HTTP METHOD : GET
2019-04-18 11:16:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:16:49 -参数 : [{}]
2019-04-18 11:16:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:16:49 -==> Parameters: 1(Long)
2019-04-18 11:16:49 -<==      Total: 49
2019-04-18 11:16:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:16:49 -==> Parameters: 138(Long)
2019-04-18 11:16:49 -<==      Total: 1
2019-04-18 11:16:49 -耗时 : 20
2019-04-18 11:16:49 -返回值 : index_v1
2019-04-18 11:16:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:16:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:16:49.987(Timestamp)
2019-04-18 11:16:50 -请求地址 : http://localhost:8081/main
2019-04-18 11:16:50 -HTTP METHOD : GET
2019-04-18 11:16:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:16:50 -参数 : []
2019-04-18 11:16:50 -耗时 : 1
2019-04-18 11:16:50 -返回值 : main
2019-04-18 11:16:50 -<==    Updates: 1
2019-04-18 11:16:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:16:50 -HTTP METHOD : GET
2019-04-18 11:16:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:16:50 -参数 : []
2019-04-18 11:16:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:16:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:16:50 -<==      Total: 0
2019-04-18 11:16:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:16:50 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:16:50 -<==      Total: 1
2019-04-18 11:16:50 -耗时 : 7
2019-04-18 11:16:50 -返回值 : com.bootdo.common.utils.PageUtils@74962581
2019-04-18 11:16:50 -请求地址 : http://localhost:8081/main
2019-04-18 11:16:50 -HTTP METHOD : GET
2019-04-18 11:16:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:16:50 -参数 : []
2019-04-18 11:16:50 -耗时 : 1
2019-04-18 11:16:50 -返回值 : main
2019-04-18 11:16:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 11:16:54 -==> Parameters: 1(Long)
2019-04-18 11:16:54 -<==      Total: 93
2019-04-18 11:16:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:16:54 -HTTP METHOD : GET
2019-04-18 11:16:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:16:54 -参数 : []
2019-04-18 11:16:54 -耗时 : 1
2019-04-18 11:16:54 -返回值 : charts/tableElecYY
2019-04-18 11:17:52 -请求地址 : http://localhost:8081/index
2019-04-18 11:17:52 -HTTP METHOD : GET
2019-04-18 11:17:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:17:52 -参数 : [{}]
2019-04-18 11:17:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:17:52 -==> Parameters: 1(Long)
2019-04-18 11:17:52 -<==      Total: 49
2019-04-18 11:17:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:17:52 -==> Parameters: 138(Long)
2019-04-18 11:17:52 -<==      Total: 1
2019-04-18 11:17:52 -耗时 : 22
2019-04-18 11:17:52 -返回值 : index_v1
2019-04-18 11:17:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:17:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:17:52.191(Timestamp)
2019-04-18 11:17:52 -请求地址 : http://localhost:8081/main
2019-04-18 11:17:52 -HTTP METHOD : GET
2019-04-18 11:17:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:17:52 -参数 : []
2019-04-18 11:17:52 -耗时 : 0
2019-04-18 11:17:52 -返回值 : main
2019-04-18 11:17:52 -<==    Updates: 1
2019-04-18 11:17:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:17:52 -HTTP METHOD : GET
2019-04-18 11:17:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:17:52 -参数 : []
2019-04-18 11:17:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:17:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:17:52 -<==      Total: 0
2019-04-18 11:17:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:17:52 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:17:52 -<==      Total: 1
2019-04-18 11:17:52 -耗时 : 7
2019-04-18 11:17:52 -返回值 : com.bootdo.common.utils.PageUtils@332a0cc1
2019-04-18 11:17:52 -请求地址 : http://localhost:8081/main
2019-04-18 11:17:52 -HTTP METHOD : GET
2019-04-18 11:17:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:17:52 -参数 : []
2019-04-18 11:17:52 -耗时 : 2
2019-04-18 11:17:52 -返回值 : main
2019-04-18 11:17:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:17:56 -HTTP METHOD : GET
2019-04-18 11:17:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:17:56 -参数 : []
2019-04-18 11:17:56 -耗时 : 1
2019-04-18 11:17:56 -返回值 : charts/tableElecYY
2019-04-18 11:18:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-04-18 11:19:02 -请求地址 : http://localhost:8081/index
2019-04-18 11:19:02 -HTTP METHOD : GET
2019-04-18 11:19:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:19:02 -参数 : [{}]
2019-04-18 11:19:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:19:02 -==> Parameters: 1(Long)
2019-04-18 11:19:03 -<==      Total: 49
2019-04-18 11:19:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:19:03 -==> Parameters: 138(Long)
2019-04-18 11:19:03 -<==      Total: 1
2019-04-18 11:19:03 -耗时 : 85
2019-04-18 11:19:03 -返回值 : index_v1
2019-04-18 11:19:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:19:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 85(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:19:03.066(Timestamp)
2019-04-18 11:19:03 -<==    Updates: 1
2019-04-18 11:19:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:19:03 -HTTP METHOD : GET
2019-04-18 11:19:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:19:03 -参数 : []
2019-04-18 11:19:03 -耗时 : 1
2019-04-18 11:19:03 -返回值 : main
2019-04-18 11:19:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:19:03 -HTTP METHOD : GET
2019-04-18 11:19:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:19:03 -参数 : []
2019-04-18 11:19:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:19:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:19:03 -<==      Total: 0
2019-04-18 11:19:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:19:03 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:19:03 -<==      Total: 1
2019-04-18 11:19:03 -耗时 : 9
2019-04-18 11:19:03 -返回值 : com.bootdo.common.utils.PageUtils@558600a2
2019-04-18 11:19:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:19:03 -HTTP METHOD : GET
2019-04-18 11:19:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:19:03 -参数 : []
2019-04-18 11:19:03 -耗时 : 1
2019-04-18 11:19:03 -返回值 : main
2019-04-18 11:19:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:19:06 -HTTP METHOD : GET
2019-04-18 11:19:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:19:06 -参数 : []
2019-04-18 11:19:06 -耗时 : 1
2019-04-18 11:19:06 -返回值 : charts/tableElecYY
2019-04-18 11:19:50 -请求地址 : http://localhost:8081/index
2019-04-18 11:19:50 -HTTP METHOD : GET
2019-04-18 11:19:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:19:50 -参数 : [{}]
2019-04-18 11:19:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:19:50 -==> Parameters: 1(Long)
2019-04-18 11:19:50 -<==      Total: 49
2019-04-18 11:19:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:19:50 -==> Parameters: 138(Long)
2019-04-18 11:19:50 -<==      Total: 1
2019-04-18 11:19:50 -耗时 : 24
2019-04-18 11:19:50 -返回值 : index_v1
2019-04-18 11:19:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:19:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:19:50.084(Timestamp)
2019-04-18 11:19:50 -<==    Updates: 1
2019-04-18 11:19:50 -请求地址 : http://localhost:8081/main
2019-04-18 11:19:50 -HTTP METHOD : GET
2019-04-18 11:19:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:19:50 -参数 : []
2019-04-18 11:19:50 -耗时 : 0
2019-04-18 11:19:50 -返回值 : main
2019-04-18 11:19:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:19:50 -HTTP METHOD : GET
2019-04-18 11:19:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:19:50 -参数 : []
2019-04-18 11:19:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:19:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:19:50 -<==      Total: 0
2019-04-18 11:19:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:19:50 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:19:50 -<==      Total: 1
2019-04-18 11:19:50 -耗时 : 7
2019-04-18 11:19:50 -返回值 : com.bootdo.common.utils.PageUtils@66f5ff0c
2019-04-18 11:19:50 -请求地址 : http://localhost:8081/main
2019-04-18 11:19:50 -HTTP METHOD : GET
2019-04-18 11:19:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:19:50 -参数 : []
2019-04-18 11:19:50 -耗时 : 3
2019-04-18 11:19:50 -返回值 : main
2019-04-18 11:19:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:19:52 -HTTP METHOD : GET
2019-04-18 11:19:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:19:52 -参数 : []
2019-04-18 11:19:52 -耗时 : 0
2019-04-18 11:19:52 -返回值 : charts/tableElecYY
2019-04-18 11:20:58 -请求地址 : http://localhost:8081/index
2019-04-18 11:20:58 -HTTP METHOD : GET
2019-04-18 11:20:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:20:58 -参数 : [{}]
2019-04-18 11:20:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:20:58 -==> Parameters: 1(Long)
2019-04-18 11:20:58 -<==      Total: 49
2019-04-18 11:20:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:20:58 -==> Parameters: 138(Long)
2019-04-18 11:20:58 -<==      Total: 1
2019-04-18 11:20:58 -耗时 : 37
2019-04-18 11:20:58 -返回值 : index_v1
2019-04-18 11:20:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:20:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:20:58.323(Timestamp)
2019-04-18 11:20:58 -<==    Updates: 1
2019-04-18 11:20:58 -请求地址 : http://localhost:8081/main
2019-04-18 11:20:58 -HTTP METHOD : GET
2019-04-18 11:20:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:20:58 -参数 : []
2019-04-18 11:20:58 -耗时 : 1
2019-04-18 11:20:58 -返回值 : main
2019-04-18 11:20:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:20:58 -HTTP METHOD : GET
2019-04-18 11:20:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:20:58 -参数 : []
2019-04-18 11:20:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:20:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:20:58 -<==      Total: 0
2019-04-18 11:20:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:20:58 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:20:58 -<==      Total: 1
2019-04-18 11:20:58 -耗时 : 6
2019-04-18 11:20:58 -返回值 : com.bootdo.common.utils.PageUtils@6d48b71d
2019-04-18 11:20:58 -请求地址 : http://localhost:8081/main
2019-04-18 11:20:58 -HTTP METHOD : GET
2019-04-18 11:20:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:20:58 -参数 : []
2019-04-18 11:20:58 -耗时 : 1
2019-04-18 11:20:58 -返回值 : main
2019-04-18 11:21:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:21:02 -HTTP METHOD : GET
2019-04-18 11:21:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:21:02 -参数 : []
2019-04-18 11:21:02 -耗时 : 0
2019-04-18 11:21:02 -返回值 : charts/tableElecYY
2019-04-18 11:21:19 -请求地址 : http://localhost:8081/index
2019-04-18 11:21:19 -HTTP METHOD : GET
2019-04-18 11:21:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:21:19 -参数 : [{}]
2019-04-18 11:21:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:21:19 -==> Parameters: 1(Long)
2019-04-18 11:21:19 -<==      Total: 49
2019-04-18 11:21:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:21:19 -==> Parameters: 138(Long)
2019-04-18 11:21:19 -<==      Total: 1
2019-04-18 11:21:19 -耗时 : 20
2019-04-18 11:21:19 -返回值 : index_v1
2019-04-18 11:21:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:21:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:21:19.246(Timestamp)
2019-04-18 11:21:19 -请求地址 : http://localhost:8081/main
2019-04-18 11:21:19 -HTTP METHOD : GET
2019-04-18 11:21:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:21:19 -参数 : []
2019-04-18 11:21:19 -耗时 : 0
2019-04-18 11:21:19 -返回值 : main
2019-04-18 11:21:19 -<==    Updates: 1
2019-04-18 11:21:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:21:19 -HTTP METHOD : GET
2019-04-18 11:21:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:21:19 -参数 : []
2019-04-18 11:21:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:21:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:21:19 -<==      Total: 0
2019-04-18 11:21:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:21:19 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:21:19 -<==      Total: 1
2019-04-18 11:21:19 -耗时 : 6
2019-04-18 11:21:19 -返回值 : com.bootdo.common.utils.PageUtils@375c35bf
2019-04-18 11:21:19 -请求地址 : http://localhost:8081/main
2019-04-18 11:21:19 -HTTP METHOD : GET
2019-04-18 11:21:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:21:19 -参数 : []
2019-04-18 11:21:19 -耗时 : 0
2019-04-18 11:21:19 -返回值 : main
2019-04-18 11:21:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:21:23 -HTTP METHOD : GET
2019-04-18 11:21:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:21:23 -参数 : []
2019-04-18 11:21:23 -耗时 : 0
2019-04-18 11:21:23 -返回值 : charts/tableElecYY
2019-04-18 11:22:46 -请求地址 : http://localhost:8081/index
2019-04-18 11:22:46 -HTTP METHOD : GET
2019-04-18 11:22:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:22:46 -参数 : [{}]
2019-04-18 11:22:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:22:46 -==> Parameters: 1(Long)
2019-04-18 11:22:46 -<==      Total: 49
2019-04-18 11:22:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:22:46 -==> Parameters: 138(Long)
2019-04-18 11:22:46 -<==      Total: 1
2019-04-18 11:22:46 -耗时 : 22
2019-04-18 11:22:46 -返回值 : index_v1
2019-04-18 11:22:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:22:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:22:46.608(Timestamp)
2019-04-18 11:22:46 -请求地址 : http://localhost:8081/main
2019-04-18 11:22:46 -HTTP METHOD : GET
2019-04-18 11:22:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:22:46 -参数 : []
2019-04-18 11:22:46 -耗时 : 1
2019-04-18 11:22:46 -返回值 : main
2019-04-18 11:22:46 -<==    Updates: 1
2019-04-18 11:22:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:22:46 -HTTP METHOD : GET
2019-04-18 11:22:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:22:46 -参数 : []
2019-04-18 11:22:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:22:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:22:46 -<==      Total: 0
2019-04-18 11:22:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:22:46 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:22:46 -<==      Total: 1
2019-04-18 11:22:46 -耗时 : 10
2019-04-18 11:22:46 -返回值 : com.bootdo.common.utils.PageUtils@39b3949d
2019-04-18 11:22:46 -请求地址 : http://localhost:8081/main
2019-04-18 11:22:46 -HTTP METHOD : GET
2019-04-18 11:22:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:22:46 -参数 : []
2019-04-18 11:22:46 -耗时 : 1
2019-04-18 11:22:46 -返回值 : main
2019-04-18 11:22:49 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-18 11:22:49 -HTTP METHOD : GET
2019-04-18 11:22:49 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-18 11:22:49 -参数 : []
2019-04-18 11:22:49 -耗时 : 1
2019-04-18 11:22:49 -返回值 : charts/countOwe
2019-04-18 11:22:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 11:22:49 -HTTP METHOD : GET
2019-04-18 11:22:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 11:22:49 -参数 : [userType]
2019-04-18 11:22:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 11:22:49 -==> Parameters: userType(String)
2019-04-18 11:22:49 -<==      Total: 4
2019-04-18 11:22:49 -耗时 : 7
2019-04-18 11:22:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 11:22:50 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:22:50 -HTTP METHOD : GET
2019-04-18 11:22:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:22:50 -参数 : []
2019-04-18 11:22:50 -耗时 : 1
2019-04-18 11:22:50 -返回值 : charts/tableElecYY
2019-04-18 11:23:57 -请求地址 : http://localhost:8081/index
2019-04-18 11:23:57 -HTTP METHOD : GET
2019-04-18 11:23:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:23:57 -参数 : [{}]
2019-04-18 11:23:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:23:57 -==> Parameters: 1(Long)
2019-04-18 11:23:57 -<==      Total: 49
2019-04-18 11:23:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:23:57 -==> Parameters: 138(Long)
2019-04-18 11:23:57 -<==      Total: 1
2019-04-18 11:23:57 -耗时 : 21
2019-04-18 11:23:57 -返回值 : index_v1
2019-04-18 11:23:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:23:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:23:57.466(Timestamp)
2019-04-18 11:23:57 -<==    Updates: 1
2019-04-18 11:23:57 -请求地址 : http://localhost:8081/main
2019-04-18 11:23:57 -HTTP METHOD : GET
2019-04-18 11:23:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:23:57 -参数 : []
2019-04-18 11:23:57 -耗时 : 0
2019-04-18 11:23:57 -返回值 : main
2019-04-18 11:23:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:23:57 -HTTP METHOD : GET
2019-04-18 11:23:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:23:57 -参数 : []
2019-04-18 11:23:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:23:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:23:57 -<==      Total: 0
2019-04-18 11:23:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:23:57 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:23:57 -<==      Total: 1
2019-04-18 11:23:57 -耗时 : 6
2019-04-18 11:23:57 -返回值 : com.bootdo.common.utils.PageUtils@6d41b7c9
2019-04-18 11:23:57 -请求地址 : http://localhost:8081/main
2019-04-18 11:23:57 -HTTP METHOD : GET
2019-04-18 11:23:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:23:57 -参数 : []
2019-04-18 11:23:57 -耗时 : 1
2019-04-18 11:23:57 -返回值 : main
2019-04-18 11:24:01 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:24:01 -HTTP METHOD : GET
2019-04-18 11:24:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:24:01 -参数 : []
2019-04-18 11:24:01 -耗时 : 1
2019-04-18 11:24:01 -返回值 : charts/tableElecYY
2019-04-18 11:25:03 -请求地址 : http://localhost:8081/index
2019-04-18 11:25:03 -HTTP METHOD : GET
2019-04-18 11:25:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:25:03 -参数 : [{}]
2019-04-18 11:25:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:25:03 -==> Parameters: 1(Long)
2019-04-18 11:25:03 -<==      Total: 49
2019-04-18 11:25:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:25:03 -==> Parameters: 138(Long)
2019-04-18 11:25:03 -<==      Total: 1
2019-04-18 11:25:03 -耗时 : 17
2019-04-18 11:25:03 -返回值 : index_v1
2019-04-18 11:25:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:25:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:25:03.422(Timestamp)
2019-04-18 11:25:03 -<==    Updates: 1
2019-04-18 11:25:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:25:03 -HTTP METHOD : GET
2019-04-18 11:25:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:25:03 -参数 : []
2019-04-18 11:25:03 -耗时 : 1
2019-04-18 11:25:03 -返回值 : main
2019-04-18 11:25:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:25:03 -HTTP METHOD : GET
2019-04-18 11:25:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:25:03 -参数 : []
2019-04-18 11:25:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:25:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:25:03 -<==      Total: 0
2019-04-18 11:25:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:25:03 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:25:03 -<==      Total: 1
2019-04-18 11:25:03 -耗时 : 9
2019-04-18 11:25:03 -返回值 : com.bootdo.common.utils.PageUtils@3c00c9c4
2019-04-18 11:25:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:25:03 -HTTP METHOD : GET
2019-04-18 11:25:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:25:03 -参数 : []
2019-04-18 11:25:03 -耗时 : 0
2019-04-18 11:25:03 -返回值 : main
2019-04-18 11:25:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:25:10 -HTTP METHOD : GET
2019-04-18 11:25:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:25:10 -参数 : []
2019-04-18 11:25:10 -耗时 : 0
2019-04-18 11:25:10 -返回值 : charts/tableElecYY
2019-04-18 11:26:49 -请求地址 : http://localhost:8081/index
2019-04-18 11:26:49 -HTTP METHOD : GET
2019-04-18 11:26:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:26:49 -参数 : [{}]
2019-04-18 11:26:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:26:49 -==> Parameters: 1(Long)
2019-04-18 11:26:49 -<==      Total: 49
2019-04-18 11:26:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:26:49 -==> Parameters: 138(Long)
2019-04-18 11:26:49 -<==      Total: 1
2019-04-18 11:26:49 -耗时 : 20
2019-04-18 11:26:49 -返回值 : index_v1
2019-04-18 11:26:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:26:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:26:49.419(Timestamp)
2019-04-18 11:26:49 -请求地址 : http://localhost:8081/main
2019-04-18 11:26:49 -HTTP METHOD : GET
2019-04-18 11:26:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:26:49 -参数 : []
2019-04-18 11:26:49 -耗时 : 1
2019-04-18 11:26:49 -返回值 : main
2019-04-18 11:26:49 -<==    Updates: 1
2019-04-18 11:26:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:26:49 -HTTP METHOD : GET
2019-04-18 11:26:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:26:49 -参数 : []
2019-04-18 11:26:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:26:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:26:49 -<==      Total: 0
2019-04-18 11:26:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:26:49 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:26:49 -<==      Total: 1
2019-04-18 11:26:49 -耗时 : 7
2019-04-18 11:26:49 -返回值 : com.bootdo.common.utils.PageUtils@397ce2ce
2019-04-18 11:26:49 -请求地址 : http://localhost:8081/main
2019-04-18 11:26:49 -HTTP METHOD : GET
2019-04-18 11:26:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:26:49 -参数 : []
2019-04-18 11:26:49 -耗时 : 0
2019-04-18 11:26:49 -返回值 : main
2019-04-18 11:26:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:26:52 -HTTP METHOD : GET
2019-04-18 11:26:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:26:52 -参数 : []
2019-04-18 11:26:52 -耗时 : 0
2019-04-18 11:26:52 -返回值 : charts/tableElecYY
2019-04-18 11:27:22 -请求地址 : http://localhost:8081/index
2019-04-18 11:27:22 -HTTP METHOD : GET
2019-04-18 11:27:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:27:22 -参数 : [{}]
2019-04-18 11:27:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:27:22 -==> Parameters: 1(Long)
2019-04-18 11:27:22 -<==      Total: 49
2019-04-18 11:27:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:27:22 -==> Parameters: 138(Long)
2019-04-18 11:27:22 -<==      Total: 1
2019-04-18 11:27:22 -耗时 : 22
2019-04-18 11:27:22 -返回值 : index_v1
2019-04-18 11:27:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:27:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:27:22.207(Timestamp)
2019-04-18 11:27:22 -请求地址 : http://localhost:8081/main
2019-04-18 11:27:22 -HTTP METHOD : GET
2019-04-18 11:27:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:27:22 -参数 : []
2019-04-18 11:27:22 -耗时 : 0
2019-04-18 11:27:22 -返回值 : main
2019-04-18 11:27:22 -<==    Updates: 1
2019-04-18 11:27:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:27:22 -HTTP METHOD : GET
2019-04-18 11:27:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:27:22 -参数 : []
2019-04-18 11:27:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:27:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:27:22 -<==      Total: 0
2019-04-18 11:27:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:27:22 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:27:22 -<==      Total: 1
2019-04-18 11:27:22 -耗时 : 6
2019-04-18 11:27:22 -返回值 : com.bootdo.common.utils.PageUtils@72346d2b
2019-04-18 11:27:22 -请求地址 : http://localhost:8081/main
2019-04-18 11:27:22 -HTTP METHOD : GET
2019-04-18 11:27:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:27:22 -参数 : []
2019-04-18 11:27:22 -耗时 : 1
2019-04-18 11:27:22 -返回值 : main
2019-04-18 11:27:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 11:27:26 -==> Parameters: 1(Long)
2019-04-18 11:27:26 -<==      Total: 93
2019-04-18 11:27:26 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 11:27:26 -HTTP METHOD : GET
2019-04-18 11:27:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 11:27:26 -参数 : []
2019-04-18 11:27:26 -耗时 : 0
2019-04-18 11:27:26 -返回值 : charts/countYY
2019-04-18 11:27:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 11:27:26 -HTTP METHOD : GET
2019-04-18 11:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 11:27:26 -参数 : [userType]
2019-04-18 11:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 11:27:26 -==> Parameters: userType(String)
2019-04-18 11:27:26 -<==      Total: 4
2019-04-18 11:27:26 -耗时 : 4
2019-04-18 11:27:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 11:27:27 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:27:27 -HTTP METHOD : GET
2019-04-18 11:27:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:27:27 -参数 : []
2019-04-18 11:27:27 -耗时 : 1
2019-04-18 11:27:27 -返回值 : charts/tableElecYY
2019-04-18 11:30:37 -请求地址 : http://localhost:8081/index
2019-04-18 11:30:37 -HTTP METHOD : GET
2019-04-18 11:30:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:30:37 -参数 : [{}]
2019-04-18 11:30:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:30:37 -==> Parameters: 1(Long)
2019-04-18 11:30:37 -<==      Total: 49
2019-04-18 11:30:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:30:37 -==> Parameters: 138(Long)
2019-04-18 11:30:37 -<==      Total: 1
2019-04-18 11:30:37 -耗时 : 38
2019-04-18 11:30:37 -返回值 : index_v1
2019-04-18 11:30:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:30:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:30:37.68(Timestamp)
2019-04-18 11:30:37 -请求地址 : http://localhost:8081/main
2019-04-18 11:30:37 -HTTP METHOD : GET
2019-04-18 11:30:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:30:37 -参数 : []
2019-04-18 11:30:37 -耗时 : 1
2019-04-18 11:30:37 -返回值 : main
2019-04-18 11:30:37 -<==    Updates: 1
2019-04-18 11:30:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:30:37 -HTTP METHOD : GET
2019-04-18 11:30:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:30:37 -参数 : []
2019-04-18 11:30:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:30:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:30:37 -<==      Total: 0
2019-04-18 11:30:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:30:37 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:30:37 -<==      Total: 1
2019-04-18 11:30:37 -耗时 : 8
2019-04-18 11:30:37 -返回值 : com.bootdo.common.utils.PageUtils@394220c2
2019-04-18 11:30:38 -请求地址 : http://localhost:8081/main
2019-04-18 11:30:38 -HTTP METHOD : GET
2019-04-18 11:30:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:30:38 -参数 : []
2019-04-18 11:30:38 -耗时 : 1
2019-04-18 11:30:38 -返回值 : main
2019-04-18 11:30:40 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:30:40 -HTTP METHOD : GET
2019-04-18 11:30:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:30:40 -参数 : []
2019-04-18 11:30:40 -耗时 : 0
2019-04-18 11:30:40 -返回值 : charts/tableElecYY
2019-04-18 11:31:36 -请求地址 : http://localhost:8081/index
2019-04-18 11:31:36 -HTTP METHOD : GET
2019-04-18 11:31:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:31:36 -参数 : [{}]
2019-04-18 11:31:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:31:36 -==> Parameters: 1(Long)
2019-04-18 11:31:36 -<==      Total: 49
2019-04-18 11:31:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:31:36 -==> Parameters: 138(Long)
2019-04-18 11:31:36 -<==      Total: 1
2019-04-18 11:31:36 -耗时 : 19
2019-04-18 11:31:36 -返回值 : index_v1
2019-04-18 11:31:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:31:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:31:36.823(Timestamp)
2019-04-18 11:31:36 -请求地址 : http://localhost:8081/main
2019-04-18 11:31:36 -HTTP METHOD : GET
2019-04-18 11:31:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:31:36 -参数 : []
2019-04-18 11:31:36 -耗时 : 0
2019-04-18 11:31:36 -返回值 : main
2019-04-18 11:31:36 -<==    Updates: 1
2019-04-18 11:31:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:31:37 -HTTP METHOD : GET
2019-04-18 11:31:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:31:37 -参数 : []
2019-04-18 11:31:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:31:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:31:37 -<==      Total: 0
2019-04-18 11:31:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:31:37 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:31:37 -<==      Total: 1
2019-04-18 11:31:37 -耗时 : 14
2019-04-18 11:31:37 -返回值 : com.bootdo.common.utils.PageUtils@3b68ca4d
2019-04-18 11:31:37 -请求地址 : http://localhost:8081/main
2019-04-18 11:31:37 -HTTP METHOD : GET
2019-04-18 11:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:31:37 -参数 : []
2019-04-18 11:31:37 -耗时 : 3
2019-04-18 11:31:37 -返回值 : main
2019-04-18 11:31:39 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:31:39 -HTTP METHOD : GET
2019-04-18 11:31:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:31:39 -参数 : []
2019-04-18 11:31:39 -耗时 : 0
2019-04-18 11:31:39 -返回值 : charts/tableElecYY
2019-04-18 11:31:43 -请求地址 : http://localhost:8081/index
2019-04-18 11:31:43 -HTTP METHOD : GET
2019-04-18 11:31:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:31:43 -参数 : [{}]
2019-04-18 11:31:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:31:43 -==> Parameters: 1(Long)
2019-04-18 11:31:43 -<==      Total: 49
2019-04-18 11:31:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:31:43 -==> Parameters: 138(Long)
2019-04-18 11:31:43 -<==      Total: 1
2019-04-18 11:31:43 -耗时 : 16
2019-04-18 11:31:43 -返回值 : index_v1
2019-04-18 11:31:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:31:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:31:43.985(Timestamp)
2019-04-18 11:31:44 -请求地址 : http://localhost:8081/main
2019-04-18 11:31:44 -HTTP METHOD : GET
2019-04-18 11:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:31:44 -参数 : []
2019-04-18 11:31:44 -耗时 : 0
2019-04-18 11:31:44 -返回值 : main
2019-04-18 11:31:44 -<==    Updates: 1
2019-04-18 11:31:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:31:44 -HTTP METHOD : GET
2019-04-18 11:31:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:31:44 -参数 : []
2019-04-18 11:31:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:31:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:31:44 -<==      Total: 0
2019-04-18 11:31:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:31:44 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:31:44 -<==      Total: 1
2019-04-18 11:31:44 -耗时 : 8
2019-04-18 11:31:44 -返回值 : com.bootdo.common.utils.PageUtils@1d274e7c
2019-04-18 11:31:44 -请求地址 : http://localhost:8081/main
2019-04-18 11:31:44 -HTTP METHOD : GET
2019-04-18 11:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:31:44 -参数 : []
2019-04-18 11:31:44 -耗时 : 0
2019-04-18 11:31:44 -返回值 : main
2019-04-18 11:31:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:31:49 -HTTP METHOD : GET
2019-04-18 11:31:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:31:49 -参数 : []
2019-04-18 11:31:49 -耗时 : 1
2019-04-18 11:31:49 -返回值 : charts/tableElecYY
2019-04-18 11:32:03 -请求地址 : http://localhost:8081/index
2019-04-18 11:32:03 -HTTP METHOD : GET
2019-04-18 11:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:32:03 -参数 : [{}]
2019-04-18 11:32:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:32:03 -==> Parameters: 1(Long)
2019-04-18 11:32:03 -<==      Total: 49
2019-04-18 11:32:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:32:03 -==> Parameters: 138(Long)
2019-04-18 11:32:03 -<==      Total: 1
2019-04-18 11:32:03 -耗时 : 18
2019-04-18 11:32:03 -返回值 : index_v1
2019-04-18 11:32:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:32:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:32:03.862(Timestamp)
2019-04-18 11:32:03 -<==    Updates: 1
2019-04-18 11:32:03 -请求地址 : http://localhost:8081/main
2019-04-18 11:32:03 -HTTP METHOD : GET
2019-04-18 11:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:32:03 -参数 : []
2019-04-18 11:32:03 -耗时 : 0
2019-04-18 11:32:03 -返回值 : main
2019-04-18 11:32:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:32:04 -HTTP METHOD : GET
2019-04-18 11:32:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:32:04 -参数 : []
2019-04-18 11:32:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:32:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:32:04 -<==      Total: 0
2019-04-18 11:32:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:32:04 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:32:04 -<==      Total: 1
2019-04-18 11:32:04 -耗时 : 30
2019-04-18 11:32:04 -返回值 : com.bootdo.common.utils.PageUtils@4f45b3b6
2019-04-18 11:32:04 -请求地址 : http://localhost:8081/main
2019-04-18 11:32:04 -HTTP METHOD : GET
2019-04-18 11:32:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:32:04 -参数 : []
2019-04-18 11:32:04 -耗时 : 1
2019-04-18 11:32:04 -返回值 : main
2019-04-18 11:32:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:32:07 -HTTP METHOD : GET
2019-04-18 11:32:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:32:07 -参数 : []
2019-04-18 11:32:07 -耗时 : 1
2019-04-18 11:32:07 -返回值 : charts/tableElecYY
2019-04-18 11:36:19 -请求地址 : http://localhost:8081/index
2019-04-18 11:36:19 -HTTP METHOD : GET
2019-04-18 11:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:36:19 -参数 : [{}]
2019-04-18 11:36:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:36:19 -==> Parameters: 1(Long)
2019-04-18 11:36:19 -<==      Total: 49
2019-04-18 11:36:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:36:19 -==> Parameters: 138(Long)
2019-04-18 11:36:19 -<==      Total: 1
2019-04-18 11:36:19 -耗时 : 20
2019-04-18 11:36:19 -返回值 : index_v1
2019-04-18 11:36:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:36:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:36:19.332(Timestamp)
2019-04-18 11:36:19 -请求地址 : http://localhost:8081/main
2019-04-18 11:36:19 -HTTP METHOD : GET
2019-04-18 11:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:36:19 -参数 : []
2019-04-18 11:36:19 -耗时 : 1
2019-04-18 11:36:19 -返回值 : main
2019-04-18 11:36:19 -<==    Updates: 1
2019-04-18 11:36:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:36:19 -HTTP METHOD : GET
2019-04-18 11:36:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:36:19 -参数 : []
2019-04-18 11:36:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:36:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:36:19 -<==      Total: 0
2019-04-18 11:36:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:36:19 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:36:19 -<==      Total: 1
2019-04-18 11:36:19 -耗时 : 5
2019-04-18 11:36:19 -返回值 : com.bootdo.common.utils.PageUtils@5838cbb
2019-04-18 11:36:19 -请求地址 : http://localhost:8081/main
2019-04-18 11:36:19 -HTTP METHOD : GET
2019-04-18 11:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:36:19 -参数 : []
2019-04-18 11:36:19 -耗时 : 0
2019-04-18 11:36:19 -返回值 : main
2019-04-18 11:36:22 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:36:22 -HTTP METHOD : GET
2019-04-18 11:36:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:36:22 -参数 : []
2019-04-18 11:36:22 -耗时 : 0
2019-04-18 11:36:22 -返回值 : charts/tableElecYY
2019-04-18 11:38:07 -请求地址 : http://localhost:8081/index
2019-04-18 11:38:07 -HTTP METHOD : GET
2019-04-18 11:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 11:38:07 -参数 : [{}]
2019-04-18 11:38:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 11:38:07 -==> Parameters: 1(Long)
2019-04-18 11:38:07 -<==      Total: 49
2019-04-18 11:38:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 11:38:07 -==> Parameters: 138(Long)
2019-04-18 11:38:07 -<==      Total: 1
2019-04-18 11:38:07 -耗时 : 36
2019-04-18 11:38:07 -返回值 : index_v1
2019-04-18 11:38:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 11:38:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 11:38:07.179(Timestamp)
2019-04-18 11:38:07 -请求地址 : http://localhost:8081/main
2019-04-18 11:38:07 -HTTP METHOD : GET
2019-04-18 11:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:38:07 -参数 : []
2019-04-18 11:38:07 -耗时 : 0
2019-04-18 11:38:07 -返回值 : main
2019-04-18 11:38:07 -<==    Updates: 1
2019-04-18 11:38:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 11:38:07 -HTTP METHOD : GET
2019-04-18 11:38:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 11:38:07 -参数 : []
2019-04-18 11:38:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 11:38:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 11:38:07 -<==      Total: 0
2019-04-18 11:38:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 11:38:07 -==> Parameters: 1(Long), 0(String)
2019-04-18 11:38:07 -<==      Total: 1
2019-04-18 11:38:07 -耗时 : 12
2019-04-18 11:38:07 -返回值 : com.bootdo.common.utils.PageUtils@76218825
2019-04-18 11:38:07 -请求地址 : http://localhost:8081/main
2019-04-18 11:38:07 -HTTP METHOD : GET
2019-04-18 11:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 11:38:07 -参数 : []
2019-04-18 11:38:07 -耗时 : 1
2019-04-18 11:38:07 -返回值 : main
2019-04-18 11:38:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 11:38:11 -==> Parameters: 1(Long)
2019-04-18 11:38:11 -<==      Total: 93
2019-04-18 11:38:11 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 11:38:11 -HTTP METHOD : GET
2019-04-18 11:38:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 11:38:11 -参数 : []
2019-04-18 11:38:11 -耗时 : 1
2019-04-18 11:38:11 -返回值 : charts/tableElecYY
2019-04-18 11:47:46 -Validating all active sessions...
2019-04-18 11:47:46 -Finished session validation.  No sessions were stopped.
2019-04-18 11:48:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 24 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(23)-CONNECTED(23)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 276], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 46], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 856]
2019-04-18 12:30:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 24 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(23)-CONNECTED(23)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 276], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 46], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 1239]
2019-04-18 12:36:27 -请求地址 : http://localhost:8081/login;JSESSIONID=d641e36f-6fa6-42da-8342-b2e9c9d3f490
2019-04-18 12:36:27 -HTTP METHOD : GET
2019-04-18 12:36:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 12:36:27 -参数 : [{}]
2019-04-18 12:36:27 -耗时 : 26
2019-04-18 12:36:27 -返回值 : login
2019-04-18 12:36:27 -请求地址 : http://localhost:8081/login;JSESSIONID=d641e36f-6fa6-42da-8342-b2e9c9d3f490
2019-04-18 12:36:27 -HTTP METHOD : GET
2019-04-18 12:36:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 12:36:27 -参数 : [{}]
2019-04-18 12:36:27 -耗时 : 0
2019-04-18 12:36:27 -返回值 : login
2019-04-18 12:36:28 -请求地址 : http://localhost:8081/getVerify
2019-04-18 12:36:28 -HTTP METHOD : GET
2019-04-18 12:36:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 12:36:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@8fec4ea, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f831c6]
2019-04-18 12:36:29 -5645
2019-04-18 12:36:29 -耗时 : 1261
2019-04-18 12:36:29 -返回值 : null
2019-04-18 12:36:42 -请求地址 : http://localhost:8081/login
2019-04-18 12:36:42 -HTTP METHOD : POST
2019-04-18 12:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 12:36:42 -参数 : [admin, 111111, 5645, org.apache.shiro.web.servlet.ShiroHttpServletRequest@b540000]
2019-04-18 12:36:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 12:36:42 -==> Parameters: admin(String)
2019-04-18 12:36:42 -<==      Total: 1
2019-04-18 12:36:42 -耗时 : 346
2019-04-18 12:36:42 -返回值 : {msg=操作成功, code=0}
2019-04-18 12:36:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 12:36:42 -==> Parameters: 1(Long), admin(String), 登录(String), 346(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 12:36:42.891(Timestamp)
2019-04-18 12:36:42 -请求地址 : http://localhost:8081/index
2019-04-18 12:36:42 -HTTP METHOD : GET
2019-04-18 12:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 12:36:42 -参数 : [{}]
2019-04-18 12:36:43 -<==    Updates: 1
2019-04-18 12:36:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 12:36:43 -==> Parameters: 1(Long)
2019-04-18 12:36:43 -<==      Total: 49
2019-04-18 12:36:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 12:36:43 -==> Parameters: 138(Long)
2019-04-18 12:36:43 -<==      Total: 1
2019-04-18 12:36:43 -耗时 : 548
2019-04-18 12:36:43 -返回值 : index_v1
2019-04-18 12:36:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 12:36:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 548(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 12:36:43.466(Timestamp)
2019-04-18 12:36:43 -请求地址 : http://localhost:8081/main
2019-04-18 12:36:43 -HTTP METHOD : GET
2019-04-18 12:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 12:36:43 -参数 : []
2019-04-18 12:36:43 -耗时 : 0
2019-04-18 12:36:43 -返回值 : main
2019-04-18 12:36:44 -<==    Updates: 1
2019-04-18 12:36:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 12:36:45 -HTTP METHOD : GET
2019-04-18 12:36:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 12:36:45 -参数 : []
2019-04-18 12:36:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 12:36:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 12:36:45 -<==      Total: 0
2019-04-18 12:36:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 12:36:45 -==> Parameters: 1(Long), 0(String)
2019-04-18 12:36:45 -<==      Total: 1
2019-04-18 12:36:45 -耗时 : 6
2019-04-18 12:36:45 -返回值 : com.bootdo.common.utils.PageUtils@799f1688
2019-04-18 12:36:45 -请求地址 : http://localhost:8081/main
2019-04-18 12:36:45 -HTTP METHOD : GET
2019-04-18 12:36:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 12:36:45 -参数 : []
2019-04-18 12:36:45 -耗时 : 0
2019-04-18 12:36:45 -返回值 : main
2019-04-18 12:36:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 12:36:57 -==> Parameters: 1(Long)
2019-04-18 12:36:57 -<==      Total: 93
2019-04-18 12:36:57 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 12:36:57 -HTTP METHOD : GET
2019-04-18 12:36:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 12:36:57 -参数 : []
2019-04-18 12:36:57 -耗时 : 1
2019-04-18 12:36:57 -返回值 : charts/countYY
2019-04-18 12:36:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 12:36:59 -HTTP METHOD : GET
2019-04-18 12:36:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 12:36:59 -参数 : [userType]
2019-04-18 12:36:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 12:36:59 -==> Parameters: userType(String)
2019-04-18 12:36:59 -<==      Total: 4
2019-04-18 12:36:59 -耗时 : 218
2019-04-18 12:36:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 12:37:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:37:03 -HTTP METHOD : GET
2019-04-18 12:37:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:37:03 -参数 : []
2019-04-18 12:37:03 -耗时 : 0
2019-04-18 12:37:03 -返回值 : charts/tableElecYY
2019-04-18 12:37:06 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:37:06 -HTTP METHOD : GET
2019-04-18 12:37:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:37:06 -参数 : []
2019-04-18 12:37:07 -耗时 : 186
2019-04-18 12:37:07 -返回值 : charts/tableHeatYY
2019-04-18 12:37:08 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:37:08 -HTTP METHOD : GET
2019-04-18 12:37:08 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:37:08 -参数 : []
2019-04-18 12:37:08 -耗时 : 60
2019-04-18 12:37:08 -返回值 : charts/tableWaterYY
2019-04-18 12:37:11 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:37:11 -HTTP METHOD : GET
2019-04-18 12:37:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:37:11 -参数 : []
2019-04-18 12:37:11 -耗时 : 1
2019-04-18 12:37:11 -返回值 : charts/tableHeatYY
2019-04-18 12:37:11 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:37:11 -HTTP METHOD : GET
2019-04-18 12:37:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:37:11 -参数 : []
2019-04-18 12:37:11 -耗时 : 0
2019-04-18 12:37:11 -返回值 : charts/tableElecYY
2019-04-18 12:41:48 -请求地址 : http://localhost:8081/index
2019-04-18 12:41:48 -HTTP METHOD : GET
2019-04-18 12:41:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 12:41:48 -参数 : [{}]
2019-04-18 12:41:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 12:41:48 -==> Parameters: 1(Long)
2019-04-18 12:41:48 -<==      Total: 49
2019-04-18 12:41:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 12:41:48 -==> Parameters: 138(Long)
2019-04-18 12:41:48 -<==      Total: 1
2019-04-18 12:41:48 -耗时 : 410
2019-04-18 12:41:48 -返回值 : index_v1
2019-04-18 12:41:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 12:41:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 410(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 12:41:48.616(Timestamp)
2019-04-18 12:41:48 -请求地址 : http://localhost:8081/main
2019-04-18 12:41:48 -HTTP METHOD : GET
2019-04-18 12:41:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 12:41:48 -参数 : []
2019-04-18 12:41:48 -耗时 : 0
2019-04-18 12:41:48 -返回值 : main
2019-04-18 12:41:48 -<==    Updates: 1
2019-04-18 12:41:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 12:41:48 -HTTP METHOD : GET
2019-04-18 12:41:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 12:41:48 -参数 : []
2019-04-18 12:41:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 12:41:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 12:41:48 -<==      Total: 0
2019-04-18 12:41:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 12:41:48 -==> Parameters: 1(Long), 0(String)
2019-04-18 12:41:48 -<==      Total: 1
2019-04-18 12:41:48 -耗时 : 68
2019-04-18 12:41:48 -返回值 : com.bootdo.common.utils.PageUtils@2b7fb311
2019-04-18 12:41:48 -请求地址 : http://localhost:8081/main
2019-04-18 12:41:48 -HTTP METHOD : GET
2019-04-18 12:41:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 12:41:48 -参数 : []
2019-04-18 12:41:48 -耗时 : 1
2019-04-18 12:41:48 -返回值 : main
2019-04-18 12:41:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:41:56 -HTTP METHOD : GET
2019-04-18 12:41:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:41:56 -参数 : []
2019-04-18 12:41:56 -耗时 : 1
2019-04-18 12:41:56 -返回值 : charts/tableElecYY
2019-04-18 12:41:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:41:57 -HTTP METHOD : GET
2019-04-18 12:41:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:41:57 -参数 : []
2019-04-18 12:41:57 -耗时 : 0
2019-04-18 12:41:57 -返回值 : charts/tableWaterYY
2019-04-18 12:41:58 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:41:58 -HTTP METHOD : GET
2019-04-18 12:41:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:41:58 -参数 : []
2019-04-18 12:41:58 -耗时 : 1
2019-04-18 12:41:58 -返回值 : charts/tableHeatYY
2019-04-18 12:41:59 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:41:59 -HTTP METHOD : GET
2019-04-18 12:41:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:41:59 -参数 : []
2019-04-18 12:41:59 -耗时 : 0
2019-04-18 12:41:59 -返回值 : charts/tableElecYY
2019-04-18 12:41:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:41:59 -HTTP METHOD : GET
2019-04-18 12:41:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:41:59 -参数 : []
2019-04-18 12:41:59 -耗时 : 1
2019-04-18 12:41:59 -返回值 : charts/tableHeatYY
2019-04-18 12:42:00 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:42:00 -HTTP METHOD : GET
2019-04-18 12:42:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:42:00 -参数 : []
2019-04-18 12:42:00 -耗时 : 0
2019-04-18 12:42:00 -返回值 : charts/tableWaterYY
2019-04-18 12:42:01 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:42:01 -HTTP METHOD : GET
2019-04-18 12:42:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:42:01 -参数 : []
2019-04-18 12:42:01 -耗时 : 1
2019-04-18 12:42:01 -返回值 : charts/tableHeatYY
2019-04-18 12:42:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:42:02 -HTTP METHOD : GET
2019-04-18 12:42:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:42:02 -参数 : []
2019-04-18 12:42:02 -耗时 : 1
2019-04-18 12:42:02 -返回值 : charts/tableElecYY
2019-04-18 12:42:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:42:03 -HTTP METHOD : GET
2019-04-18 12:42:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:42:03 -参数 : []
2019-04-18 12:42:03 -耗时 : 1
2019-04-18 12:42:03 -返回值 : charts/tableHeatYY
2019-04-18 12:42:03 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:42:03 -HTTP METHOD : GET
2019-04-18 12:42:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:42:03 -参数 : []
2019-04-18 12:42:03 -耗时 : 0
2019-04-18 12:42:03 -返回值 : charts/tableWaterYY
2019-04-18 12:42:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:42:04 -HTTP METHOD : GET
2019-04-18 12:42:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:42:04 -参数 : []
2019-04-18 12:42:04 -耗时 : 1
2019-04-18 12:42:04 -返回值 : charts/tableHeatYY
2019-04-18 12:42:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:42:04 -HTTP METHOD : GET
2019-04-18 12:42:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:42:04 -参数 : []
2019-04-18 12:42:04 -耗时 : 1
2019-04-18 12:42:04 -返回值 : charts/tableElecYY
2019-04-18 12:42:59 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:42:59 -HTTP METHOD : GET
2019-04-18 12:42:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:42:59 -参数 : []
2019-04-18 12:42:59 -耗时 : 1
2019-04-18 12:42:59 -返回值 : charts/tableWaterYY
2019-04-18 12:43:09 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:09 -HTTP METHOD : GET
2019-04-18 12:43:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:09 -参数 : []
2019-04-18 12:43:09 -耗时 : 0
2019-04-18 12:43:09 -返回值 : charts/tableHeatYY
2019-04-18 12:43:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:43:10 -HTTP METHOD : GET
2019-04-18 12:43:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:43:10 -参数 : []
2019-04-18 12:43:10 -耗时 : 1
2019-04-18 12:43:10 -返回值 : charts/tableElecYY
2019-04-18 12:43:10 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:10 -HTTP METHOD : GET
2019-04-18 12:43:10 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:10 -参数 : []
2019-04-18 12:43:10 -耗时 : 7
2019-04-18 12:43:10 -返回值 : charts/tableHeatYY
2019-04-18 12:43:11 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:43:11 -HTTP METHOD : GET
2019-04-18 12:43:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:43:11 -参数 : []
2019-04-18 12:43:11 -耗时 : 1
2019-04-18 12:43:11 -返回值 : charts/tableWaterYY
2019-04-18 12:43:12 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:12 -HTTP METHOD : GET
2019-04-18 12:43:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:12 -参数 : []
2019-04-18 12:43:12 -耗时 : 2
2019-04-18 12:43:12 -返回值 : charts/tableHeatYY
2019-04-18 12:43:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:43:12 -HTTP METHOD : GET
2019-04-18 12:43:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:43:12 -参数 : []
2019-04-18 12:43:12 -耗时 : 0
2019-04-18 12:43:12 -返回值 : charts/tableElecYY
2019-04-18 12:43:12 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:43:12 -HTTP METHOD : GET
2019-04-18 12:43:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:43:12 -参数 : []
2019-04-18 12:43:12 -耗时 : 0
2019-04-18 12:43:12 -返回值 : charts/tableWaterYY
2019-04-18 12:43:13 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:13 -HTTP METHOD : GET
2019-04-18 12:43:13 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:13 -参数 : []
2019-04-18 12:43:13 -耗时 : 0
2019-04-18 12:43:13 -返回值 : charts/tableHeatYY
2019-04-18 12:43:13 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:43:13 -HTTP METHOD : GET
2019-04-18 12:43:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:43:13 -参数 : []
2019-04-18 12:43:13 -耗时 : 0
2019-04-18 12:43:13 -返回值 : charts/tableElecYY
2019-04-18 12:43:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:14 -HTTP METHOD : GET
2019-04-18 12:43:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:14 -参数 : []
2019-04-18 12:43:14 -耗时 : 2
2019-04-18 12:43:14 -返回值 : charts/tableHeatYY
2019-04-18 12:43:14 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:43:14 -HTTP METHOD : GET
2019-04-18 12:43:14 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:43:14 -参数 : []
2019-04-18 12:43:14 -耗时 : 1
2019-04-18 12:43:14 -返回值 : charts/tableWaterYY
2019-04-18 12:43:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:14 -HTTP METHOD : GET
2019-04-18 12:43:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:14 -参数 : []
2019-04-18 12:43:14 -耗时 : 1
2019-04-18 12:43:14 -返回值 : charts/tableHeatYY
2019-04-18 12:43:15 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:43:15 -HTTP METHOD : GET
2019-04-18 12:43:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:43:15 -参数 : []
2019-04-18 12:43:15 -耗时 : 0
2019-04-18 12:43:15 -返回值 : charts/tableElecYY
2019-04-18 12:43:16 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-18 12:43:16 -HTTP METHOD : GET
2019-04-18 12:43:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-18 12:43:16 -参数 : []
2019-04-18 12:43:16 -耗时 : 2
2019-04-18 12:43:16 -返回值 : charts/tableWaterYY
2019-04-18 12:43:16 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-18 12:43:16 -HTTP METHOD : GET
2019-04-18 12:43:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-18 12:43:16 -参数 : []
2019-04-18 12:43:16 -耗时 : 1
2019-04-18 12:43:16 -返回值 : charts/tableHeatYY
2019-04-18 12:43:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 12:43:16 -HTTP METHOD : GET
2019-04-18 12:43:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 12:43:16 -参数 : []
2019-04-18 12:43:16 -耗时 : 0
2019-04-18 12:43:16 -返回值 : charts/tableElecYY
2019-04-18 12:48:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 26 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(25)-CONNECTED(25)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 300], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 50], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1682]
2019-04-18 13:04:03 -Validating all active sessions...
2019-04-18 13:04:03 -Finished session validation.  No sessions were stopped.
2019-04-18 13:18:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 26 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(25)-CONNECTED(25)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 300], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 50], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2115]
2019-04-18 13:43:05 -请求地址 : http://localhost:8081/login;JSESSIONID=a45622a5-5ca9-4ae5-afbc-63e429195a9a
2019-04-18 13:43:05 -HTTP METHOD : GET
2019-04-18 13:43:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 13:43:05 -参数 : [{}]
2019-04-18 13:43:05 -耗时 : 1
2019-04-18 13:43:05 -返回值 : login
2019-04-18 13:43:06 -请求地址 : http://localhost:8081/getVerify
2019-04-18 13:43:06 -HTTP METHOD : GET
2019-04-18 13:43:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 13:43:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c86c795, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c3a6444]
2019-04-18 13:43:06 -1639
2019-04-18 13:43:06 -耗时 : 90
2019-04-18 13:43:06 -返回值 : null
2019-04-18 13:43:06 -请求地址 : http://localhost:8081/login
2019-04-18 13:43:06 -HTTP METHOD : GET
2019-04-18 13:43:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 13:43:06 -参数 : [{}]
2019-04-18 13:43:06 -耗时 : 2
2019-04-18 13:43:06 -返回值 : login
2019-04-18 13:47:46 -Validating all active sessions...
2019-04-18 13:47:46 -Finished session validation.  No sessions were stopped.
2019-04-18 13:48:08 -请求地址 : http://localhost:8081/login
2019-04-18 13:48:08 -HTTP METHOD : POST
2019-04-18 13:48:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 13:48:08 -参数 : [admin, 111111, 1639, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5fa7f407]
2019-04-18 13:48:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 13:48:08 -==> Parameters: admin(String)
2019-04-18 13:48:08 -<==      Total: 1
2019-04-18 13:48:08 -耗时 : 256
2019-04-18 13:48:08 -返回值 : {msg=操作成功, code=0}
2019-04-18 13:48:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:48:08 -==> Parameters: 1(Long), admin(String), 登录(String), 256(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 13:48:08.567(Timestamp)
2019-04-18 13:48:08 -请求地址 : http://localhost:8081/index
2019-04-18 13:48:08 -HTTP METHOD : GET
2019-04-18 13:48:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 13:48:08 -参数 : [{}]
2019-04-18 13:48:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 13:48:08 -==> Parameters: 1(Long)
2019-04-18 13:48:08 -<==    Updates: 1
2019-04-18 13:48:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 26 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(25)-CONNECTED(25)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 303], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 51], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2536]
2019-04-18 13:48:08 -<==      Total: 49
2019-04-18 13:48:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 13:48:08 -==> Parameters: 138(Long)
2019-04-18 13:48:08 -<==      Total: 1
2019-04-18 13:48:08 -耗时 : 368
2019-04-18 13:48:08 -返回值 : index_v1
2019-04-18 13:48:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:48:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 369(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 13:48:08.958(Timestamp)
2019-04-18 13:48:09 -<==    Updates: 1
2019-04-18 13:48:09 -请求地址 : http://localhost:8081/main
2019-04-18 13:48:09 -HTTP METHOD : GET
2019-04-18 13:48:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 13:48:09 -参数 : []
2019-04-18 13:48:09 -耗时 : 0
2019-04-18 13:48:09 -返回值 : main
2019-04-18 13:48:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 13:48:09 -HTTP METHOD : GET
2019-04-18 13:48:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 13:48:09 -参数 : []
2019-04-18 13:48:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 13:48:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 13:48:09 -请求地址 : http://localhost:8081/main
2019-04-18 13:48:09 -HTTP METHOD : GET
2019-04-18 13:48:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 13:48:09 -参数 : []
2019-04-18 13:48:09 -耗时 : 0
2019-04-18 13:48:09 -返回值 : main
2019-04-18 13:48:09 -<==      Total: 0
2019-04-18 13:48:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 13:48:09 -==> Parameters: 1(Long), 0(String)
2019-04-18 13:48:09 -<==      Total: 1
2019-04-18 13:48:09 -耗时 : 138
2019-04-18 13:48:09 -返回值 : com.bootdo.common.utils.PageUtils@67e4e97b
2019-04-18 13:49:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 13:49:22 -==> Parameters: 1(Long)
2019-04-18 13:49:22 -<==      Total: 93
2019-04-18 13:49:22 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 13:49:22 -HTTP METHOD : GET
2019-04-18 13:49:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 13:49:22 -参数 : []
2019-04-18 13:49:22 -耗时 : 0
2019-04-18 13:49:22 -返回值 : charts/tableDD
2019-04-18 13:49:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 13:49:30 -HTTP METHOD : GET
2019-04-18 13:49:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 13:49:30 -参数 : []
2019-04-18 13:49:30 -耗时 : 1
2019-04-18 13:49:30 -返回值 : system/dept/deptTree
2019-04-18 13:49:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 13:49:30 -HTTP METHOD : GET
2019-04-18 13:49:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 13:49:30 -参数 : []
2019-04-18 13:49:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 13:49:30 -==> Parameters: 
2019-04-18 13:49:31 -<==      Total: 3
2019-04-18 13:49:31 -耗时 : 95
2019-04-18 13:49:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 13:49:33 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 13:49:33 -HTTP METHOD : POST
2019-04-18 13:49:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 13:49:33 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@75bf959c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@28150846, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@29196452, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@75bf959c, com.bootdo.moneyLog.vo.WaterLogVo@28150846, com.bootdo.moneyLog.vo.HeatLogVo@29196452]
2019-04-18 13:49:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:34 -<==      Total: 1
2019-04-18 13:49:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:34 -<==      Total: 1
2019-04-18 13:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:49:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 13:49:34.468(Timestamp)
2019-04-18 13:49:34 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 13:49:34 -<==    Updates: 1
2019-04-18 13:49:34 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 13:49:34 -HTTP METHOD : POST
2019-04-18 13:49:34 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 13:49:34 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5b60f916, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7355d220, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@39aa8d89, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5b60f916, com.bootdo.moneyLog.vo.WaterLogVo@7355d220, com.bootdo.moneyLog.vo.HeatLogVo@39aa8d89]
2019-04-18 13:49:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:34 -<==      Total: 1
2019-04-18 13:49:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:34 -<==      Total: 1
2019-04-18 13:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:49:34 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 13:49:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 13:49:34.918(Timestamp)
2019-04-18 13:49:34 -<==    Updates: 1
2019-04-18 13:49:35 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 13:49:35 -HTTP METHOD : POST
2019-04-18 13:49:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 13:49:35 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3153068, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6372ebc1, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2a700468, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3153068, com.bootdo.moneyLog.vo.WaterLogVo@6372ebc1, com.bootdo.moneyLog.vo.HeatLogVo@2a700468]
2019-04-18 13:49:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:35 -<==      Total: 1
2019-04-18 13:49:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:35 -<==      Total: 1
2019-04-18 13:49:35 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 13:49:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:49:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 13:49:35.011(Timestamp)
2019-04-18 13:49:35 -<==    Updates: 1
2019-04-18 13:49:36 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 13:49:36 -HTTP METHOD : POST
2019-04-18 13:49:36 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 13:49:36 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3953ae87, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@38eeff2d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5abe9bb9, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3953ae87, com.bootdo.moneyLog.vo.WaterLogVo@38eeff2d, com.bootdo.moneyLog.vo.HeatLogVo@5abe9bb9]
2019-04-18 13:49:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:36 -<==      Total: 1
2019-04-18 13:49:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:36 -<==      Total: 1
2019-04-18 13:49:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:49:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 13:49:36.767(Timestamp)
2019-04-18 13:49:36 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 13:49:36 -<==    Updates: 1
2019-04-18 13:49:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 13:49:39 -HTTP METHOD : POST
2019-04-18 13:49:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 13:49:39 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@15317fdc, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@71353517, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2eb0ad68, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@15317fdc, com.bootdo.moneyLog.vo.WaterLogVo@71353517, com.bootdo.moneyLog.vo.HeatLogVo@2eb0ad68]
2019-04-18 13:49:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:39 -<==      Total: 1
2019-04-18 13:49:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 13:49:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 13:49:39 -<==      Total: 1
2019-04-18 13:49:39 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 13:49:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 13:49:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 13:49:39.507(Timestamp)
2019-04-18 13:49:39 -<==    Updates: 1
2019-04-18 14:18:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 27 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(26)-CONNECTED(26)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 312], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 52], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2968]
2019-04-18 14:40:25 -请求地址 : http://localhost:8081/login;JSESSIONID=75519bca-8b4e-4ad1-b149-47845bf7a2cf
2019-04-18 14:40:25 -HTTP METHOD : GET
2019-04-18 14:40:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 14:40:25 -参数 : [{}]
2019-04-18 14:40:25 -耗时 : 2
2019-04-18 14:40:25 -返回值 : login
2019-04-18 14:40:26 -请求地址 : http://localhost:8081/getVerify
2019-04-18 14:40:26 -HTTP METHOD : GET
2019-04-18 14:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 14:40:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43d7a88e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6693d72]
2019-04-18 14:40:26 -4856
2019-04-18 14:40:26 -耗时 : 26
2019-04-18 14:40:26 -返回值 : null
2019-04-18 14:40:26 -请求地址 : http://localhost:8081/login
2019-04-18 14:40:26 -HTTP METHOD : GET
2019-04-18 14:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 14:40:26 -参数 : [{}]
2019-04-18 14:40:26 -耗时 : 3
2019-04-18 14:40:26 -返回值 : login
2019-04-18 14:40:32 -请求地址 : http://localhost:8081/login
2019-04-18 14:40:32 -HTTP METHOD : POST
2019-04-18 14:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 14:40:32 -参数 : [admin, 111111, 4856, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ee8a83a]
2019-04-18 14:40:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 14:40:32 -==> Parameters: admin(String)
2019-04-18 14:40:32 -<==      Total: 1
2019-04-18 14:40:32 -耗时 : 96
2019-04-18 14:40:32 -返回值 : {msg=操作成功, code=0}
2019-04-18 14:40:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:40:32 -==> Parameters: 1(Long), admin(String), 登录(String), 96(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 14:40:32.41(Timestamp)
2019-04-18 14:40:32 -请求地址 : http://localhost:8081/index
2019-04-18 14:40:32 -HTTP METHOD : GET
2019-04-18 14:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 14:40:32 -参数 : [{}]
2019-04-18 14:40:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 14:40:32 -==> Parameters: 1(Long)
2019-04-18 14:40:32 -<==      Total: 49
2019-04-18 14:40:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 14:40:32 -==> Parameters: 138(Long)
2019-04-18 14:40:32 -<==      Total: 1
2019-04-18 14:40:32 -耗时 : 19
2019-04-18 14:40:32 -返回值 : index_v1
2019-04-18 14:40:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:40:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 14:40:32.461(Timestamp)
2019-04-18 14:40:32 -请求地址 : http://localhost:8081/main
2019-04-18 14:40:32 -HTTP METHOD : GET
2019-04-18 14:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 14:40:32 -参数 : []
2019-04-18 14:40:32 -耗时 : 1
2019-04-18 14:40:32 -返回值 : main
2019-04-18 14:40:32 -<==    Updates: 1
2019-04-18 14:40:32 -<==    Updates: 1
2019-04-18 14:40:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 14:40:33 -HTTP METHOD : GET
2019-04-18 14:40:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 14:40:33 -参数 : []
2019-04-18 14:40:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 14:40:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 14:40:33 -<==      Total: 0
2019-04-18 14:40:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 14:40:33 -==> Parameters: 1(Long), 0(String)
2019-04-18 14:40:33 -<==      Total: 1
2019-04-18 14:40:33 -耗时 : 15
2019-04-18 14:40:33 -返回值 : com.bootdo.common.utils.PageUtils@7d83b6ca
2019-04-18 14:40:33 -请求地址 : http://localhost:8081/main
2019-04-18 14:40:33 -HTTP METHOD : GET
2019-04-18 14:40:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 14:40:33 -参数 : []
2019-04-18 14:40:33 -耗时 : 0
2019-04-18 14:40:33 -返回值 : main
2019-04-18 14:40:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 14:40:41 -==> Parameters: 1(Long)
2019-04-18 14:40:41 -<==      Total: 93
2019-04-18 14:40:41 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 14:40:41 -HTTP METHOD : GET
2019-04-18 14:40:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 14:40:41 -参数 : []
2019-04-18 14:40:41 -耗时 : 1
2019-04-18 14:40:41 -返回值 : charts/tableDD
2019-04-18 14:40:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 14:40:48 -HTTP METHOD : GET
2019-04-18 14:40:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 14:40:48 -参数 : []
2019-04-18 14:40:48 -耗时 : 1
2019-04-18 14:40:48 -返回值 : system/dept/deptTree
2019-04-18 14:40:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 14:40:48 -HTTP METHOD : GET
2019-04-18 14:40:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 14:40:48 -参数 : []
2019-04-18 14:40:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 14:40:48 -==> Parameters: 
2019-04-18 14:40:48 -<==      Total: 3
2019-04-18 14:40:48 -耗时 : 102
2019-04-18 14:40:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 14:40:50 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 14:40:50 -HTTP METHOD : POST
2019-04-18 14:40:50 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 14:40:50 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@407d552b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6ea4a900, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2563b5d3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@407d552b, com.bootdo.moneyLog.vo.WaterLogVo@6ea4a900, com.bootdo.moneyLog.vo.HeatLogVo@2563b5d3]
2019-04-18 14:40:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:40:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:40:50 -<==      Total: 1
2019-04-18 14:40:50 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:40:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:40:50 -<==      Total: 1
2019-04-18 14:40:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:40:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 14:40:50.161(Timestamp)
2019-04-18 14:40:50 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 14:40:50 -<==    Updates: 1
2019-04-18 14:40:51 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 14:40:51 -HTTP METHOD : POST
2019-04-18 14:40:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 14:40:51 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@42d38f0, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@32f6b97a, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6fd6ccc3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@42d38f0, com.bootdo.moneyLog.vo.WaterLogVo@32f6b97a, com.bootdo.moneyLog.vo.HeatLogVo@6fd6ccc3]
2019-04-18 14:40:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:40:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:40:51 -<==      Total: 1
2019-04-18 14:40:51 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:40:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:40:51 -<==      Total: 1
2019-04-18 14:40:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:40:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 14:40:51.691(Timestamp)
2019-04-18 14:40:51 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.MElecLogSumA attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.MElecLogSumA(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.MElecLogSumA(ElecLogServiceImpl.java:80)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:73)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$6265fcc5.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 14:40:51 -<==    Updates: 1
2019-04-18 14:46:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 3920 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 14:46:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 14:46:33 -The following profiles are active: dev
2019-04-18 14:46:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 14:46:34 CST 2019]; root of context hierarchy
2019-04-18 14:46:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 14:46:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 14:46:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 14:46:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 14:46:48 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 14:46:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 14:46:48 -Starting service [Tomcat]
2019-04-18 14:46:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 14:46:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 14:46:49 -Initializing Spring embedded WebApplicationContext
2019-04-18 14:46:49 -Root WebApplicationContext: initialization completed in 15506 ms
2019-04-18 14:46:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 14:46:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 14:46:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 14:46:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 14:46:50 -Filter xssFilter was not registered (disabled)
2019-04-18 14:46:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 14:46:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 14:46:50 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 14:46:50 -Servlet dispatcherServlet mapped to [/]
2019-04-18 14:46:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 14:46:34 CST 2019]; root of context hierarchy
2019-04-18 14:46:55 -Using default implementation for ThreadExecutor
2019-04-18 14:46:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 14:46:55 -Quartz Scheduler v.2.2.1 created.
2019-04-18 14:46:55 -RAMJobStore initialized.
2019-04-18 14:46:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 14:46:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 14:46:55 -Quartz scheduler version: 2.2.1
2019-04-18 14:46:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-18 14:46:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 14:46:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 14:46:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 14:46:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 14:46:59 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 14:46:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 14:46:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 14:46:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 14:46:59 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 14:46:59 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 14:46:59 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 14:46:59 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 14:46:59 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 14:46:59 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 14:46:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 14:46:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 14:46:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 14:46:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 14:46:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 14:46:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 14:46:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 14:46:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 14:46:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 14:46:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 14:46:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 14:46:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 14:46:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 14:46:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 14:46:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 14:46:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 14:46:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 14:46:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 14:46:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 14:46:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 14:46:59 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 14:46:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 14:46:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 14:46:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 14:46:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 14:46:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 14:46:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 14:46:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 14:46:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 14:46:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 14:46:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 14:46:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 14:46:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:46:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 14:46:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 14:46:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 14:46:59 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 14:46:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 14:46:59 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:46:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 14:47:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 14:47:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 14:47:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 14:47:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 14:47:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 14:47:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 14:47:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 14:47:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 14:47:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 14:47:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 14:47:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 14:47:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 14:47:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 14:47:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 14:47:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 14:47:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 14:47:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 14:47:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 14:47:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 14:47:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 14:47:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 14:47:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 14:47:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 14:47:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 14:47:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 14:47:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 14:47:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 14:47:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 14:47:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 14:47:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 14:47:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 14:47:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 14:47:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 14:47:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 14:47:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 14:47:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:47:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 14:47:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:47:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 14:47:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 14:47:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 14:47:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 14:47:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 14:47:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 14:47:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 14:47:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 14:47:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 14:47:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 14:47:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 14:47:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 14:47:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 14:47:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 14:47:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 14:46:34 CST 2019]; root of context hierarchy
2019-04-18 14:47:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 14:47:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 14:47:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 14:47:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 14:47:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 14:47:06 -Registering beans for JMX exposure on startup
2019-04-18 14:47:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 14:47:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 14:47:06 -Starting beans in phase 2147483647
2019-04-18 14:47:06 -Context refreshed
2019-04-18 14:47:06 -Found 1 custom documentation plugin(s)
2019-04-18 14:47:06 -Scanning for api listing references
2019-04-18 14:47:07 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 14:47:07 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 14:47:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_1
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_2
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_3
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPUT_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 14:47:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_4
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_5
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_2
2019-04-18 14:47:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_3
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_3
2019-04-18 14:47:07 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_3
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_6
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_7
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPUT_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 14:47:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_4
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_4
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_4
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_8
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_9
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingGET_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPUT_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 14:47:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 14:47:07 -Generating unique operation named: ElecUsingGET_1
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_5
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_5
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_5
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_10
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_11
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingGET_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPUT_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 14:47:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_6
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_6
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_6
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_6
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_7
2019-04-18 14:47:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_7
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_12
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_13
2019-04-18 14:47:07 -Generating unique operation named: saveUsingPOST_6
2019-04-18 14:47:07 -Generating unique operation named: updateUsingGET_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPOST_7
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPUT_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 14:47:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 14:47:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 14:47:07 -Generating unique operation named: addUsingGET_7
2019-04-18 14:47:07 -Generating unique operation named: editUsingGET_8
2019-04-18 14:47:07 -Generating unique operation named: listUsingGET_8
2019-04-18 14:47:07 -Generating unique operation named: removeUsingPOST_14
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_15
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingGET_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPUT_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 14:47:08 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_8
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_9
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_9
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_16
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_17
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingGET_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPUT_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 14:47:08 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_9
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_10
2019-04-18 14:47:08 -Generating unique operation named: infoUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingPOST_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingPUT_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 14:47:08 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_10
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_18
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_19
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_10
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_11
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_20
2019-04-18 14:47:08 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_10
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_11
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_12
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_21
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_10
2019-04-18 14:47:08 -Generating unique operation named: treeUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: treeUsingGET_2
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_11
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_11
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_12
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_13
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_22
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_23
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_11
2019-04-18 14:47:08 -Generating unique operation named: updateUsingGET_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_12
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPUT_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 14:47:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_12
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_13
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_14
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_24
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_25
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_12
2019-04-18 14:47:08 -Generating unique operation named: updateUsingGET_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_13
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPUT_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 14:47:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_13
2019-04-18 14:47:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_14
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_15
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_13
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_14
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_14
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_16
2019-04-18 14:47:08 -Generating unique operation named: listUsingHEAD_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingPOST_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingPUT_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingPATCH_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingDELETE_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 14:47:08 -Generating unique operation named: listUsingTRACE_1
2019-04-18 14:47:08 -Generating unique operation named: countDDUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 14:47:08 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 14:47:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 14:47:08 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 14:47:08 -Generating unique operation named: addUsingGET_14
2019-04-18 14:47:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 14:47:08 -Generating unique operation named: editUsingGET_15
2019-04-18 14:47:08 -Generating unique operation named: listUsingGET_17
2019-04-18 14:47:08 -Generating unique operation named: removeUsingPOST_26
2019-04-18 14:47:08 -Generating unique operation named: saveUsingPOST_15
2019-04-18 14:47:08 -Generating unique operation named: treeUsingGET_3
2019-04-18 14:47:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 14:47:08 -Generating unique operation named: updateUsingPOST_15
2019-04-18 14:47:09 -Generating unique operation named: addUsingGET_15
2019-04-18 14:47:09 -Generating unique operation named: editUsingGET_16
2019-04-18 14:47:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 14:47:09 -Generating unique operation named: listUsingGET_18
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_27
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_28
2019-04-18 14:47:09 -Generating unique operation named: saveUsingPOST_16
2019-04-18 14:47:09 -Generating unique operation named: updateUsingGET_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPOST_16
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPUT_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 14:47:09 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 14:47:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 14:47:09 -Generating unique operation named: addUsingGET_16
2019-04-18 14:47:09 -Generating unique operation named: editUsingGET_17
2019-04-18 14:47:09 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 14:47:09 -Generating unique operation named: listUsingGET_19
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_29
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_30
2019-04-18 14:47:09 -Generating unique operation named: saveUsingPOST_17
2019-04-18 14:47:09 -Generating unique operation named: updateUsingGET_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPOST_17
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPUT_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 14:47:09 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 14:47:09 -Generating unique operation named: addUsingGET_17
2019-04-18 14:47:09 -Generating unique operation named: editUsingGET_18
2019-04-18 14:47:09 -Generating unique operation named: listUsingGET_20
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_31
2019-04-18 14:47:09 -Generating unique operation named: removeUsingPOST_32
2019-04-18 14:47:09 -Generating unique operation named: saveUsingPOST_18
2019-04-18 14:47:09 -Generating unique operation named: updateUsingGET_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPOST_18
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPUT_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 14:47:09 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 14:47:09 -Starting Quartz Scheduler now
2019-04-18 14:47:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 14:47:09 -Starting...
2019-04-18 14:47:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 14:47:09 -Started.
2019-04-18 14:47:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 14:47:09 -Using a shared selector for servlet write/read
2019-04-18 14:47:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 14:47:09 -Started BootdoApplication in 37.015 seconds (JVM running for 37.873)
2019-04-18 14:47:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 14:47:10 -==> Parameters: 
2019-04-18 14:47:10 -<==      Total: 1
2019-04-18 14:47:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 14:47:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 14:47:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 156 ms
2019-04-18 14:47:15 -Enabling session validation scheduler...
2019-04-18 14:47:16 -请求地址 : http://localhost:8081/login;JSESSIONID=d4cedf84-7ac9-4090-8f9d-15636982406a
2019-04-18 14:47:16 -HTTP METHOD : GET
2019-04-18 14:47:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 14:47:16 -参数 : [{}]
2019-04-18 14:47:16 -耗时 : 7
2019-04-18 14:47:16 -返回值 : login
2019-04-18 14:47:18 -请求地址 : http://localhost:8081/getVerify
2019-04-18 14:47:18 -HTTP METHOD : GET
2019-04-18 14:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 14:47:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f933590, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c538dbe]
2019-04-18 14:47:29 -9709
2019-04-18 14:47:30 -耗时 : 11541
2019-04-18 14:47:30 -返回值 : null
2019-04-18 14:47:39 -请求地址 : http://localhost:8081/login
2019-04-18 14:47:39 -HTTP METHOD : POST
2019-04-18 14:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 14:47:39 -参数 : [admin, 111111, 9709, org.apache.shiro.web.servlet.ShiroHttpServletRequest@954c4e2]
2019-04-18 14:47:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 14:47:39 -==> Parameters: admin(String)
2019-04-18 14:47:39 -<==      Total: 1
2019-04-18 14:47:39 -耗时 : 491
2019-04-18 14:47:39 -返回值 : {msg=操作成功, code=0}
2019-04-18 14:47:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 14:47:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:47:40 -==> Parameters: 1(Long), admin(String), 登录(String), 491(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 14:47:40.235(Timestamp)
2019-04-18 14:47:41 -<==    Updates: 1
2019-04-18 14:47:41 -请求地址 : http://localhost:8081/index
2019-04-18 14:47:41 -HTTP METHOD : GET
2019-04-18 14:47:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 14:47:41 -参数 : [{}]
2019-04-18 14:47:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 14:47:42 -==> Parameters: 1(Long)
2019-04-18 14:47:42 -<==      Total: 49
2019-04-18 14:47:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 14:47:42 -==> Parameters: 138(Long)
2019-04-18 14:47:42 -<==      Total: 1
2019-04-18 14:47:42 -耗时 : 1190
2019-04-18 14:47:42 -返回值 : index_v1
2019-04-18 14:47:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:47:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1190(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 14:47:42.493(Timestamp)
2019-04-18 14:47:42 -请求地址 : http://localhost:8081/main
2019-04-18 14:47:42 -HTTP METHOD : GET
2019-04-18 14:47:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 14:47:42 -参数 : []
2019-04-18 14:47:42 -耗时 : 0
2019-04-18 14:47:42 -返回值 : main
2019-04-18 14:47:42 -<==    Updates: 1
2019-04-18 14:47:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 14:47:43 -HTTP METHOD : GET
2019-04-18 14:47:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 14:47:43 -参数 : []
2019-04-18 14:47:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 14:47:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 14:47:43 -请求地址 : http://localhost:8081/main
2019-04-18 14:47:43 -HTTP METHOD : GET
2019-04-18 14:47:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 14:47:43 -参数 : []
2019-04-18 14:47:43 -耗时 : 1
2019-04-18 14:47:43 -返回值 : main
2019-04-18 14:47:43 -<==      Total: 0
2019-04-18 14:47:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 14:47:43 -==> Parameters: 1(Long), 0(String)
2019-04-18 14:47:43 -<==      Total: 1
2019-04-18 14:47:43 -耗时 : 282
2019-04-18 14:47:43 -返回值 : com.bootdo.common.utils.PageUtils@54e062c5
2019-04-18 14:47:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 14:47:47 -==> Parameters: 1(Long)
2019-04-18 14:47:47 -<==      Total: 93
2019-04-18 14:47:48 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 14:47:48 -HTTP METHOD : GET
2019-04-18 14:47:48 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 14:47:48 -参数 : []
2019-04-18 14:47:48 -耗时 : 11
2019-04-18 14:47:48 -返回值 : charts/tableDD
2019-04-18 14:47:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 14:47:55 -HTTP METHOD : GET
2019-04-18 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 14:47:55 -参数 : []
2019-04-18 14:47:55 -耗时 : 0
2019-04-18 14:47:55 -返回值 : system/dept/deptTree
2019-04-18 14:47:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 14:47:55 -HTTP METHOD : GET
2019-04-18 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 14:47:55 -参数 : []
2019-04-18 14:47:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 14:47:55 -==> Parameters: 
2019-04-18 14:47:56 -<==      Total: 3
2019-04-18 14:47:56 -耗时 : 97
2019-04-18 14:47:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 14:47:58 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 14:47:58 -HTTP METHOD : POST
2019-04-18 14:47:58 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 14:47:58 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@138f224c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@610e8555, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4032f983, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@138f224c, com.bootdo.moneyLog.vo.WaterLogVo@610e8555, com.bootdo.moneyLog.vo.HeatLogVo@4032f983]
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:58 -<==      Total: 1
2019-04-18 14:47:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:47:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:59 -<==      Total: 1
2019-04-18 14:47:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:59 -<==      Total: 1
2019-04-18 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:59 -<==      Total: 1
2019-04-18 14:47:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:47:59 -<==      Total: 1
2019-04-18 14:47:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:47:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 14:47:59.126(Timestamp)
2019-04-18 14:47:59 -Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.MHeatLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.MHeatLogSumC(HeatLogServiceImpl.java:79)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:101)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 14:47:59 -<==    Updates: 1
2019-04-18 14:48:01 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-18 14:48:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 14:48:01 -HTTP METHOD : POST
2019-04-18 14:48:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 14:48:01 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4b4b71cc, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6e598092, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@456d77f2, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4b4b71cc, com.bootdo.moneyLog.vo.WaterLogVo@6e598092, com.bootdo.moneyLog.vo.HeatLogVo@456d77f2]
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 14:48:01 -<==      Total: 1
2019-04-18 14:48:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 14:48:01 -Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.MHeatLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.MHeatLogSumC(HeatLogServiceImpl.java:79)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:101)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 14:48:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.HeatLogDao.MHeatLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 14:48:01.683(Timestamp)
2019-04-18 14:48:01 -<==    Updates: 1
2019-04-18 15:02:37 -Starting BootdoApplication on ZJZL-20180906VX with PID 9088 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:02:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:02:37 -The following profiles are active: dev
2019-04-18 15:02:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:02:38 CST 2019]; root of context hierarchy
2019-04-18 15:02:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:02:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:02:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:02:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:02:47 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:02:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:02:47 -Starting service [Tomcat]
2019-04-18 15:02:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:02:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:02:48 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:02:48 -Root WebApplicationContext: initialization completed in 10331 ms
2019-04-18 15:02:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:02:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:02:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:02:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:02:49 -Filter xssFilter was not registered (disabled)
2019-04-18 15:02:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:02:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:02:49 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:02:49 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:02:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:02:38 CST 2019]; root of context hierarchy
2019-04-18 15:02:53 -Using default implementation for ThreadExecutor
2019-04-18 15:02:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:02:53 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:02:53 -RAMJobStore initialized.
2019-04-18 15:02:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:02:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:02:53 -Quartz scheduler version: 2.2.1
2019-04-18 15:02:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-18 15:02:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:02:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:02:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:02:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:02:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:02:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:56 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:02:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:56 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:02:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:02:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:56 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:02:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:02:57 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:02:57 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:02:57 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:57 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:02:57 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:02:57 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:02:57 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:02:57 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:02:57 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:02:57 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:02:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:02:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:02:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:02:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:02:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:02:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:02:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:02:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:02:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:02:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:02:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:02:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:02:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:02:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:02:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:02:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:02:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:02:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:02:57 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:02:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:02:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:02:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:02:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:02:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:02:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:02:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:02:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:02:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:02:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:02:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:02:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:02:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:02:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:02:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:02:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:02:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:02:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:02:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:02:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:02:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:02:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:02:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:02:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:02:57 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:02:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:02:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:02:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:02:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:02:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:02:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:02:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:02:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:02:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:02:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:02:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:02:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:02:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:02:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:02:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:02:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:02:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:02:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:02:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:02:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:02:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:02:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:02:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:02:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:02:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:02:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:02:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:02:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:02:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:02:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:02:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:02:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:02:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:02:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:02:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:02:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:02:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:02:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:02:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:02:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:02:38 CST 2019]; root of context hierarchy
2019-04-18 15:02:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:02:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:02:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:02:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:02:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:03:00 -Registering beans for JMX exposure on startup
2019-04-18 15:03:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:03:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:03:00 -Starting beans in phase 2147483647
2019-04-18 15:03:00 -Context refreshed
2019-04-18 15:03:00 -Found 1 custom documentation plugin(s)
2019-04-18 15:03:01 -Scanning for api listing references
2019-04-18 15:03:02 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:03:02 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:03:02 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:03:02 -Generating unique operation named: addUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: editUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: listUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:03:02 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:03:02 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:03:02 -Generating unique operation named: addUsingGET_2
2019-04-18 15:03:02 -Generating unique operation named: editUsingGET_2
2019-04-18 15:03:02 -Generating unique operation named: listUsingGET_2
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:03:02 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:03:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:03:02 -Generating unique operation named: addUsingGET_3
2019-04-18 15:03:02 -Generating unique operation named: editUsingGET_3
2019-04-18 15:03:02 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:03:02 -Generating unique operation named: listUsingGET_3
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:03:02 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:03:02 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:03:02 -Generating unique operation named: addUsingGET_4
2019-04-18 15:03:02 -Generating unique operation named: editUsingGET_4
2019-04-18 15:03:02 -Generating unique operation named: listUsingGET_4
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:03:02 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:03:02 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:03:02 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:03:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:03:03 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:03:03 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_5
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_5
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_5
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:03:03 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_6
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_6
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_7
2019-04-18 15:03:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_7
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:03:03 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:03:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_7
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_8
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_8
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:03:03 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_8
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_9
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_9
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:03:03 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:03:03 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_9
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_10
2019-04-18 15:03:03 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:03:03 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_10
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_11
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:03:03 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_10
2019-04-18 15:03:03 -Generating unique operation named: editUsingGET_11
2019-04-18 15:03:03 -Generating unique operation named: listUsingGET_12
2019-04-18 15:03:03 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:03:03 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:03:03 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:03:03 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:03:03 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:03:03 -Generating unique operation named: addUsingGET_11
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_12
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_13
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:03:04 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_12
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_13
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_14
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:03:04 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_13
2019-04-18 15:03:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_14
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_15
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_16
2019-04-18 15:03:04 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:03:04 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:03:04 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:03:04 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:03:04 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:03:04 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:03:04 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_14
2019-04-18 15:03:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_15
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_17
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:03:04 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:03:04 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_15
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_16
2019-04-18 15:03:04 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_18
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:03:04 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:03:04 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:03:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_16
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_17
2019-04-18 15:03:04 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_19
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:03:04 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:03:04 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:03:04 -Generating unique operation named: addUsingGET_17
2019-04-18 15:03:04 -Generating unique operation named: editUsingGET_18
2019-04-18 15:03:04 -Generating unique operation named: listUsingGET_20
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:03:04 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:03:04 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:03:04 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:03:04 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:03:04 -Starting Quartz Scheduler now
2019-04-18 15:03:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:03:04 -Starting...
2019-04-18 15:03:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:03:04 -Started.
2019-04-18 15:03:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:03:04 -Using a shared selector for servlet write/read
2019-04-18 15:03:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:03:04 -Started BootdoApplication in 28.543 seconds (JVM running for 29.509)
2019-04-18 15:03:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:03:05 -==> Parameters: 
2019-04-18 15:03:05 -<==      Total: 1
2019-04-18 15:03:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:03:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:03:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-04-18 15:03:12 -Enabling session validation scheduler...
2019-04-18 15:03:12 -请求地址 : http://localhost:8081/login;JSESSIONID=8def70bf-ff86-45b8-8718-6a0d583ae88e
2019-04-18 15:03:12 -HTTP METHOD : GET
2019-04-18 15:03:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:03:12 -参数 : [{}]
2019-04-18 15:03:12 -耗时 : 6
2019-04-18 15:03:12 -返回值 : login
2019-04-18 15:03:13 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:03:13 -HTTP METHOD : GET
2019-04-18 15:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:03:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b67e7cf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5f58687b]
2019-04-18 15:03:14 -1766
2019-04-18 15:03:14 -耗时 : 574
2019-04-18 15:03:14 -返回值 : null
2019-04-18 15:03:19 -请求地址 : http://localhost:8081/login
2019-04-18 15:03:19 -HTTP METHOD : POST
2019-04-18 15:03:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:03:19 -参数 : [admin, 111111, 1766, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c1c675]
2019-04-18 15:03:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:03:19 -==> Parameters: admin(String)
2019-04-18 15:03:20 -<==      Total: 1
2019-04-18 15:03:20 -耗时 : 1042
2019-04-18 15:03:20 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:03:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:03:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:03:20 -==> Parameters: 1(Long), admin(String), 登录(String), 1042(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:03:20.561(Timestamp)
2019-04-18 15:03:20 -请求地址 : http://localhost:8081/index
2019-04-18 15:03:20 -HTTP METHOD : GET
2019-04-18 15:03:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:03:20 -参数 : [{}]
2019-04-18 15:03:21 -<==    Updates: 1
2019-04-18 15:03:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:03:21 -==> Parameters: 1(Long)
2019-04-18 15:03:22 -<==      Total: 49
2019-04-18 15:03:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:03:22 -==> Parameters: 138(Long)
2019-04-18 15:03:22 -<==      Total: 1
2019-04-18 15:03:22 -耗时 : 2012
2019-04-18 15:03:22 -返回值 : index_v1
2019-04-18 15:03:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:03:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2012(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:03:22.679(Timestamp)
2019-04-18 15:03:22 -<==    Updates: 1
2019-04-18 15:03:22 -请求地址 : http://localhost:8081/main
2019-04-18 15:03:22 -HTTP METHOD : GET
2019-04-18 15:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:03:22 -参数 : []
2019-04-18 15:03:22 -耗时 : 1
2019-04-18 15:03:22 -返回值 : main
2019-04-18 15:03:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:03:23 -HTTP METHOD : GET
2019-04-18 15:03:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:03:23 -参数 : []
2019-04-18 15:03:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:03:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:03:23 -请求地址 : http://localhost:8081/main
2019-04-18 15:03:23 -HTTP METHOD : GET
2019-04-18 15:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:03:23 -参数 : []
2019-04-18 15:03:23 -耗时 : 0
2019-04-18 15:03:23 -返回值 : main
2019-04-18 15:03:23 -<==      Total: 0
2019-04-18 15:03:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:03:23 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:03:23 -<==      Total: 1
2019-04-18 15:03:23 -耗时 : 525
2019-04-18 15:03:23 -返回值 : com.bootdo.common.utils.PageUtils@19d46947
2019-04-18 15:03:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:03:29 -==> Parameters: 1(Long)
2019-04-18 15:03:29 -<==      Total: 93
2019-04-18 15:03:29 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:03:29 -HTTP METHOD : GET
2019-04-18 15:03:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:03:29 -参数 : []
2019-04-18 15:03:29 -耗时 : 11
2019-04-18 15:03:29 -返回值 : charts/tableDD
2019-04-18 15:03:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:03:37 -HTTP METHOD : GET
2019-04-18 15:03:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:03:37 -参数 : []
2019-04-18 15:03:37 -耗时 : 1
2019-04-18 15:03:37 -返回值 : system/dept/deptTree
2019-04-18 15:03:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:03:37 -HTTP METHOD : GET
2019-04-18 15:03:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:03:37 -参数 : []
2019-04-18 15:03:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:03:37 -==> Parameters: 
2019-04-18 15:03:37 -<==      Total: 3
2019-04-18 15:03:37 -耗时 : 27
2019-04-18 15:03:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:03:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:03:39 -HTTP METHOD : POST
2019-04-18 15:03:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:03:39 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@18e88499, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3fb56a50, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4b15243c, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@18e88499, com.bootdo.moneyLog.vo.WaterLogVo@3fb56a50, com.bootdo.moneyLog.vo.HeatLogVo@4b15243c]
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:39 -<==      Total: 1
2019-04-18 15:03:39 -Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.WaterLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.WaterLogSumC(WaterLogServiceImpl.java:74)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:112)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 15:03:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:03:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 15:03:39.471(Timestamp)
2019-04-18 15:03:39 -<==    Updates: 1
2019-04-18 15:03:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:03:40 -HTTP METHOD : POST
2019-04-18 15:03:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:03:40 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@1cb036f0, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@351be03, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7fdc813c, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@1cb036f0, com.bootdo.moneyLog.vo.WaterLogVo@351be03, com.bootdo.moneyLog.vo.HeatLogVo@7fdc813c]
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:40 -<==      Total: 1
2019-04-18 15:03:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:03:40 -Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.WaterLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.WaterLogSumC(WaterLogServiceImpl.java:74)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:112)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 15:03:40 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 15:03:40.902(Timestamp)
2019-04-18 15:03:40 -<==    Updates: 1
2019-04-18 15:03:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:03:41 -HTTP METHOD : POST
2019-04-18 15:03:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:03:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5992de3b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@496fa64d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@724da55d, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5992de3b, com.bootdo.moneyLog.vo.WaterLogVo@496fa64d, com.bootdo.moneyLog.vo.HeatLogVo@724da55d]
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:03:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:03:41 -<==      Total: 1
2019-04-18 15:03:41 -Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.WaterLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.WaterLogSumC(WaterLogServiceImpl.java:74)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:112)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 15:03:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:03:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 15:03:41.88(Timestamp)
2019-04-18 15:03:41 -<==    Updates: 1
2019-04-18 15:03:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-18 15:04:59 -Starting BootdoApplication on ZJZL-20180906VX with PID 6808 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:04:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:04:59 -The following profiles are active: dev
2019-04-18 15:04:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:04:59 CST 2019]; root of context hierarchy
2019-04-18 15:05:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:05:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:05:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:05:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:05:07 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:05:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:05:07 -Starting service [Tomcat]
2019-04-18 15:05:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:05:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:05:08 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:05:08 -Root WebApplicationContext: initialization completed in 8794 ms
2019-04-18 15:05:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:05:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:05:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:05:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:05:08 -Filter xssFilter was not registered (disabled)
2019-04-18 15:05:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:05:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:05:08 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:05:08 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:05:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:04:59 CST 2019]; root of context hierarchy
2019-04-18 15:05:12 -Using default implementation for ThreadExecutor
2019-04-18 15:05:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:05:12 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:05:12 -RAMJobStore initialized.
2019-04-18 15:05:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:05:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:05:12 -Quartz scheduler version: 2.2.1
2019-04-18 15:05:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-18 15:05:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:05:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:05:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:05:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:05:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:05:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:05:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:05:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:05:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:05:16 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:05:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:05:16 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:05:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:05:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:05:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:05:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:05:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:05:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:05:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:05:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:05:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:05:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:05:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:05:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:05:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:05:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:05:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:05:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:05:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:05:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:05:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:05:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:05:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:05:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:05:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:05:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:05:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:05:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:05:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:05:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:05:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:05:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:05:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:05:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:05:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:05:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:05:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:05:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:05:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:05:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:05:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:05:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:05:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:05:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:05:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:05:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:05:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:05:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:05:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:05:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:05:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:05:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:05:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:05:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:05:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:05:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:05:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:05:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:05:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:05:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:05:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:05:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:05:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:05:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:05:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:05:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:05:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:05:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:05:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:05:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:05:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:05:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:05:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:05:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:05:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:05:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:05:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:05:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:05:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:05:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:05:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:05:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:05:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:05:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:05:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:05:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:05:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:05:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:05:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:04:59 CST 2019]; root of context hierarchy
2019-04-18 15:05:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:05:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:05:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:05:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:05:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:05:21 -Registering beans for JMX exposure on startup
2019-04-18 15:05:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:05:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:05:21 -Starting beans in phase 2147483647
2019-04-18 15:05:21 -Context refreshed
2019-04-18 15:05:21 -Found 1 custom documentation plugin(s)
2019-04-18 15:05:21 -Scanning for api listing references
2019-04-18 15:05:21 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:05:21 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:05:21 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:05:21 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:05:21 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:05:21 -Generating unique operation named: addUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:05:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_3
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_3
2019-04-18 15:05:22 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_3
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_4
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_4
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_4
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:05:22 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_5
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_5
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_5
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_6
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_6
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_7
2019-04-18 15:05:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_7
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:05:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_7
2019-04-18 15:05:22 -Generating unique operation named: editUsingGET_8
2019-04-18 15:05:22 -Generating unique operation named: listUsingGET_8
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:05:22 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:05:22 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:05:22 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:05:22 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:05:22 -Generating unique operation named: addUsingGET_8
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_9
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_9
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:05:23 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:05:23 -Generating unique operation named: addUsingGET_9
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_10
2019-04-18 15:05:23 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:05:23 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_10
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_11
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:05:23 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: addUsingGET_10
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_11
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_12
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:05:23 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:05:23 -Generating unique operation named: addUsingGET_11
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_12
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_13
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:05:23 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:05:23 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:05:23 -Generating unique operation named: addUsingGET_12
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_13
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_14
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:05:23 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:05:23 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:05:23 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:05:23 -Generating unique operation named: addUsingGET_13
2019-04-18 15:05:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:05:23 -Generating unique operation named: editUsingGET_14
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_15
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:05:23 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:05:23 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:05:23 -Generating unique operation named: listUsingGET_16
2019-04-18 15:05:23 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:05:23 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:05:23 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:05:23 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:05:23 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:05:23 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:05:24 -Generating unique operation named: addUsingGET_14
2019-04-18 15:05:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:05:24 -Generating unique operation named: editUsingGET_15
2019-04-18 15:05:24 -Generating unique operation named: listUsingGET_17
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:05:24 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:05:24 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:05:24 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:05:24 -Generating unique operation named: addUsingGET_15
2019-04-18 15:05:24 -Generating unique operation named: editUsingGET_16
2019-04-18 15:05:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:05:24 -Generating unique operation named: listUsingGET_18
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:05:24 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:05:24 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:05:24 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:05:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:05:24 -Generating unique operation named: addUsingGET_16
2019-04-18 15:05:24 -Generating unique operation named: editUsingGET_17
2019-04-18 15:05:24 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:05:24 -Generating unique operation named: listUsingGET_19
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:05:24 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:05:24 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:05:24 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:05:24 -Generating unique operation named: addUsingGET_17
2019-04-18 15:05:24 -Generating unique operation named: editUsingGET_18
2019-04-18 15:05:24 -Generating unique operation named: listUsingGET_20
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:05:24 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:05:24 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:05:24 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:05:24 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:05:24 -Starting Quartz Scheduler now
2019-04-18 15:05:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:05:24 -Starting...
2019-04-18 15:05:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:05:24 -Started.
2019-04-18 15:05:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:05:24 -Using a shared selector for servlet write/read
2019-04-18 15:05:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:05:24 -Started BootdoApplication in 26.744 seconds (JVM running for 27.802)
2019-04-18 15:05:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:05:25 -==> Parameters: 
2019-04-18 15:05:25 -<==      Total: 1
2019-04-18 15:05:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:05:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:05:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-04-18 15:05:42 -Enabling session validation scheduler...
2019-04-18 15:05:42 -请求地址 : http://localhost:8081/login;JSESSIONID=5068c5e1-4644-4b35-ab74-572b33a33003
2019-04-18 15:05:42 -HTTP METHOD : GET
2019-04-18 15:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:05:42 -参数 : [{}]
2019-04-18 15:05:42 -耗时 : 2
2019-04-18 15:05:42 -返回值 : login
2019-04-18 15:05:43 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:05:43 -HTTP METHOD : GET
2019-04-18 15:05:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:05:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c484cfc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@228fa705]
2019-04-18 15:05:44 -0514
2019-04-18 15:05:44 -耗时 : 608
2019-04-18 15:05:44 -返回值 : null
2019-04-18 15:05:44 -请求地址 : http://localhost:8081/login
2019-04-18 15:05:44 -HTTP METHOD : GET
2019-04-18 15:05:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:05:44 -参数 : [{}]
2019-04-18 15:05:44 -耗时 : 0
2019-04-18 15:05:44 -返回值 : login
2019-04-18 15:05:49 -请求地址 : http://localhost:8081/login
2019-04-18 15:05:49 -HTTP METHOD : POST
2019-04-18 15:05:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:05:49 -参数 : [admin, 111111, 0514, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e300a3d]
2019-04-18 15:05:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:05:49 -==> Parameters: admin(String)
2019-04-18 15:05:49 -<==      Total: 1
2019-04-18 15:05:49 -耗时 : 228
2019-04-18 15:05:49 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:05:49 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:05:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:05:49 -==> Parameters: 1(Long), admin(String), 登录(String), 229(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:05:49.775(Timestamp)
2019-04-18 15:05:49 -请求地址 : http://localhost:8081/index
2019-04-18 15:05:49 -HTTP METHOD : GET
2019-04-18 15:05:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:05:49 -参数 : [{}]
2019-04-18 15:05:50 -<==    Updates: 1
2019-04-18 15:05:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:05:50 -==> Parameters: 1(Long)
2019-04-18 15:05:50 -<==      Total: 49
2019-04-18 15:05:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:05:50 -==> Parameters: 138(Long)
2019-04-18 15:05:50 -<==      Total: 1
2019-04-18 15:05:50 -耗时 : 464
2019-04-18 15:05:50 -返回值 : index_v1
2019-04-18 15:05:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:05:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 464(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:05:50.362(Timestamp)
2019-04-18 15:05:50 -<==    Updates: 1
2019-04-18 15:05:50 -请求地址 : http://localhost:8081/main
2019-04-18 15:05:50 -HTTP METHOD : GET
2019-04-18 15:05:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:05:50 -参数 : []
2019-04-18 15:05:50 -耗时 : 1
2019-04-18 15:05:50 -返回值 : main
2019-04-18 15:05:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:05:50 -HTTP METHOD : GET
2019-04-18 15:05:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:05:50 -参数 : []
2019-04-18 15:05:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:05:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:05:50 -<==      Total: 0
2019-04-18 15:05:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:05:50 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:05:50 -<==      Total: 1
2019-04-18 15:05:50 -耗时 : 82
2019-04-18 15:05:50 -返回值 : com.bootdo.common.utils.PageUtils@3395d73d
2019-04-18 15:05:51 -请求地址 : http://localhost:8081/main
2019-04-18 15:05:51 -HTTP METHOD : GET
2019-04-18 15:05:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:05:51 -参数 : []
2019-04-18 15:05:51 -耗时 : 1
2019-04-18 15:05:51 -返回值 : main
2019-04-18 15:05:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:05:55 -==> Parameters: 1(Long)
2019-04-18 15:05:55 -<==      Total: 93
2019-04-18 15:05:55 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:05:55 -HTTP METHOD : GET
2019-04-18 15:05:55 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:05:55 -参数 : []
2019-04-18 15:05:55 -耗时 : 14
2019-04-18 15:05:55 -返回值 : charts/tableDD
2019-04-18 15:06:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:06:01 -HTTP METHOD : GET
2019-04-18 15:06:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:06:01 -参数 : []
2019-04-18 15:06:01 -耗时 : 1
2019-04-18 15:06:01 -返回值 : system/dept/deptTree
2019-04-18 15:06:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:06:01 -HTTP METHOD : GET
2019-04-18 15:06:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:06:01 -参数 : []
2019-04-18 15:06:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:06:01 -==> Parameters: 
2019-04-18 15:06:01 -<==      Total: 3
2019-04-18 15:06:01 -耗时 : 42
2019-04-18 15:06:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:06:03 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:06:03 -HTTP METHOD : POST
2019-04-18 15:06:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:06:03 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@559f1c76, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@17efc290, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@76fe9be, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@559f1c76, com.bootdo.moneyLog.vo.WaterLogVo@17efc290, com.bootdo.moneyLog.vo.HeatLogVo@76fe9be]
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:06:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:06:03 -<==      Total: 1
2019-04-18 15:06:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:06:03 -Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.WaterLogSumC(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.WaterLogSumC(WaterLogServiceImpl.java:74)
	at com.bootdo.charts.controller.tableDDController.getCountD(tableDDController.java:112)
	at com.bootdo.charts.controller.tableDDController$$FastClassBySpringCGLIB$$9d4d344d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableDDController$$EnhancerBySpringCGLIB$$5ed4d5c1.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 15:06:03 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableDD/getTableDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.WaterLogDao.WaterLogSumC attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-18 15:06:03.619(Timestamp)
2019-04-18 15:06:03 -<==    Updates: 1
2019-04-18 15:06:17 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-18 15:13:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 9656 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:13:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:13:04 -The following profiles are active: dev
2019-04-18 15:13:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:13:04 CST 2019]; root of context hierarchy
2019-04-18 15:13:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:13:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:13:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:13:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:13:11 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:13:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:13:11 -Starting service [Tomcat]
2019-04-18 15:13:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:13:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:13:11 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:13:11 -Root WebApplicationContext: initialization completed in 7197 ms
2019-04-18 15:13:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:13:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:13:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:13:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:13:12 -Filter xssFilter was not registered (disabled)
2019-04-18 15:13:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:13:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:13:12 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:13:12 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:13:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:13:04 CST 2019]; root of context hierarchy
2019-04-18 15:13:15 -Using default implementation for ThreadExecutor
2019-04-18 15:13:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:13:15 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:13:15 -RAMJobStore initialized.
2019-04-18 15:13:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:13:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:13:15 -Quartz scheduler version: 2.2.1
2019-04-18 15:13:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b0e031b
2019-04-18 15:13:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:13:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:13:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:13:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:13:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:13:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:13:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:13:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:13:18 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:13:18 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:13:18 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:13:18 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:13:18 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:13:18 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:13:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:13:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:13:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:13:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:13:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:13:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:13:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:13:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:13:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:13:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:13:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:13:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:13:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:13:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:13:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:13:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:13:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:13:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:13:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:13:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:13:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:13:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:13:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:13:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:13:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:13:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:13:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:13:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:13:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:13:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:13:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:13:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:13:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:13:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:13:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:13:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:13:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:13:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:13:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:13:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:13:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:13:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:13:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:13:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:13:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:13:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:13:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:13:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:13:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:13:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:13:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:13:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:13:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:13:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:13:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:13:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:13:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:13:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:13:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:13:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:13:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:13:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:13:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:13:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:13:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:13:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:13:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:13:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:13:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:13:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:13:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:13:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:13:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:13:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:13:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:13:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:13:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:13:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:13:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:13:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:13:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:13:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:13:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:13:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 15:13:04 CST 2019]; root of context hierarchy
2019-04-18 15:13:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:13:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:13:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:13:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:13:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:13:21 -Registering beans for JMX exposure on startup
2019-04-18 15:13:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:13:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:13:21 -Starting beans in phase 2147483647
2019-04-18 15:13:21 -Context refreshed
2019-04-18 15:13:21 -Found 1 custom documentation plugin(s)
2019-04-18 15:13:21 -Scanning for api listing references
2019-04-18 15:13:22 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:13:22 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:13:22 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:13:22 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:13:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_3
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_3
2019-04-18 15:13:22 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_3
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:13:22 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_4
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_4
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_4
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:13:22 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:13:22 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_5
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_5
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_5
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:13:22 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_6
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_6
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_6
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_7
2019-04-18 15:13:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_7
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:13:22 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:13:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:13:22 -Generating unique operation named: addUsingGET_7
2019-04-18 15:13:22 -Generating unique operation named: editUsingGET_8
2019-04-18 15:13:22 -Generating unique operation named: listUsingGET_8
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:13:22 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:13:22 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:13:22 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:13:22 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:13:23 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:13:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:13:23 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_8
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_9
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_9
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:13:23 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_9
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_10
2019-04-18 15:13:23 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:13:23 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_10
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_11
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:13:23 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_10
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_11
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_12
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:13:23 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_11
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_12
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_13
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:13:23 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:13:23 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_12
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_13
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_14
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:13:23 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:13:23 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_13
2019-04-18 15:13:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_14
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_15
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_16
2019-04-18 15:13:23 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:13:23 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:13:23 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:13:23 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:13:23 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:13:23 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_14
2019-04-18 15:13:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_15
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_17
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:13:23 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:13:23 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_15
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_16
2019-04-18 15:13:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:13:23 -Generating unique operation named: listUsingGET_18
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:13:23 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:13:23 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:13:23 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:13:23 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:13:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:13:23 -Generating unique operation named: addUsingGET_16
2019-04-18 15:13:23 -Generating unique operation named: editUsingGET_17
2019-04-18 15:13:23 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:13:24 -Generating unique operation named: listUsingGET_19
2019-04-18 15:13:24 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:13:24 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:13:24 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:13:24 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:13:24 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:13:24 -Generating unique operation named: addUsingGET_17
2019-04-18 15:13:24 -Generating unique operation named: editUsingGET_18
2019-04-18 15:13:24 -Generating unique operation named: listUsingGET_20
2019-04-18 15:13:24 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:13:24 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:13:24 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:13:24 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:13:24 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:13:24 -Starting Quartz Scheduler now
2019-04-18 15:13:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:13:24 -Starting...
2019-04-18 15:13:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:13:24 -Started.
2019-04-18 15:13:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:13:24 -Using a shared selector for servlet write/read
2019-04-18 15:13:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:13:24 -Started BootdoApplication in 21.2 seconds (JVM running for 22.002)
2019-04-18 15:13:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:13:24 -==> Parameters: 
2019-04-18 15:13:24 -<==      Total: 1
2019-04-18 15:13:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:13:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:13:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 289 ms
2019-04-18 15:13:35 -Enabling session validation scheduler...
2019-04-18 15:13:35 -请求地址 : http://localhost:8081/login;JSESSIONID=6c19a399-2d6a-4b22-9f78-b294080a3903
2019-04-18 15:13:35 -HTTP METHOD : GET
2019-04-18 15:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:13:35 -参数 : [{}]
2019-04-18 15:13:35 -耗时 : 5
2019-04-18 15:13:35 -返回值 : login
2019-04-18 15:13:36 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:13:36 -HTTP METHOD : GET
2019-04-18 15:13:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:13:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@14ac7127, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1a6b8dc2]
2019-04-18 15:13:37 -1912
2019-04-18 15:13:37 -耗时 : 920
2019-04-18 15:13:37 -返回值 : null
2019-04-18 15:13:42 -请求地址 : http://localhost:8081/login
2019-04-18 15:13:42 -HTTP METHOD : POST
2019-04-18 15:13:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:13:42 -参数 : [admin, 111111, 1912, org.apache.shiro.web.servlet.ShiroHttpServletRequest@19e5758d]
2019-04-18 15:13:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:13:42 -==> Parameters: admin(String)
2019-04-18 15:13:42 -<==      Total: 1
2019-04-18 15:13:42 -耗时 : 220
2019-04-18 15:13:42 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:13:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:13:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:13:42 -==> Parameters: 1(Long), admin(String), 登录(String), 220(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:13:42.684(Timestamp)
2019-04-18 15:13:42 -请求地址 : http://localhost:8081/index
2019-04-18 15:13:42 -HTTP METHOD : GET
2019-04-18 15:13:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:13:42 -参数 : [{}]
2019-04-18 15:13:42 -<==    Updates: 1
2019-04-18 15:13:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:13:43 -==> Parameters: 1(Long)
2019-04-18 15:13:43 -<==      Total: 49
2019-04-18 15:13:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:13:43 -==> Parameters: 138(Long)
2019-04-18 15:13:43 -<==      Total: 1
2019-04-18 15:13:43 -耗时 : 454
2019-04-18 15:13:43 -返回值 : index_v1
2019-04-18 15:13:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:13:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 454(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:13:43.316(Timestamp)
2019-04-18 15:13:43 -<==    Updates: 1
2019-04-18 15:13:43 -请求地址 : http://localhost:8081/main
2019-04-18 15:13:43 -HTTP METHOD : GET
2019-04-18 15:13:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:13:43 -参数 : []
2019-04-18 15:13:43 -耗时 : 0
2019-04-18 15:13:43 -返回值 : main
2019-04-18 15:13:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:13:43 -HTTP METHOD : GET
2019-04-18 15:13:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:13:43 -参数 : []
2019-04-18 15:13:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:13:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:13:43 -<==      Total: 0
2019-04-18 15:13:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:13:43 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:13:43 -<==      Total: 1
2019-04-18 15:13:43 -耗时 : 105
2019-04-18 15:13:43 -返回值 : com.bootdo.common.utils.PageUtils@764313a3
2019-04-18 15:13:43 -请求地址 : http://localhost:8081/main
2019-04-18 15:13:43 -HTTP METHOD : GET
2019-04-18 15:13:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:13:43 -参数 : []
2019-04-18 15:13:43 -耗时 : 1
2019-04-18 15:13:43 -返回值 : main
2019-04-18 15:13:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:13:49 -==> Parameters: 1(Long)
2019-04-18 15:13:49 -<==      Total: 93
2019-04-18 15:13:49 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 15:13:49 -HTTP METHOD : GET
2019-04-18 15:13:49 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 15:13:49 -参数 : []
2019-04-18 15:13:49 -耗时 : 9
2019-04-18 15:13:49 -返回值 : charts/countDD
2019-04-18 15:13:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 15:13:50 -HTTP METHOD : GET
2019-04-18 15:13:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 15:13:50 -参数 : [userType]
2019-04-18 15:13:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 15:13:50 -==> Parameters: userType(String)
2019-04-18 15:13:50 -<==      Total: 4
2019-04-18 15:13:50 -耗时 : 89
2019-04-18 15:13:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 15:13:52 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:13:52 -HTTP METHOD : GET
2019-04-18 15:13:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:13:52 -参数 : []
2019-04-18 15:13:53 -耗时 : 10
2019-04-18 15:13:53 -返回值 : charts/tableDD
2019-04-18 15:14:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:14:03 -HTTP METHOD : GET
2019-04-18 15:14:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:14:03 -参数 : []
2019-04-18 15:14:03 -耗时 : 0
2019-04-18 15:14:03 -返回值 : system/dept/deptTree
2019-04-18 15:14:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:14:03 -HTTP METHOD : GET
2019-04-18 15:14:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:14:03 -参数 : []
2019-04-18 15:14:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:14:03 -==> Parameters: 
2019-04-18 15:14:04 -<==      Total: 3
2019-04-18 15:14:04 -耗时 : 28
2019-04-18 15:14:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:14:08 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:14:08 -HTTP METHOD : POST
2019-04-18 15:14:08 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:14:08 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@295c67d9, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2ee93cbf, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6868604c, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@295c67d9, com.bootdo.moneyLog.vo.WaterLogVo@2ee93cbf, com.bootdo.moneyLog.vo.HeatLogVo@6868604c]
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:08 -<==      Total: 1
2019-04-18 15:14:08 -耗时 : 191
2019-04-18 15:14:08 -返回值 : charts/tableDD
2019-04-18 15:14:09 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:14:09 -HTTP METHOD : POST
2019-04-18 15:14:09 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:14:09 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@13a4e603, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5ea5856e, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@318599e3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@13a4e603, com.bootdo.moneyLog.vo.WaterLogVo@5ea5856e, com.bootdo.moneyLog.vo.HeatLogVo@318599e3]
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:09 -<==      Total: 1
2019-04-18 15:14:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:10 -<==      Total: 1
2019-04-18 15:14:10 -耗时 : 133
2019-04-18 15:14:10 -返回值 : charts/tableDD
2019-04-18 15:14:11 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:14:11 -HTTP METHOD : POST
2019-04-18 15:14:11 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:14:11 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4cfbe882, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@130ff27b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2c75bd8d, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4cfbe882, com.bootdo.moneyLog.vo.WaterLogVo@130ff27b, com.bootdo.moneyLog.vo.HeatLogVo@2c75bd8d]
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:14:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:14:11 -<==      Total: 1
2019-04-18 15:14:11 -耗时 : 107
2019-04-18 15:14:11 -返回值 : charts/tableDD
2019-04-18 15:14:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-18 15:16:05 -请求地址 : http://localhost:8081/login;JSESSIONID=81a88c30-487d-4c9d-aa11-e5d70803d17d
2019-04-18 15:16:05 -HTTP METHOD : GET
2019-04-18 15:16:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:16:05 -参数 : [{}]
2019-04-18 15:16:05 -耗时 : 1
2019-04-18 15:16:05 -返回值 : login
2019-04-18 15:16:06 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:16:06 -HTTP METHOD : GET
2019-04-18 15:16:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:16:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2cfefd06, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6dd6b1d5]
2019-04-18 15:16:06 -8936
2019-04-18 15:16:06 -耗时 : 21
2019-04-18 15:16:06 -返回值 : null
2019-04-18 15:16:06 -请求地址 : http://localhost:8081/login
2019-04-18 15:16:06 -HTTP METHOD : GET
2019-04-18 15:16:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:16:06 -参数 : [{}]
2019-04-18 15:16:06 -耗时 : 1
2019-04-18 15:16:06 -返回值 : login
2019-04-18 15:16:11 -请求地址 : http://localhost:8081/login
2019-04-18 15:16:11 -HTTP METHOD : POST
2019-04-18 15:16:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:16:11 -参数 : [admin, 111111, 8936, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b280738]
2019-04-18 15:16:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:16:11 -==> Parameters: admin(String)
2019-04-18 15:16:11 -<==      Total: 1
2019-04-18 15:16:11 -耗时 : 9
2019-04-18 15:16:11 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:16:11 -请求地址 : http://localhost:8081/index
2019-04-18 15:16:11 -HTTP METHOD : GET
2019-04-18 15:16:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:16:11 -参数 : [{}]
2019-04-18 15:16:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:16:11 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:16:11.603(Timestamp)
2019-04-18 15:16:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:16:11 -==> Parameters: 1(Long)
2019-04-18 15:16:11 -<==    Updates: 1
2019-04-18 15:16:12 -<==      Total: 49
2019-04-18 15:16:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:16:12 -==> Parameters: 138(Long)
2019-04-18 15:16:12 -<==      Total: 1
2019-04-18 15:16:12 -耗时 : 362
2019-04-18 15:16:12 -返回值 : index_v1
2019-04-18 15:16:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:16:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 362(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:16:12.01(Timestamp)
2019-04-18 15:16:12 -请求地址 : http://localhost:8081/main
2019-04-18 15:16:12 -HTTP METHOD : GET
2019-04-18 15:16:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:16:12 -参数 : []
2019-04-18 15:16:12 -耗时 : 0
2019-04-18 15:16:12 -返回值 : main
2019-04-18 15:16:12 -<==    Updates: 1
2019-04-18 15:16:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:16:12 -HTTP METHOD : GET
2019-04-18 15:16:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:16:12 -参数 : []
2019-04-18 15:16:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:16:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:16:12 -请求地址 : http://localhost:8081/main
2019-04-18 15:16:12 -HTTP METHOD : GET
2019-04-18 15:16:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:16:12 -参数 : []
2019-04-18 15:16:12 -耗时 : 1
2019-04-18 15:16:12 -返回值 : main
2019-04-18 15:16:12 -<==      Total: 0
2019-04-18 15:16:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:16:12 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:16:12 -<==      Total: 1
2019-04-18 15:16:12 -耗时 : 229
2019-04-18 15:16:12 -返回值 : com.bootdo.common.utils.PageUtils@10f8fc2f
2019-04-18 15:16:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:16:32 -==> Parameters: 1(Long)
2019-04-18 15:16:32 -<==      Total: 93
2019-04-18 15:16:32 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 15:16:32 -HTTP METHOD : GET
2019-04-18 15:16:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 15:16:32 -参数 : []
2019-04-18 15:16:32 -耗时 : 0
2019-04-18 15:16:32 -返回值 : charts/countDD
2019-04-18 15:16:32 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:16:32 -HTTP METHOD : GET
2019-04-18 15:16:32 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:16:32 -参数 : []
2019-04-18 15:16:32 -耗时 : 0
2019-04-18 15:16:32 -返回值 : charts/tableDD
2019-04-18 15:16:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 15:16:33 -HTTP METHOD : GET
2019-04-18 15:16:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 15:16:33 -参数 : [userType]
2019-04-18 15:16:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 15:16:33 -==> Parameters: userType(String)
2019-04-18 15:16:33 -<==      Total: 4
2019-04-18 15:16:33 -耗时 : 94
2019-04-18 15:16:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 15:16:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:16:37 -HTTP METHOD : GET
2019-04-18 15:16:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:16:37 -参数 : []
2019-04-18 15:16:37 -耗时 : 0
2019-04-18 15:16:37 -返回值 : system/dept/deptTree
2019-04-18 15:16:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:16:37 -HTTP METHOD : GET
2019-04-18 15:16:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:16:37 -参数 : []
2019-04-18 15:16:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:16:37 -==> Parameters: 
2019-04-18 15:16:37 -<==      Total: 3
2019-04-18 15:16:37 -耗时 : 24
2019-04-18 15:16:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:16:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:16:39 -HTTP METHOD : POST
2019-04-18 15:16:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:16:39 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4dbe5b61, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@10fd4b5b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6e97b402, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4dbe5b61, com.bootdo.moneyLog.vo.WaterLogVo@10fd4b5b, com.bootdo.moneyLog.vo.HeatLogVo@6e97b402]
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:16:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:16:39 -<==      Total: 1
2019-04-18 15:16:39 -耗时 : 251
2019-04-18 15:16:39 -返回值 : charts/tableDD
2019-04-18 15:17:57 -请求地址 : http://localhost:8081/index
2019-04-18 15:17:57 -HTTP METHOD : GET
2019-04-18 15:17:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:17:57 -参数 : [{}]
2019-04-18 15:17:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:17:57 -==> Parameters: 1(Long)
2019-04-18 15:17:57 -<==      Total: 49
2019-04-18 15:17:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:17:57 -==> Parameters: 138(Long)
2019-04-18 15:17:57 -<==      Total: 1
2019-04-18 15:17:57 -耗时 : 30
2019-04-18 15:17:57 -返回值 : index_v1
2019-04-18 15:17:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:17:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:17:57.995(Timestamp)
2019-04-18 15:17:58 -<==    Updates: 1
2019-04-18 15:17:58 -请求地址 : http://localhost:8081/main
2019-04-18 15:17:58 -HTTP METHOD : GET
2019-04-18 15:17:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:17:58 -参数 : []
2019-04-18 15:17:58 -耗时 : 2
2019-04-18 15:17:58 -返回值 : main
2019-04-18 15:17:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:17:58 -HTTP METHOD : GET
2019-04-18 15:17:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:17:58 -参数 : []
2019-04-18 15:17:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:17:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:17:58 -<==      Total: 0
2019-04-18 15:17:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:17:58 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:17:58 -<==      Total: 1
2019-04-18 15:17:58 -耗时 : 5
2019-04-18 15:17:58 -返回值 : com.bootdo.common.utils.PageUtils@53411771
2019-04-18 15:17:58 -请求地址 : http://localhost:8081/main
2019-04-18 15:17:58 -HTTP METHOD : GET
2019-04-18 15:17:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:17:58 -参数 : []
2019-04-18 15:17:58 -耗时 : 1
2019-04-18 15:17:58 -返回值 : main
2019-04-18 15:18:01 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:18:01 -HTTP METHOD : GET
2019-04-18 15:18:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:18:01 -参数 : []
2019-04-18 15:18:01 -耗时 : 0
2019-04-18 15:18:01 -返回值 : charts/tableDD
2019-04-18 15:18:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:18:05 -HTTP METHOD : GET
2019-04-18 15:18:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:18:05 -参数 : []
2019-04-18 15:18:05 -耗时 : 0
2019-04-18 15:18:05 -返回值 : system/dept/deptTree
2019-04-18 15:18:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:18:05 -HTTP METHOD : GET
2019-04-18 15:18:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:18:05 -参数 : []
2019-04-18 15:18:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:18:05 -==> Parameters: 
2019-04-18 15:18:05 -<==      Total: 3
2019-04-18 15:18:05 -耗时 : 5
2019-04-18 15:18:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:18:07 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:18:07 -HTTP METHOD : POST
2019-04-18 15:18:07 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:18:07 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4723fef, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6f28364f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6130535b, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4723fef, com.bootdo.moneyLog.vo.WaterLogVo@6f28364f, com.bootdo.moneyLog.vo.HeatLogVo@6130535b]
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:07 -<==      Total: 1
2019-04-18 15:18:07 -耗时 : 92
2019-04-18 15:18:07 -返回值 : charts/tableDD
2019-04-18 15:18:08 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:18:08 -HTTP METHOD : POST
2019-04-18 15:18:08 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:18:08 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3e38cda3, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@535aa0db, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@16377112, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3e38cda3, com.bootdo.moneyLog.vo.WaterLogVo@535aa0db, com.bootdo.moneyLog.vo.HeatLogVo@16377112]
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:18:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:18:08 -<==      Total: 1
2019-04-18 15:18:08 -耗时 : 86
2019-04-18 15:18:08 -返回值 : charts/tableDD
2019-04-18 15:19:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 4756 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:19:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:19:20 -The following profiles are active: dev
2019-04-18 15:19:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:19:20 CST 2019]; root of context hierarchy
2019-04-18 15:19:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:19:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$46071d01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$38604ba8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:19:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:19:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:19:28 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:19:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:19:28 -Starting service [Tomcat]
2019-04-18 15:19:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:19:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:19:29 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:19:29 -Root WebApplicationContext: initialization completed in 8221 ms
2019-04-18 15:19:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:19:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:19:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:19:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:19:29 -Filter xssFilter was not registered (disabled)
2019-04-18 15:19:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:19:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:19:29 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:19:29 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:19:33 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:19:20 CST 2019]; root of context hierarchy
2019-04-18 15:19:33 -Using default implementation for ThreadExecutor
2019-04-18 15:19:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:19:33 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:19:33 -RAMJobStore initialized.
2019-04-18 15:19:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:19:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:19:33 -Quartz scheduler version: 2.2.1
2019-04-18 15:19:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2755617b
2019-04-18 15:19:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:19:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:19:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:19:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:19:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:19:36 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:19:36 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:19:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:19:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:19:36 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:19:36 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:19:36 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:19:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:19:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:19:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:19:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:19:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:19:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:19:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:19:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:19:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:19:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:19:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:19:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:19:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:19:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:19:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:19:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:19:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:19:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:19:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:19:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:19:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:19:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:19:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:19:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:19:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:19:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:19:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:19:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:19:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:19:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:19:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:19:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:19:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:19:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:19:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:19:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:19:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:19:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:19:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:19:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:19:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:19:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:19:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:19:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:19:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:19:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:19:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:19:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:19:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:19:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:19:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:19:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:19:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:19:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:19:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:19:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:19:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:19:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:19:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:19:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:19:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:19:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:19:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:19:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:19:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:19:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:19:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:19:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:19:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:19:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:19:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:19:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:19:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:19:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:19:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:19:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:19:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:19:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:19:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:19:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:19:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:19:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:19:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:19:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:19:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:19:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:19:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:19:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:19:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:19:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:19:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:19:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:19:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:19:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:19:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:19:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:19:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:19:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:19:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:19:20 CST 2019]; root of context hierarchy
2019-04-18 15:19:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:19:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:19:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:19:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:19:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:19:40 -Registering beans for JMX exposure on startup
2019-04-18 15:19:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:19:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:19:40 -Starting beans in phase 2147483647
2019-04-18 15:19:40 -Context refreshed
2019-04-18 15:19:40 -Found 1 custom documentation plugin(s)
2019-04-18 15:19:41 -Scanning for api listing references
2019-04-18 15:19:41 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:19:41 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:19:41 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:19:41 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:19:41 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:19:41 -Generating unique operation named: addUsingGET_1
2019-04-18 15:19:41 -Generating unique operation named: editUsingGET_1
2019-04-18 15:19:41 -Generating unique operation named: listUsingGET_1
2019-04-18 15:19:41 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:19:41 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:19:41 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:19:41 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:19:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_3
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_3
2019-04-18 15:19:42 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_3
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_4
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_4
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_4
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:19:42 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_5
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_5
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_5
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_6
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_6
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_7
2019-04-18 15:19:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_7
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:19:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_7
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_8
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_8
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:19:42 -Generating unique operation named: addUsingGET_8
2019-04-18 15:19:42 -Generating unique operation named: editUsingGET_9
2019-04-18 15:19:42 -Generating unique operation named: listUsingGET_9
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:19:42 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:19:42 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:19:42 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:19:42 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_9
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_10
2019-04-18 15:19:43 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:19:43 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_10
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_11
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:19:43 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_10
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_11
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_12
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:19:43 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_11
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_12
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_13
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:19:43 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:19:43 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_12
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_13
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_14
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:19:43 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:19:43 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:19:43 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_13
2019-04-18 15:19:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_14
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_15
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:19:43 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:19:43 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_16
2019-04-18 15:19:43 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:19:43 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:19:43 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:19:43 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:19:43 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:19:43 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:19:43 -Generating unique operation named: addUsingGET_14
2019-04-18 15:19:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:19:43 -Generating unique operation named: editUsingGET_15
2019-04-18 15:19:43 -Generating unique operation named: listUsingGET_17
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:19:44 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:19:44 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:19:44 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:19:44 -Generating unique operation named: addUsingGET_15
2019-04-18 15:19:44 -Generating unique operation named: editUsingGET_16
2019-04-18 15:19:44 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:19:44 -Generating unique operation named: listUsingGET_18
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:19:44 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:19:44 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:19:44 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:19:44 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:19:44 -Generating unique operation named: addUsingGET_16
2019-04-18 15:19:44 -Generating unique operation named: editUsingGET_17
2019-04-18 15:19:44 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:19:44 -Generating unique operation named: listUsingGET_19
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:19:44 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:19:44 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:19:44 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:19:44 -Generating unique operation named: addUsingGET_17
2019-04-18 15:19:44 -Generating unique operation named: editUsingGET_18
2019-04-18 15:19:44 -Generating unique operation named: listUsingGET_20
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:19:44 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:19:44 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:19:44 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:19:44 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:19:44 -Starting Quartz Scheduler now
2019-04-18 15:19:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:19:44 -Starting...
2019-04-18 15:19:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:19:44 -Started.
2019-04-18 15:19:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:19:44 -Using a shared selector for servlet write/read
2019-04-18 15:19:44 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:19:44 -Started BootdoApplication in 25.05 seconds (JVM running for 25.929)
2019-04-18 15:19:44 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:19:44 -==> Parameters: 
2019-04-18 15:19:45 -<==      Total: 1
2019-04-18 15:20:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:20:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:20:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-04-18 15:20:00 -Enabling session validation scheduler...
2019-04-18 15:20:00 -请求地址 : http://localhost:8081/login;JSESSIONID=6c1bb9c6-d41a-4e06-bd41-9a360228ffed
2019-04-18 15:20:00 -HTTP METHOD : GET
2019-04-18 15:20:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:20:00 -参数 : [{}]
2019-04-18 15:20:00 -耗时 : 4
2019-04-18 15:20:00 -返回值 : login
2019-04-18 15:20:01 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:20:01 -HTTP METHOD : GET
2019-04-18 15:20:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:20:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6608f399, org.apache.shiro.web.servlet.ShiroHttpServletResponse@62376b80]
2019-04-18 15:20:02 -1072
2019-04-18 15:20:02 -耗时 : 657
2019-04-18 15:20:02 -返回值 : null
2019-04-18 15:20:06 -请求地址 : http://localhost:8081/login
2019-04-18 15:20:06 -HTTP METHOD : POST
2019-04-18 15:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:20:06 -参数 : [admin, 111111, 1072, org.apache.shiro.web.servlet.ShiroHttpServletRequest@47d9db16]
2019-04-18 15:20:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:20:06 -==> Parameters: admin(String)
2019-04-18 15:20:07 -<==      Total: 1
2019-04-18 15:20:07 -耗时 : 454
2019-04-18 15:20:07 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:20:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:20:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:20:07 -==> Parameters: 1(Long), admin(String), 登录(String), 454(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:20:07.404(Timestamp)
2019-04-18 15:20:07 -请求地址 : http://localhost:8081/index
2019-04-18 15:20:07 -HTTP METHOD : GET
2019-04-18 15:20:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:20:07 -参数 : [{}]
2019-04-18 15:20:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:20:07 -==> Parameters: 1(Long)
2019-04-18 15:20:07 -<==      Total: 49
2019-04-18 15:20:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:20:07 -==> Parameters: 138(Long)
2019-04-18 15:20:07 -<==      Total: 1
2019-04-18 15:20:07 -耗时 : 301
2019-04-18 15:20:07 -返回值 : index_v1
2019-04-18 15:20:07 -<==    Updates: 1
2019-04-18 15:20:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:20:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 302(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:20:07.838(Timestamp)
2019-04-18 15:20:07 -请求地址 : http://localhost:8081/main
2019-04-18 15:20:07 -HTTP METHOD : GET
2019-04-18 15:20:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:20:07 -参数 : []
2019-04-18 15:20:07 -耗时 : 1
2019-04-18 15:20:07 -返回值 : main
2019-04-18 15:20:08 -<==    Updates: 1
2019-04-18 15:20:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:20:08 -HTTP METHOD : GET
2019-04-18 15:20:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:20:08 -参数 : []
2019-04-18 15:20:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:20:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:20:08 -<==      Total: 0
2019-04-18 15:20:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:20:08 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:20:08 -<==      Total: 1
2019-04-18 15:20:08 -耗时 : 135
2019-04-18 15:20:08 -返回值 : com.bootdo.common.utils.PageUtils@4260db38
2019-04-18 15:20:08 -请求地址 : http://localhost:8081/main
2019-04-18 15:20:08 -HTTP METHOD : GET
2019-04-18 15:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:20:08 -参数 : []
2019-04-18 15:20:08 -耗时 : 1
2019-04-18 15:20:08 -返回值 : main
2019-04-18 15:20:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:20:13 -==> Parameters: 1(Long)
2019-04-18 15:20:13 -<==      Total: 93
2019-04-18 15:20:13 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:20:13 -HTTP METHOD : GET
2019-04-18 15:20:13 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:20:13 -参数 : []
2019-04-18 15:20:13 -耗时 : 13
2019-04-18 15:20:13 -返回值 : charts/tableDD
2019-04-18 15:20:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:20:17 -HTTP METHOD : GET
2019-04-18 15:20:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:20:17 -参数 : []
2019-04-18 15:20:17 -耗时 : 2
2019-04-18 15:20:17 -返回值 : system/dept/deptTree
2019-04-18 15:20:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:20:18 -HTTP METHOD : GET
2019-04-18 15:20:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:20:18 -参数 : []
2019-04-18 15:20:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:20:18 -==> Parameters: 
2019-04-18 15:20:18 -<==      Total: 3
2019-04-18 15:20:18 -耗时 : 50
2019-04-18 15:20:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:20:19 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:20:19 -HTTP METHOD : POST
2019-04-18 15:20:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:20:19 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2eb683f1, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@b49188f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1bf2d7af, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2eb683f1, com.bootdo.moneyLog.vo.WaterLogVo@b49188f, com.bootdo.moneyLog.vo.HeatLogVo@1bf2d7af]
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:19 -<==      Total: 1
2019-04-18 15:20:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:20:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:20:20 -<==      Total: 1
2019-04-18 15:20:20 -耗时 : 305
2019-04-18 15:20:20 -返回值 : charts/tableDD
2019-04-18 15:20:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-18 15:21:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 5412 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:21:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:21:11 -The following profiles are active: dev
2019-04-18 15:21:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7adf16aa: startup date [Thu Apr 18 15:21:11 CST 2019]; root of context hierarchy
2019-04-18 15:21:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:21:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$db93632] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1264d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:21:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:21:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:21:20 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:21:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:21:20 -Starting service [Tomcat]
2019-04-18 15:21:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:21:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:21:21 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:21:21 -Root WebApplicationContext: initialization completed in 9211 ms
2019-04-18 15:21:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:21:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:21:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:21:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:21:21 -Filter xssFilter was not registered (disabled)
2019-04-18 15:21:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:21:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:21:21 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:21:21 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:22:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 1984 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:22:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:22:02 -The following profiles are active: dev
2019-04-18 15:22:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3918c187: startup date [Thu Apr 18 15:22:02 CST 2019]; root of context hierarchy
2019-04-18 15:22:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:22:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3e74828f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30cdb136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:22:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:22:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:22:11 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:22:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:22:11 -Starting service [Tomcat]
2019-04-18 15:22:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:22:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:22:11 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:22:11 -Root WebApplicationContext: initialization completed in 9358 ms
2019-04-18 15:22:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:22:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:22:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:22:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:22:12 -Filter xssFilter was not registered (disabled)
2019-04-18 15:22:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:22:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:22:12 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:22:12 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:22:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3918c187: startup date [Thu Apr 18 15:22:02 CST 2019]; root of context hierarchy
2019-04-18 15:22:26 -Using default implementation for ThreadExecutor
2019-04-18 15:22:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:22:26 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:22:26 -RAMJobStore initialized.
2019-04-18 15:22:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:22:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:22:26 -Quartz scheduler version: 2.2.1
2019-04-18 15:22:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@e4ef4c0
2019-04-18 15:22:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:22:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:22:29 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:22:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:22:29 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:22:29 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:22:29 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:22:29 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:22:29 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:22:29 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:22:29 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:22:29 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:22:29 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:22:29 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:22:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:22:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:22:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:22:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:22:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:22:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:22:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:22:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:22:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:22:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:22:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:22:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:22:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:22:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:22:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:22:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:22:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:22:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:22:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:22:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:22:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:22:29 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:22:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:22:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:22:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:22:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:22:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:22:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:22:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:22:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:22:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:22:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:22:29 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:22:29 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:29 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:22:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:22:29 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:22:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:22:29 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:22:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:22:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:22:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:22:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:22:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:22:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:22:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:22:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:22:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:22:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:22:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:22:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:22:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:22:29 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:29 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:22:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:22:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:22:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:22:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:22:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:22:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:22:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:22:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:22:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:22:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:22:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:22:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:22:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:22:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:22:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:22:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:22:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:22:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:22:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:22:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:22:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:22:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:22:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:22:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:22:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:22:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:22:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:22:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:22:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:22:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:22:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:22:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:22:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:22:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:22:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:22:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:22:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:22:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:22:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:22:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:22:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:22:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:22:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:22:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3918c187: startup date [Thu Apr 18 15:22:02 CST 2019]; root of context hierarchy
2019-04-18 15:22:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:22:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:22:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:22:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:22:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:22:34 -Registering beans for JMX exposure on startup
2019-04-18 15:22:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:22:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:22:34 -Starting beans in phase 2147483647
2019-04-18 15:22:34 -Context refreshed
2019-04-18 15:22:34 -Found 1 custom documentation plugin(s)
2019-04-18 15:22:34 -Scanning for api listing references
2019-04-18 15:22:35 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:22:35 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:22:35 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:22:35 -Generating unique operation named: addUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: editUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: listUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:22:35 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:22:35 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:22:35 -Generating unique operation named: addUsingGET_2
2019-04-18 15:22:35 -Generating unique operation named: editUsingGET_2
2019-04-18 15:22:35 -Generating unique operation named: listUsingGET_2
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:22:35 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:22:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: addUsingGET_3
2019-04-18 15:22:35 -Generating unique operation named: editUsingGET_3
2019-04-18 15:22:35 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:22:35 -Generating unique operation named: listUsingGET_3
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:22:35 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:22:35 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:22:35 -Generating unique operation named: addUsingGET_4
2019-04-18 15:22:35 -Generating unique operation named: editUsingGET_4
2019-04-18 15:22:35 -Generating unique operation named: listUsingGET_4
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:22:35 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:22:35 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:22:35 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:22:35 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:22:35 -Generating unique operation named: addUsingGET_5
2019-04-18 15:22:35 -Generating unique operation named: editUsingGET_5
2019-04-18 15:22:35 -Generating unique operation named: listUsingGET_5
2019-04-18 15:22:35 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:22:36 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_6
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_6
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_7
2019-04-18 15:22:36 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_7
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:22:36 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:22:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_7
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_8
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_8
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:22:36 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_8
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_9
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_9
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:22:36 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:22:36 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_9
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_10
2019-04-18 15:22:36 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:22:36 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_10
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_11
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:22:36 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_10
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_11
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_12
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:22:36 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:22:36 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:22:36 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:22:36 -Generating unique operation named: addUsingGET_11
2019-04-18 15:22:36 -Generating unique operation named: editUsingGET_12
2019-04-18 15:22:36 -Generating unique operation named: listUsingGET_13
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:22:36 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:22:36 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:22:37 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_12
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_13
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_14
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:22:37 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_13
2019-04-18 15:22:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_14
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_15
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_16
2019-04-18 15:22:37 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:22:37 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:22:37 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:22:37 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:22:37 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:22:37 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:22:37 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_14
2019-04-18 15:22:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_15
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_17
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:22:37 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:22:37 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_15
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_16
2019-04-18 15:22:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_18
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:22:37 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:22:37 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:22:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_16
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_17
2019-04-18 15:22:37 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_19
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:22:37 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:22:37 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:22:37 -Generating unique operation named: addUsingGET_17
2019-04-18 15:22:37 -Generating unique operation named: editUsingGET_18
2019-04-18 15:22:37 -Generating unique operation named: listUsingGET_20
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:22:37 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:22:37 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:22:37 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:22:37 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:22:37 -Starting Quartz Scheduler now
2019-04-18 15:22:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:22:37 -Starting...
2019-04-18 15:22:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:22:37 -Started.
2019-04-18 15:22:38 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:22:38 -Using a shared selector for servlet write/read
2019-04-18 15:22:38 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:22:38 -Started BootdoApplication in 37.73 seconds (JVM running for 39.325)
2019-04-18 15:22:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:22:38 -==> Parameters: 
2019-04-18 15:22:39 -<==      Total: 1
2019-04-18 15:22:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:22:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:22:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-04-18 15:22:44 -Enabling session validation scheduler...
2019-04-18 15:22:44 -请求地址 : http://localhost:8081/login;JSESSIONID=b665d2b2-c651-4b5f-a0cb-e2aaf5d6baf5
2019-04-18 15:22:44 -HTTP METHOD : GET
2019-04-18 15:22:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:22:44 -参数 : [{}]
2019-04-18 15:22:44 -耗时 : 9
2019-04-18 15:22:44 -返回值 : login
2019-04-18 15:22:46 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:22:46 -HTTP METHOD : GET
2019-04-18 15:22:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:22:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@62f1e725, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a4f4f41]
2019-04-18 15:22:46 -5537
2019-04-18 15:22:46 -耗时 : 531
2019-04-18 15:22:46 -返回值 : null
2019-04-18 15:22:50 -请求地址 : http://localhost:8081/login
2019-04-18 15:22:50 -HTTP METHOD : POST
2019-04-18 15:22:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:22:50 -参数 : [admin, 111111, 5537, org.apache.shiro.web.servlet.ShiroHttpServletRequest@61c2c842]
2019-04-18 15:22:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:22:50 -==> Parameters: admin(String)
2019-04-18 15:22:50 -<==      Total: 1
2019-04-18 15:22:50 -耗时 : 164
2019-04-18 15:22:50 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:22:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:22:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:22:51 -==> Parameters: 1(Long), admin(String), 登录(String), 164(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:22:51.048(Timestamp)
2019-04-18 15:22:51 -请求地址 : http://localhost:8081/index
2019-04-18 15:22:51 -HTTP METHOD : GET
2019-04-18 15:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:22:51 -参数 : [{}]
2019-04-18 15:22:51 -<==    Updates: 1
2019-04-18 15:22:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:22:51 -==> Parameters: 1(Long)
2019-04-18 15:22:51 -<==      Total: 49
2019-04-18 15:22:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:22:51 -==> Parameters: 138(Long)
2019-04-18 15:22:51 -<==      Total: 1
2019-04-18 15:22:51 -耗时 : 180
2019-04-18 15:22:51 -返回值 : index_v1
2019-04-18 15:22:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:22:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 181(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:22:51.358(Timestamp)
2019-04-18 15:22:51 -<==    Updates: 1
2019-04-18 15:22:51 -请求地址 : http://localhost:8081/main
2019-04-18 15:22:51 -HTTP METHOD : GET
2019-04-18 15:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:22:51 -参数 : []
2019-04-18 15:22:51 -耗时 : 1
2019-04-18 15:22:51 -返回值 : main
2019-04-18 15:22:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:22:51 -HTTP METHOD : GET
2019-04-18 15:22:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:22:51 -参数 : []
2019-04-18 15:22:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:22:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:22:51 -<==      Total: 0
2019-04-18 15:22:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:22:51 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:22:51 -<==      Total: 1
2019-04-18 15:22:51 -耗时 : 99
2019-04-18 15:22:51 -返回值 : com.bootdo.common.utils.PageUtils@25f82d85
2019-04-18 15:22:51 -请求地址 : http://localhost:8081/main
2019-04-18 15:22:51 -HTTP METHOD : GET
2019-04-18 15:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:22:51 -参数 : []
2019-04-18 15:22:51 -耗时 : 1
2019-04-18 15:22:51 -返回值 : main
2019-04-18 15:22:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:22:54 -==> Parameters: 1(Long)
2019-04-18 15:22:54 -<==      Total: 93
2019-04-18 15:22:54 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:22:54 -HTTP METHOD : GET
2019-04-18 15:22:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:22:54 -参数 : []
2019-04-18 15:22:54 -耗时 : 44
2019-04-18 15:22:54 -返回值 : charts/tableDD
2019-04-18 15:22:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:22:59 -HTTP METHOD : GET
2019-04-18 15:22:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:22:59 -参数 : []
2019-04-18 15:22:59 -耗时 : 1
2019-04-18 15:22:59 -返回值 : system/dept/deptTree
2019-04-18 15:22:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:22:59 -HTTP METHOD : GET
2019-04-18 15:22:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:22:59 -参数 : []
2019-04-18 15:22:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:22:59 -==> Parameters: 
2019-04-18 15:22:59 -<==      Total: 3
2019-04-18 15:22:59 -耗时 : 25
2019-04-18 15:22:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:23:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:23:01 -HTTP METHOD : POST
2019-04-18 15:23:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:23:01 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7f1dbea6, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@525bea0d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@35399c43, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7f1dbea6, com.bootdo.moneyLog.vo.WaterLogVo@525bea0d, com.bootdo.moneyLog.vo.HeatLogVo@35399c43]
2019-04-18 15:23:30 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-18 15:23:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:23:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:23:37 -<==      Total: 1
2019-04-18 15:23:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:23:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:23:47 -<==      Total: 1
2019-04-18 15:23:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:23:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:23:48 -<==      Total: 1
2019-04-18 15:24:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:01 -<==      Total: 1
2019-04-18 15:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:02 -<==      Total: 1
2019-04-18 15:24:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:03 -<==      Total: 1
2019-04-18 15:24:04 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:04 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:04 -<==      Total: 1
2019-04-18 15:24:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:05 -<==      Total: 1
2019-04-18 15:24:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:06 -<==      Total: 1
2019-04-18 15:24:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:06 -<==      Total: 1
2019-04-18 15:24:07 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:07 -<==      Total: 1
2019-04-18 15:24:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:08 -<==      Total: 1
2019-04-18 15:24:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:08 -<==      Total: 1
2019-04-18 15:24:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:09 -<==      Total: 1
2019-04-18 15:24:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:10 -<==      Total: 1
2019-04-18 15:24:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:11 -<==      Total: 1
2019-04-18 15:24:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:11 -<==      Total: 1
2019-04-18 15:24:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:12 -<==      Total: 1
2019-04-18 15:24:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:12 -<==      Total: 1
2019-04-18 15:24:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:24:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:13 -<==      Total: 1
2019-04-18 15:24:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:16 -<==      Total: 1
2019-04-18 15:24:18 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:18 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:18 -<==      Total: 1
2019-04-18 15:24:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:19 -<==      Total: 1
2019-04-18 15:24:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:20 -<==      Total: 1
2019-04-18 15:24:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:21 -<==      Total: 1
2019-04-18 15:24:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:22 -<==      Total: 1
2019-04-18 15:24:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:23 -<==      Total: 1
2019-04-18 15:24:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:24:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:23 -<==      Total: 1
2019-04-18 15:24:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:24 -<==      Total: 1
2019-04-18 15:24:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:24:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:25 -<==      Total: 1
2019-04-18 15:24:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:24:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:28 -<==      Total: 1
2019-04-18 15:24:30 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:24:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:24:31 -<==      Total: 1
2019-04-18 15:24:56 -耗时 : 115360
2019-04-18 15:24:56 -返回值 : charts/tableDD
2019-04-18 15:27:44 -请求地址 : http://localhost:8081/index
2019-04-18 15:27:44 -HTTP METHOD : GET
2019-04-18 15:27:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:27:44 -参数 : [{}]
2019-04-18 15:27:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:27:44 -==> Parameters: 1(Long)
2019-04-18 15:27:44 -<==      Total: 49
2019-04-18 15:27:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:27:44 -==> Parameters: 138(Long)
2019-04-18 15:27:44 -<==      Total: 1
2019-04-18 15:27:44 -耗时 : 65
2019-04-18 15:27:44 -返回值 : index_v1
2019-04-18 15:27:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:27:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 66(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:27:44.605(Timestamp)
2019-04-18 15:27:44 -<==    Updates: 1
2019-04-18 15:27:45 -请求地址 : http://localhost:8081/main
2019-04-18 15:27:45 -HTTP METHOD : GET
2019-04-18 15:27:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:27:45 -参数 : []
2019-04-18 15:27:45 -耗时 : 1
2019-04-18 15:27:45 -返回值 : main
2019-04-18 15:27:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:27:45 -HTTP METHOD : GET
2019-04-18 15:27:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:27:45 -参数 : []
2019-04-18 15:27:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:27:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:27:45 -请求地址 : http://localhost:8081/main
2019-04-18 15:27:45 -HTTP METHOD : GET
2019-04-18 15:27:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:27:45 -参数 : []
2019-04-18 15:27:45 -耗时 : 3
2019-04-18 15:27:45 -返回值 : main
2019-04-18 15:27:45 -<==      Total: 0
2019-04-18 15:27:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:27:45 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:27:45 -<==      Total: 1
2019-04-18 15:27:45 -耗时 : 173
2019-04-18 15:27:45 -返回值 : com.bootdo.common.utils.PageUtils@6b9e3cf3
2019-04-18 15:27:51 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 15:27:51 -HTTP METHOD : GET
2019-04-18 15:27:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 15:27:51 -参数 : []
2019-04-18 15:27:51 -耗时 : 15
2019-04-18 15:27:51 -返回值 : charts/countDD
2019-04-18 15:27:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 15:27:52 -HTTP METHOD : GET
2019-04-18 15:27:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 15:27:52 -参数 : [userType]
2019-04-18 15:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 15:27:52 -==> Parameters: userType(String)
2019-04-18 15:27:52 -<==      Total: 4
2019-04-18 15:27:52 -耗时 : 222
2019-04-18 15:27:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 15:27:54 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:27:54 -HTTP METHOD : GET
2019-04-18 15:27:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:27:54 -参数 : []
2019-04-18 15:27:54 -耗时 : 0
2019-04-18 15:27:54 -返回值 : charts/tableDD
2019-04-18 15:28:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:28:04 -HTTP METHOD : GET
2019-04-18 15:28:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:28:04 -参数 : []
2019-04-18 15:28:04 -耗时 : 0
2019-04-18 15:28:04 -返回值 : system/dept/deptTree
2019-04-18 15:28:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:28:04 -HTTP METHOD : GET
2019-04-18 15:28:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:28:04 -参数 : []
2019-04-18 15:28:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:28:04 -==> Parameters: 
2019-04-18 15:28:04 -<==      Total: 3
2019-04-18 15:28:04 -耗时 : 141
2019-04-18 15:28:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:28:06 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:28:06 -HTTP METHOD : POST
2019-04-18 15:28:06 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:28:06 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3dd82791, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5530943e, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@37d637, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3dd82791, com.bootdo.moneyLog.vo.WaterLogVo@5530943e, com.bootdo.moneyLog.vo.HeatLogVo@37d637]
2019-04-18 15:28:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:15 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:15 -<==      Total: 1
2019-04-18 15:28:16 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:17 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:17 -<==      Total: 1
2019-04-18 15:28:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:18 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:18 -<==      Total: 1
2019-04-18 15:28:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:19 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:19 -<==      Total: 1
2019-04-18 15:28:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:19 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:19 -<==      Total: 1
2019-04-18 15:28:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:20 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:20 -<==      Total: 1
2019-04-18 15:28:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:21 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:21 -<==      Total: 1
2019-04-18 15:28:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:22 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:22 -<==      Total: 1
2019-04-18 15:28:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:23 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:23 -<==      Total: 1
2019-04-18 15:28:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:23 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:23 -<==      Total: 1
2019-04-18 15:28:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:29 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:29 -<==      Total: 1
2019-04-18 15:28:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:29 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:29 -<==      Total: 1
2019-04-18 15:28:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:29 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:29 -<==      Total: 1
2019-04-18 15:28:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:30 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:30 -<==      Total: 1
2019-04-18 15:28:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:30 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:30 -<==      Total: 1
2019-04-18 15:28:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:30 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:30 -<==      Total: 1
2019-04-18 15:28:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:30 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:30 -<==      Total: 1
2019-04-18 15:28:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:31 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:31 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:28:34 -==> Parameters: 2019-09-19 00:00:00(String), 2019-09-19 23:59:59(String), 2(String)
2019-04-18 15:28:34 -<==      Total: 1
2019-04-18 15:28:34 -耗时 : 27948
2019-04-18 15:28:34 -返回值 : charts/tableDD
2019-04-18 15:29:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 1896 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 15:29:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 15:29:26 -The following profiles are active: dev
2019-04-18 15:29:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:29:26 CST 2019]; root of context hierarchy
2019-04-18 15:29:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 15:29:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca90b5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bce9e44b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 15:29:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 15:29:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 15:29:34 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 15:29:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 15:29:34 -Starting service [Tomcat]
2019-04-18 15:29:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 15:29:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 15:29:35 -Initializing Spring embedded WebApplicationContext
2019-04-18 15:29:35 -Root WebApplicationContext: initialization completed in 9042 ms
2019-04-18 15:29:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 15:29:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 15:29:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 15:29:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 15:29:36 -Filter xssFilter was not registered (disabled)
2019-04-18 15:29:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 15:29:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 15:29:36 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 15:29:36 -Servlet dispatcherServlet mapped to [/]
2019-04-18 15:29:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:29:26 CST 2019]; root of context hierarchy
2019-04-18 15:29:40 -Using default implementation for ThreadExecutor
2019-04-18 15:29:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 15:29:40 -Quartz Scheduler v.2.2.1 created.
2019-04-18 15:29:40 -RAMJobStore initialized.
2019-04-18 15:29:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 15:29:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 15:29:40 -Quartz scheduler version: 2.2.1
2019-04-18 15:29:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6009cd34
2019-04-18 15:29:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 15:29:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 15:29:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 15:29:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 15:29:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 15:29:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 15:29:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 15:29:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 15:29:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 15:29:44 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 15:29:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 15:29:44 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 15:29:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 15:29:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 15:29:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 15:29:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 15:29:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 15:29:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 15:29:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 15:29:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:29:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 15:29:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 15:29:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 15:29:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 15:29:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 15:29:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 15:29:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 15:29:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 15:29:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 15:29:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 15:29:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 15:29:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 15:29:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 15:29:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 15:29:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 15:29:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 15:29:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 15:29:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 15:29:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:29:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 15:29:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 15:29:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 15:29:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 15:29:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 15:29:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:29:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:29:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 15:29:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 15:29:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 15:29:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 15:29:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 15:29:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 15:29:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 15:29:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 15:29:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 15:29:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 15:29:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 15:29:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 15:29:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 15:29:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 15:29:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 15:29:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 15:29:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 15:29:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 15:29:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 15:29:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 15:29:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 15:29:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 15:29:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 15:29:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 15:29:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 15:29:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 15:29:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 15:29:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 15:29:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:29:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 15:29:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 15:29:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 15:29:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 15:29:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 15:29:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 15:29:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 15:29:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 15:29:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 15:29:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 15:29:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 15:29:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 15:29:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 15:29:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 15:29:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 15:29:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 15:29:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 15:29:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 15:29:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 15:29:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:29:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 18 15:29:26 CST 2019]; root of context hierarchy
2019-04-18 15:29:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:29:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:29:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 15:29:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 15:29:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 15:29:50 -Registering beans for JMX exposure on startup
2019-04-18 15:29:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 15:29:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 15:29:50 -Starting beans in phase 2147483647
2019-04-18 15:29:50 -Context refreshed
2019-04-18 15:29:50 -Found 1 custom documentation plugin(s)
2019-04-18 15:29:50 -Scanning for api listing references
2019-04-18 15:29:51 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 15:29:51 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 15:29:51 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_1
2019-04-18 15:29:51 -Generating unique operation named: addUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: editUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: listUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_2
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_3
2019-04-18 15:29:51 -Generating unique operation named: saveUsingPOST_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPOST_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPUT_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 15:29:51 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 15:29:51 -Generating unique operation named: addUsingGET_2
2019-04-18 15:29:51 -Generating unique operation named: editUsingGET_2
2019-04-18 15:29:51 -Generating unique operation named: listUsingGET_2
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_4
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_5
2019-04-18 15:29:51 -Generating unique operation named: saveUsingPOST_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPOST_2
2019-04-18 15:29:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: addUsingGET_3
2019-04-18 15:29:51 -Generating unique operation named: editUsingGET_3
2019-04-18 15:29:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 15:29:51 -Generating unique operation named: listUsingGET_3
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_6
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_7
2019-04-18 15:29:51 -Generating unique operation named: saveUsingPOST_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingGET_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPOST_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPUT_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 15:29:51 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 15:29:51 -Generating unique operation named: addUsingGET_4
2019-04-18 15:29:51 -Generating unique operation named: editUsingGET_4
2019-04-18 15:29:51 -Generating unique operation named: listUsingGET_4
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_8
2019-04-18 15:29:51 -Generating unique operation named: removeUsingPOST_9
2019-04-18 15:29:51 -Generating unique operation named: saveUsingPOST_4
2019-04-18 15:29:51 -Generating unique operation named: updateUsingGET_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPOST_4
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPUT_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 15:29:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 15:29:51 -Generating unique operation named: ElecUsingGET_1
2019-04-18 15:29:51 -Generating unique operation named: addUsingGET_5
2019-04-18 15:29:51 -Generating unique operation named: editUsingGET_5
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_5
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_10
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_11
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingGET_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPUT_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 15:29:52 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_6
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_6
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_6
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_7
2019-04-18 15:29:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_7
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_12
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_13
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingGET_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPUT_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 15:29:52 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 15:29:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_7
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_8
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_8
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_14
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_15
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingGET_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_8
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPUT_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 15:29:52 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_8
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_9
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_9
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_16
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_17
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_8
2019-04-18 15:29:52 -Generating unique operation named: updateUsingGET_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_9
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPUT_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 15:29:52 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_9
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_10
2019-04-18 15:29:52 -Generating unique operation named: infoUsingGET_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingPOST_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingPUT_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 15:29:52 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_10
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_18
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_19
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_9
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_10
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_11
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_20
2019-04-18 15:29:52 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_10
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_11
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_12
2019-04-18 15:29:52 -Generating unique operation named: removeUsingPOST_21
2019-04-18 15:29:52 -Generating unique operation named: saveUsingPOST_10
2019-04-18 15:29:52 -Generating unique operation named: treeUsingGET_1
2019-04-18 15:29:52 -Generating unique operation named: treeUsingGET_2
2019-04-18 15:29:52 -Generating unique operation named: updateUsingPOST_11
2019-04-18 15:29:52 -Generating unique operation named: addUsingGET_11
2019-04-18 15:29:52 -Generating unique operation named: editUsingGET_12
2019-04-18 15:29:52 -Generating unique operation named: listUsingGET_13
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_22
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_23
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingGET_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPUT_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 15:29:53 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_12
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_13
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_14
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_24
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_25
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingGET_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_13
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPUT_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 15:29:53 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_13
2019-04-18 15:29:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_14
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_15
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_13
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_14
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_14
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_16
2019-04-18 15:29:53 -Generating unique operation named: listUsingHEAD_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingPOST_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingPUT_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingPATCH_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingDELETE_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingTRACE_1
2019-04-18 15:29:53 -Generating unique operation named: countDDUsingGET_1
2019-04-18 15:29:53 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 15:29:53 -Generating unique operation named: getCountDUsingPOST_4
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 15:29:53 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 15:29:53 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 15:29:53 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_14
2019-04-18 15:29:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_15
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_17
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_26
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_15
2019-04-18 15:29:53 -Generating unique operation named: treeUsingGET_3
2019-04-18 15:29:53 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_15
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_15
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_16
2019-04-18 15:29:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_18
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_27
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_28
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_16
2019-04-18 15:29:53 -Generating unique operation named: updateUsingGET_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_16
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPUT_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 15:29:53 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 15:29:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_16
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_17
2019-04-18 15:29:53 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_19
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_29
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_30
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_17
2019-04-18 15:29:53 -Generating unique operation named: updateUsingGET_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_17
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPUT_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 15:29:53 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 15:29:53 -Generating unique operation named: addUsingGET_17
2019-04-18 15:29:53 -Generating unique operation named: editUsingGET_18
2019-04-18 15:29:53 -Generating unique operation named: listUsingGET_20
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_31
2019-04-18 15:29:53 -Generating unique operation named: removeUsingPOST_32
2019-04-18 15:29:53 -Generating unique operation named: saveUsingPOST_18
2019-04-18 15:29:53 -Generating unique operation named: updateUsingGET_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPOST_18
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPUT_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 15:29:53 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 15:29:54 -Starting Quartz Scheduler now
2019-04-18 15:29:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 15:29:54 -Starting...
2019-04-18 15:29:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 15:29:54 -Started.
2019-04-18 15:29:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 15:29:54 -Using a shared selector for servlet write/read
2019-04-18 15:29:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 15:29:54 -Started BootdoApplication in 29.367 seconds (JVM running for 30.318)
2019-04-18 15:29:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 15:29:54 -==> Parameters: 
2019-04-18 15:29:54 -<==      Total: 1
2019-04-18 15:30:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 15:30:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 15:30:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-04-18 15:30:07 -Enabling session validation scheduler...
2019-04-18 15:30:07 -请求地址 : http://localhost:8081/login;JSESSIONID=e486c00a-4660-4c09-82f5-460f60b2c14d
2019-04-18 15:30:07 -HTTP METHOD : GET
2019-04-18 15:30:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 15:30:07 -参数 : [{}]
2019-04-18 15:30:07 -耗时 : 12
2019-04-18 15:30:07 -返回值 : login
2019-04-18 15:30:09 -请求地址 : http://localhost:8081/getVerify
2019-04-18 15:30:09 -HTTP METHOD : GET
2019-04-18 15:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 15:30:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f9307a8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@20625eda]
2019-04-18 15:30:13 -3914
2019-04-18 15:30:13 -耗时 : 4408
2019-04-18 15:30:13 -返回值 : null
2019-04-18 15:30:17 -请求地址 : http://localhost:8081/login
2019-04-18 15:30:17 -HTTP METHOD : POST
2019-04-18 15:30:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 15:30:17 -参数 : [admin, 111111, 3914, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b3fd8be]
2019-04-18 15:30:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 15:30:17 -==> Parameters: admin(String)
2019-04-18 15:30:17 -<==      Total: 1
2019-04-18 15:30:17 -耗时 : 217
2019-04-18 15:30:17 -返回值 : {msg=操作成功, code=0}
2019-04-18 15:30:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 15:30:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:30:17 -==> Parameters: 1(Long), admin(String), 登录(String), 217(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 15:30:17.981(Timestamp)
2019-04-18 15:30:18 -请求地址 : http://localhost:8081/index
2019-04-18 15:30:18 -HTTP METHOD : GET
2019-04-18 15:30:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:30:18 -参数 : [{}]
2019-04-18 15:30:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:30:18 -<==    Updates: 1
2019-04-18 15:30:18 -==> Parameters: 1(Long)
2019-04-18 15:30:18 -<==      Total: 49
2019-04-18 15:30:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:30:18 -==> Parameters: 138(Long)
2019-04-18 15:30:18 -<==      Total: 1
2019-04-18 15:30:18 -耗时 : 358
2019-04-18 15:30:18 -返回值 : index_v1
2019-04-18 15:30:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:30:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 359(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:30:18.56(Timestamp)
2019-04-18 15:30:18 -<==    Updates: 1
2019-04-18 15:30:18 -请求地址 : http://localhost:8081/main
2019-04-18 15:30:18 -HTTP METHOD : GET
2019-04-18 15:30:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:30:18 -参数 : []
2019-04-18 15:30:18 -耗时 : 0
2019-04-18 15:30:18 -返回值 : main
2019-04-18 15:30:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:30:19 -HTTP METHOD : GET
2019-04-18 15:30:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:30:19 -参数 : []
2019-04-18 15:30:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:30:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:30:19 -<==      Total: 0
2019-04-18 15:30:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:30:19 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:30:19 -<==      Total: 1
2019-04-18 15:30:19 -耗时 : 92
2019-04-18 15:30:19 -返回值 : com.bootdo.common.utils.PageUtils@55f09b56
2019-04-18 15:30:19 -请求地址 : http://localhost:8081/main
2019-04-18 15:30:19 -HTTP METHOD : GET
2019-04-18 15:30:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:30:19 -参数 : []
2019-04-18 15:30:19 -耗时 : 1
2019-04-18 15:30:19 -返回值 : main
2019-04-18 15:30:46 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-18 15:31:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 15:31:35 -==> Parameters: 1(Long)
2019-04-18 15:31:35 -<==      Total: 93
2019-04-18 15:31:35 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:31:35 -HTTP METHOD : GET
2019-04-18 15:31:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:31:35 -参数 : []
2019-04-18 15:31:35 -耗时 : 10
2019-04-18 15:31:35 -返回值 : charts/tableDD
2019-04-18 15:31:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:31:40 -HTTP METHOD : GET
2019-04-18 15:31:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:31:40 -参数 : []
2019-04-18 15:31:40 -耗时 : 0
2019-04-18 15:31:40 -返回值 : system/dept/deptTree
2019-04-18 15:31:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:31:40 -HTTP METHOD : GET
2019-04-18 15:31:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:31:40 -参数 : []
2019-04-18 15:31:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:31:40 -==> Parameters: 
2019-04-18 15:31:40 -<==      Total: 3
2019-04-18 15:31:40 -耗时 : 46
2019-04-18 15:31:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:31:42 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:31:42 -HTTP METHOD : POST
2019-04-18 15:31:42 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:31:42 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7229aa21, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@36957b0c, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@67fa0e3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7229aa21, com.bootdo.moneyLog.vo.WaterLogVo@36957b0c, com.bootdo.moneyLog.vo.HeatLogVo@67fa0e3]
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:42 -<==      Total: 1
2019-04-18 15:31:42 -耗时 : 359
2019-04-18 15:31:42 -返回值 : charts/tableDD
2019-04-18 15:31:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:31:43 -HTTP METHOD : POST
2019-04-18 15:31:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:31:43 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@6628895c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@378551b0, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@63587bac, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@6628895c, com.bootdo.moneyLog.vo.WaterLogVo@378551b0, com.bootdo.moneyLog.vo.HeatLogVo@63587bac]
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:43 -<==      Total: 1
2019-04-18 15:31:43 -耗时 : 118
2019-04-18 15:31:43 -返回值 : charts/tableDD
2019-04-18 15:31:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:31:45 -HTTP METHOD : POST
2019-04-18 15:31:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:31:45 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5d5330bc, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1851b572, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@15a9f88f, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5d5330bc, com.bootdo.moneyLog.vo.WaterLogVo@1851b572, com.bootdo.moneyLog.vo.HeatLogVo@15a9f88f]
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:45 -<==      Total: 1
2019-04-18 15:31:45 -耗时 : 121
2019-04-18 15:31:45 -返回值 : charts/tableDD
2019-04-18 15:31:46 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:31:46 -HTTP METHOD : POST
2019-04-18 15:31:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:31:46 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@31af9203, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5b7fb4f3, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5dec8345, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@31af9203, com.bootdo.moneyLog.vo.WaterLogVo@5b7fb4f3, com.bootdo.moneyLog.vo.HeatLogVo@5dec8345]
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:31:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:31:46 -<==      Total: 1
2019-04-18 15:31:46 -耗时 : 137
2019-04-18 15:31:46 -返回值 : charts/tableDD
2019-04-18 15:32:30 -请求地址 : http://localhost:8081/index
2019-04-18 15:32:30 -HTTP METHOD : GET
2019-04-18 15:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 15:32:30 -参数 : [{}]
2019-04-18 15:32:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 15:32:30 -==> Parameters: 1(Long)
2019-04-18 15:32:30 -<==      Total: 49
2019-04-18 15:32:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 15:32:30 -==> Parameters: 138(Long)
2019-04-18 15:32:30 -<==      Total: 1
2019-04-18 15:32:30 -耗时 : 31
2019-04-18 15:32:30 -返回值 : index_v1
2019-04-18 15:32:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 15:32:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 15:32:30.947(Timestamp)
2019-04-18 15:32:31 -请求地址 : http://localhost:8081/main
2019-04-18 15:32:31 -HTTP METHOD : GET
2019-04-18 15:32:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:32:31 -参数 : []
2019-04-18 15:32:31 -耗时 : 10
2019-04-18 15:32:31 -返回值 : main
2019-04-18 15:32:31 -<==    Updates: 1
2019-04-18 15:32:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 15:32:31 -HTTP METHOD : GET
2019-04-18 15:32:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 15:32:31 -参数 : []
2019-04-18 15:32:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 15:32:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 15:32:31 -<==      Total: 0
2019-04-18 15:32:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 15:32:31 -==> Parameters: 1(Long), 0(String)
2019-04-18 15:32:31 -<==      Total: 1
2019-04-18 15:32:31 -耗时 : 5
2019-04-18 15:32:31 -返回值 : com.bootdo.common.utils.PageUtils@a957d5
2019-04-18 15:32:31 -请求地址 : http://localhost:8081/main
2019-04-18 15:32:31 -HTTP METHOD : GET
2019-04-18 15:32:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 15:32:31 -参数 : []
2019-04-18 15:32:31 -耗时 : 0
2019-04-18 15:32:31 -返回值 : main
2019-04-18 15:32:34 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 15:32:34 -HTTP METHOD : GET
2019-04-18 15:32:34 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 15:32:34 -参数 : []
2019-04-18 15:32:34 -耗时 : 1
2019-04-18 15:32:34 -返回值 : charts/tableDD
2019-04-18 15:32:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 15:32:39 -HTTP METHOD : GET
2019-04-18 15:32:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 15:32:39 -参数 : []
2019-04-18 15:32:39 -耗时 : 1
2019-04-18 15:32:39 -返回值 : system/dept/deptTree
2019-04-18 15:32:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 15:32:39 -HTTP METHOD : GET
2019-04-18 15:32:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 15:32:39 -参数 : []
2019-04-18 15:32:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 15:32:39 -==> Parameters: 
2019-04-18 15:32:39 -<==      Total: 3
2019-04-18 15:32:39 -耗时 : 4
2019-04-18 15:32:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 15:32:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:32:41 -HTTP METHOD : POST
2019-04-18 15:32:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:32:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3284df25, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@57d77dfa, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@918e0b1, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3284df25, com.bootdo.moneyLog.vo.WaterLogVo@57d77dfa, com.bootdo.moneyLog.vo.HeatLogVo@918e0b1]
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:41 -<==      Total: 1
2019-04-18 15:32:41 -耗时 : 90
2019-04-18 15:32:41 -返回值 : charts/tableDD
2019-04-18 15:32:42 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 15:32:42 -HTTP METHOD : POST
2019-04-18 15:32:42 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getCountD
2019-04-18 15:32:42 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5aacb21b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@66f51ea6, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@600003e3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5aacb21b, com.bootdo.moneyLog.vo.WaterLogVo@66f51ea6, com.bootdo.moneyLog.vo.HeatLogVo@600003e3]
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 15:32:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 15:32:42 -<==      Total: 1
2019-04-18 15:32:42 -耗时 : 81
2019-04-18 15:32:42 -返回值 : charts/tableDD
2019-04-18 16:00:46 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-04-18 16:25:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 4796 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 16:25:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 16:25:04 -The following profiles are active: dev
2019-04-18 16:25:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Thu Apr 18 16:25:04 CST 2019]; root of context hierarchy
2019-04-18 16:25:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 16:25:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9e16082e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$906f36d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 16:25:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 16:25:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 16:25:25 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 16:25:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 16:25:25 -Starting service [Tomcat]
2019-04-18 16:25:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 16:25:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 16:25:26 -Initializing Spring embedded WebApplicationContext
2019-04-18 16:25:26 -Root WebApplicationContext: initialization completed in 21854 ms
2019-04-18 16:25:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 16:25:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 16:25:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 16:25:28 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 16:25:28 -Filter xssFilter was not registered (disabled)
2019-04-18 16:25:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 16:25:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 16:25:28 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 16:25:28 -Servlet dispatcherServlet mapped to [/]
2019-04-18 16:25:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Thu Apr 18 16:25:04 CST 2019]; root of context hierarchy
2019-04-18 16:25:38 -Using default implementation for ThreadExecutor
2019-04-18 16:25:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 16:25:38 -Quartz Scheduler v.2.2.1 created.
2019-04-18 16:25:38 -RAMJobStore initialized.
2019-04-18 16:25:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 16:25:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 16:25:38 -Quartz scheduler version: 2.2.1
2019-04-18 16:25:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@19f1be04
2019-04-18 16:25:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 16:25:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 16:25:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 16:25:43 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:43 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 16:25:43 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:43 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 16:25:43 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 16:25:43 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 16:25:43 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 16:25:43 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:43 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 16:25:43 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 16:25:43 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 16:25:43 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 16:25:43 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:43 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 16:25:43 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 16:25:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 16:25:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 16:25:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 16:25:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 16:25:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 16:25:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 16:25:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 16:25:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 16:25:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 16:25:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 16:25:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 16:25:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 16:25:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 16:25:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 16:25:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 16:25:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 16:25:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 16:25:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 16:25:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 16:25:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 16:25:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 16:25:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 16:25:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 16:25:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 16:25:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 16:25:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 16:25:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 16:25:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 16:25:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 16:25:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 16:25:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 16:25:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 16:25:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 16:25:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 16:25:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 16:25:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 16:25:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 16:25:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 16:25:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 16:25:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 16:25:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 16:25:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 16:25:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 16:25:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 16:25:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 16:25:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 16:25:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 16:25:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 16:25:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 16:25:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 16:25:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 16:25:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 16:25:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 16:25:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 16:25:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 16:25:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 16:25:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 16:25:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 16:25:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 16:25:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 16:25:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 16:25:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 16:25:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 16:25:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 16:25:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 16:25:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 16:25:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 16:25:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 16:25:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 16:25:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 16:25:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 16:25:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 16:25:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 16:25:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 16:25:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 16:25:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 16:25:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 16:25:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 16:25:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 16:25:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 16:25:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 16:25:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 16:25:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Thu Apr 18 16:25:04 CST 2019]; root of context hierarchy
2019-04-18 16:25:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 16:25:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 16:25:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 16:25:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 16:25:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 16:25:50 -Registering beans for JMX exposure on startup
2019-04-18 16:25:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 16:25:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 16:25:50 -Starting beans in phase 2147483647
2019-04-18 16:25:50 -Context refreshed
2019-04-18 16:25:50 -Found 1 custom documentation plugin(s)
2019-04-18 16:25:50 -Scanning for api listing references
2019-04-18 16:25:51 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 16:25:51 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 16:25:51 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 16:25:51 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 16:25:51 -Generating unique operation named: removeUsingPOST_1
2019-04-18 16:25:51 -Generating unique operation named: addUsingGET_1
2019-04-18 16:25:51 -Generating unique operation named: editUsingGET_1
2019-04-18 16:25:51 -Generating unique operation named: listUsingGET_1
2019-04-18 16:25:51 -Generating unique operation named: removeUsingPOST_2
2019-04-18 16:25:51 -Generating unique operation named: removeUsingPOST_3
2019-04-18 16:25:52 -Generating unique operation named: saveUsingPOST_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingGET_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPUT_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 16:25:52 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 16:25:52 -Generating unique operation named: addUsingGET_2
2019-04-18 16:25:52 -Generating unique operation named: editUsingGET_2
2019-04-18 16:25:52 -Generating unique operation named: listUsingGET_2
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_4
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_5
2019-04-18 16:25:52 -Generating unique operation named: saveUsingPOST_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_2
2019-04-18 16:25:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 16:25:52 -Generating unique operation named: addUsingGET_3
2019-04-18 16:25:52 -Generating unique operation named: editUsingGET_3
2019-04-18 16:25:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 16:25:52 -Generating unique operation named: listUsingGET_3
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_6
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_7
2019-04-18 16:25:52 -Generating unique operation named: saveUsingPOST_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingGET_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPUT_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 16:25:52 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 16:25:52 -Generating unique operation named: addUsingGET_4
2019-04-18 16:25:52 -Generating unique operation named: editUsingGET_4
2019-04-18 16:25:52 -Generating unique operation named: listUsingGET_4
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_8
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_9
2019-04-18 16:25:52 -Generating unique operation named: saveUsingPOST_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingGET_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPUT_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 16:25:52 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 16:25:52 -Generating unique operation named: ElecUsingGET_1
2019-04-18 16:25:52 -Generating unique operation named: addUsingGET_5
2019-04-18 16:25:52 -Generating unique operation named: editUsingGET_5
2019-04-18 16:25:52 -Generating unique operation named: listUsingGET_5
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_10
2019-04-18 16:25:52 -Generating unique operation named: removeUsingPOST_11
2019-04-18 16:25:52 -Generating unique operation named: saveUsingPOST_5
2019-04-18 16:25:52 -Generating unique operation named: updateUsingGET_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_5
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPUT_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 16:25:52 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 16:25:52 -Generating unique operation named: editUsingGET_6
2019-04-18 16:25:52 -Generating unique operation named: listUsingGET_6
2019-04-18 16:25:52 -Generating unique operation named: updateUsingPOST_6
2019-04-18 16:25:53 -Generating unique operation named: addUsingGET_6
2019-04-18 16:25:53 -Generating unique operation named: editUsingGET_7
2019-04-18 16:25:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_7
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_12
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_13
2019-04-18 16:25:53 -Generating unique operation named: saveUsingPOST_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingGET_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPOST_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPUT_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 16:25:53 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 16:25:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 16:25:53 -Generating unique operation named: addUsingGET_7
2019-04-18 16:25:53 -Generating unique operation named: editUsingGET_8
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_8
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_14
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_15
2019-04-18 16:25:53 -Generating unique operation named: saveUsingPOST_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingGET_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPOST_8
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPUT_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 16:25:53 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 16:25:53 -Generating unique operation named: addUsingGET_8
2019-04-18 16:25:53 -Generating unique operation named: editUsingGET_9
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_9
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_16
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_17
2019-04-18 16:25:53 -Generating unique operation named: saveUsingPOST_8
2019-04-18 16:25:53 -Generating unique operation named: updateUsingGET_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPOST_9
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPUT_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 16:25:53 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 16:25:53 -Generating unique operation named: addUsingGET_9
2019-04-18 16:25:53 -Generating unique operation named: editUsingGET_10
2019-04-18 16:25:53 -Generating unique operation named: infoUsingGET_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingPOST_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingPUT_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 16:25:53 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_10
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_18
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_19
2019-04-18 16:25:53 -Generating unique operation named: saveUsingPOST_9
2019-04-18 16:25:53 -Generating unique operation named: updateUsingPOST_10
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_11
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_20
2019-04-18 16:25:53 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 16:25:53 -Generating unique operation named: addUsingGET_10
2019-04-18 16:25:53 -Generating unique operation named: editUsingGET_11
2019-04-18 16:25:53 -Generating unique operation named: listUsingGET_12
2019-04-18 16:25:53 -Generating unique operation named: removeUsingPOST_21
2019-04-18 16:25:53 -Generating unique operation named: saveUsingPOST_10
2019-04-18 16:25:53 -Generating unique operation named: treeUsingGET_1
2019-04-18 16:25:53 -Generating unique operation named: treeUsingGET_2
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPOST_11
2019-04-18 16:25:54 -Generating unique operation named: addUsingGET_11
2019-04-18 16:25:54 -Generating unique operation named: editUsingGET_12
2019-04-18 16:25:54 -Generating unique operation named: listUsingGET_13
2019-04-18 16:25:54 -Generating unique operation named: removeUsingPOST_22
2019-04-18 16:25:54 -Generating unique operation named: removeUsingPOST_23
2019-04-18 16:25:54 -Generating unique operation named: saveUsingPOST_11
2019-04-18 16:25:54 -Generating unique operation named: updateUsingGET_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPOST_12
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPUT_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 16:25:54 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 16:25:54 -Generating unique operation named: addUsingGET_12
2019-04-18 16:25:54 -Generating unique operation named: editUsingGET_13
2019-04-18 16:25:54 -Generating unique operation named: listUsingGET_14
2019-04-18 16:25:54 -Generating unique operation named: removeUsingPOST_24
2019-04-18 16:25:54 -Generating unique operation named: removeUsingPOST_25
2019-04-18 16:25:54 -Generating unique operation named: saveUsingPOST_12
2019-04-18 16:25:54 -Generating unique operation named: updateUsingGET_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPOST_13
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPUT_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 16:25:54 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 16:25:54 -Generating unique operation named: addUsingGET_13
2019-04-18 16:25:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 16:25:54 -Generating unique operation named: editUsingGET_14
2019-04-18 16:25:54 -Generating unique operation named: listUsingGET_15
2019-04-18 16:25:54 -Generating unique operation named: saveUsingPOST_13
2019-04-18 16:25:54 -Generating unique operation named: saveUsingPOST_14
2019-04-18 16:25:54 -Generating unique operation named: updateUsingPOST_14
2019-04-18 16:25:54 -Generating unique operation named: listUsingGET_16
2019-04-18 16:25:54 -Generating unique operation named: listUsingHEAD_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingPOST_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingPUT_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingPATCH_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingDELETE_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 16:25:54 -Generating unique operation named: listUsingTRACE_1
2019-04-18 16:25:54 -Generating unique operation named: countDDUsingGET_1
2019-04-18 16:25:54 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 16:25:54 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 16:25:54 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 16:25:54 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 16:25:54 -Generating unique operation named: addUsingGET_14
2019-04-18 16:25:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 16:25:54 -Generating unique operation named: editUsingGET_15
2019-04-18 16:25:54 -Generating unique operation named: listUsingGET_17
2019-04-18 16:25:54 -Generating unique operation named: removeUsingPOST_26
2019-04-18 16:25:55 -Generating unique operation named: saveUsingPOST_15
2019-04-18 16:25:55 -Generating unique operation named: treeUsingGET_3
2019-04-18 16:25:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPOST_15
2019-04-18 16:25:55 -Generating unique operation named: addUsingGET_15
2019-04-18 16:25:55 -Generating unique operation named: editUsingGET_16
2019-04-18 16:25:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 16:25:55 -Generating unique operation named: listUsingGET_18
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_27
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_28
2019-04-18 16:25:55 -Generating unique operation named: saveUsingPOST_16
2019-04-18 16:25:55 -Generating unique operation named: updateUsingGET_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPOST_16
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPUT_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 16:25:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 16:25:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 16:25:55 -Generating unique operation named: addUsingGET_16
2019-04-18 16:25:55 -Generating unique operation named: editUsingGET_17
2019-04-18 16:25:55 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 16:25:55 -Generating unique operation named: listUsingGET_19
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_29
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_30
2019-04-18 16:25:55 -Generating unique operation named: saveUsingPOST_17
2019-04-18 16:25:55 -Generating unique operation named: updateUsingGET_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPOST_17
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPUT_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 16:25:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 16:25:55 -Generating unique operation named: addUsingGET_17
2019-04-18 16:25:55 -Generating unique operation named: editUsingGET_18
2019-04-18 16:25:55 -Generating unique operation named: listUsingGET_20
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_31
2019-04-18 16:25:55 -Generating unique operation named: removeUsingPOST_32
2019-04-18 16:25:55 -Generating unique operation named: saveUsingPOST_18
2019-04-18 16:25:55 -Generating unique operation named: updateUsingGET_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPOST_18
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPUT_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 16:25:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 16:25:55 -Starting Quartz Scheduler now
2019-04-18 16:25:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 16:25:55 -Starting...
2019-04-18 16:25:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 16:25:55 -Started.
2019-04-18 16:25:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 16:25:55 -Using a shared selector for servlet write/read
2019-04-18 16:25:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 16:25:55 -Started BootdoApplication in 54.495 seconds (JVM running for 57.413)
2019-04-18 16:25:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 16:25:56 -==> Parameters: 
2019-04-18 16:25:56 -<==      Total: 1
2019-04-18 16:26:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 16:26:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 16:26:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-18 16:26:19 -Enabling session validation scheduler...
2019-04-18 16:26:20 -请求地址 : http://localhost:8081/login;JSESSIONID=3d9ff630-fbcd-4b84-a491-d608f8650376
2019-04-18 16:26:20 -HTTP METHOD : GET
2019-04-18 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 16:26:20 -参数 : [{}]
2019-04-18 16:26:20 -耗时 : 3
2019-04-18 16:26:20 -返回值 : login
2019-04-18 16:26:21 -请求地址 : http://localhost:8081/getVerify
2019-04-18 16:26:21 -HTTP METHOD : GET
2019-04-18 16:26:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 16:26:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@762a8ee7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c15a7a8]
2019-04-18 16:26:25 -7721
2019-04-18 16:26:25 -耗时 : 3614
2019-04-18 16:26:25 -返回值 : null
2019-04-18 16:26:25 -请求地址 : http://localhost:8081/login
2019-04-18 16:26:25 -HTTP METHOD : GET
2019-04-18 16:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 16:26:25 -参数 : [{}]
2019-04-18 16:26:25 -耗时 : 1
2019-04-18 16:26:25 -返回值 : login
2019-04-18 16:26:29 -请求地址 : http://localhost:8081/login
2019-04-18 16:26:29 -HTTP METHOD : POST
2019-04-18 16:26:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 16:26:29 -参数 : [admin, 111111, 7721, org.apache.shiro.web.servlet.ShiroHttpServletRequest@42831d55]
2019-04-18 16:26:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 16:26:30 -==> Parameters: admin(String)
2019-04-18 16:26:30 -<==      Total: 1
2019-04-18 16:26:30 -耗时 : 211
2019-04-18 16:26:30 -返回值 : {msg=操作成功, code=0}
2019-04-18 16:26:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 16:26:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:26:30 -==> Parameters: 1(Long), admin(String), 登录(String), 212(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 16:26:30.276(Timestamp)
2019-04-18 16:26:30 -请求地址 : http://localhost:8081/index
2019-04-18 16:26:30 -HTTP METHOD : GET
2019-04-18 16:26:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 16:26:30 -参数 : [{}]
2019-04-18 16:26:30 -<==    Updates: 1
2019-04-18 16:26:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 16:26:30 -==> Parameters: 1(Long)
2019-04-18 16:26:30 -<==      Total: 49
2019-04-18 16:26:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 16:26:30 -==> Parameters: 138(Long)
2019-04-18 16:26:30 -<==      Total: 1
2019-04-18 16:26:30 -耗时 : 462
2019-04-18 16:26:30 -返回值 : index_v1
2019-04-18 16:26:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:26:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 462(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 16:26:30.99(Timestamp)
2019-04-18 16:26:31 -<==    Updates: 1
2019-04-18 16:26:31 -请求地址 : http://localhost:8081/main
2019-04-18 16:26:31 -HTTP METHOD : GET
2019-04-18 16:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:26:31 -参数 : []
2019-04-18 16:26:31 -耗时 : 0
2019-04-18 16:26:31 -返回值 : main
2019-04-18 16:26:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 16:26:31 -HTTP METHOD : GET
2019-04-18 16:26:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 16:26:31 -参数 : []
2019-04-18 16:26:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 16:26:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 16:26:31 -<==      Total: 0
2019-04-18 16:26:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 16:26:31 -==> Parameters: 1(Long), 0(String)
2019-04-18 16:26:31 -<==      Total: 1
2019-04-18 16:26:31 -耗时 : 68
2019-04-18 16:26:31 -返回值 : com.bootdo.common.utils.PageUtils@ea6bac3
2019-04-18 16:26:31 -请求地址 : http://localhost:8081/main
2019-04-18 16:26:31 -HTTP METHOD : GET
2019-04-18 16:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:26:31 -参数 : []
2019-04-18 16:26:31 -耗时 : 0
2019-04-18 16:26:31 -返回值 : main
2019-04-18 16:26:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 16:26:38 -==> Parameters: 1(Long)
2019-04-18 16:26:38 -<==      Total: 93
2019-04-18 16:26:38 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 16:26:38 -HTTP METHOD : GET
2019-04-18 16:26:38 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 16:26:38 -参数 : []
2019-04-18 16:26:38 -耗时 : 18
2019-04-18 16:26:38 -返回值 : charts/tableDD
2019-04-18 16:26:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-18 16:26:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 16:26:46 -HTTP METHOD : GET
2019-04-18 16:26:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 16:26:46 -参数 : []
2019-04-18 16:26:46 -耗时 : 1
2019-04-18 16:26:46 -返回值 : system/dept/deptTree
2019-04-18 16:26:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 16:26:46 -HTTP METHOD : GET
2019-04-18 16:26:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 16:26:46 -参数 : []
2019-04-18 16:26:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 16:26:46 -==> Parameters: 
2019-04-18 16:26:46 -<==      Total: 3
2019-04-18 16:26:46 -耗时 : 35
2019-04-18 16:26:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 16:26:50 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:26:50 -HTTP METHOD : POST
2019-04-18 16:26:50 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:26:50 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@8fc8262, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2a96b65d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@d45b1c7, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@8fc8262, com.bootdo.moneyLog.vo.WaterLogVo@2a96b65d, com.bootdo.moneyLog.vo.HeatLogVo@d45b1c7]
2019-04-18 16:26:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:26:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:26:59 -<==      Total: 1
2019-04-18 16:27:09 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:09 -<==      Total: 1
2019-04-18 16:27:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:20 -<==      Total: 1
2019-04-18 16:27:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:21 -<==      Total: 1
2019-04-18 16:27:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:22 -<==      Total: 1
2019-04-18 16:27:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:22 -<==      Total: 1
2019-04-18 16:27:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:23 -<==      Total: 1
2019-04-18 16:27:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:24 -<==      Total: 1
2019-04-18 16:27:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:24 -<==      Total: 1
2019-04-18 16:27:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:24 -<==      Total: 1
2019-04-18 16:27:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:25 -<==      Total: 1
2019-04-18 16:27:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:28 -<==      Total: 1
2019-04-18 16:27:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:28 -<==      Total: 1
2019-04-18 16:27:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:29 -<==      Total: 1
2019-04-18 16:27:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:29 -<==      Total: 1
2019-04-18 16:27:51 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:51 -<==      Total: 1
2019-04-18 16:27:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:51 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:51 -<==      Total: 1
2019-04-18 16:27:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:52 -<==      Total: 1
2019-04-18 16:27:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:52 -<==      Total: 1
2019-04-18 16:27:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:27:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:52 -<==      Total: 1
2019-04-18 16:27:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:27:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:53 -<==      Total: 1
2019-04-18 16:27:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:27:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:27:53 -<==      Total: 1
2019-04-18 16:28:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:07 -<==      Total: 1
2019-04-18 16:28:07 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:07 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:07 -<==      Total: 1
2019-04-18 16:28:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:08 -<==      Total: 1
2019-04-18 16:28:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:08 -<==      Total: 1
2019-04-18 16:28:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:08 -<==      Total: 1
2019-04-18 16:28:09 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:09 -<==      Total: 1
2019-04-18 16:28:09 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:09 -<==      Total: 1
2019-04-18 16:28:09 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:09 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:09 -<==      Total: 1
2019-04-18 16:28:10 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:10 -<==      Total: 1
2019-04-18 16:28:10 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:10 -<==      Total: 1
2019-04-18 16:28:39 -耗时 : 109576
2019-04-18 16:28:39 -返回值 : charts/tableDD
2019-04-18 16:28:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:28:45 -HTTP METHOD : POST
2019-04-18 16:28:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:28:45 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3ad726b6, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@869c52b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@595a90d7, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3ad726b6, com.bootdo.moneyLog.vo.WaterLogVo@869c52b, com.bootdo.moneyLog.vo.HeatLogVo@595a90d7]
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:45 -<==      Total: 1
2019-04-18 16:28:45 -耗时 : 131
2019-04-18 16:28:45 -返回值 : charts/tableDD
2019-04-18 16:28:46 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:28:46 -HTTP METHOD : POST
2019-04-18 16:28:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:28:46 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@55c0168b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5e25fe71, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4d5bcf3f, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@55c0168b, com.bootdo.moneyLog.vo.WaterLogVo@5e25fe71, com.bootdo.moneyLog.vo.HeatLogVo@4d5bcf3f]
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:28:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:28:46 -<==      Total: 1
2019-04-18 16:28:46 -耗时 : 111
2019-04-18 16:28:46 -返回值 : charts/tableDD
2019-04-18 16:34:23 -请求地址 : http://localhost:8081/index
2019-04-18 16:34:23 -HTTP METHOD : GET
2019-04-18 16:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 16:34:23 -参数 : [{}]
2019-04-18 16:34:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 16:34:23 -==> Parameters: 1(Long)
2019-04-18 16:34:23 -<==      Total: 49
2019-04-18 16:34:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 16:34:23 -==> Parameters: 138(Long)
2019-04-18 16:34:23 -<==      Total: 1
2019-04-18 16:34:23 -耗时 : 32
2019-04-18 16:34:23 -返回值 : index_v1
2019-04-18 16:34:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:34:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 16:34:23.475(Timestamp)
2019-04-18 16:34:23 -请求地址 : http://localhost:8081/main
2019-04-18 16:34:23 -HTTP METHOD : GET
2019-04-18 16:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:34:23 -参数 : []
2019-04-18 16:34:23 -耗时 : 1
2019-04-18 16:34:23 -返回值 : main
2019-04-18 16:34:23 -<==    Updates: 1
2019-04-18 16:34:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 16:34:23 -HTTP METHOD : GET
2019-04-18 16:34:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 16:34:23 -参数 : []
2019-04-18 16:34:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 16:34:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 16:34:23 -<==      Total: 0
2019-04-18 16:34:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 16:34:23 -==> Parameters: 1(Long), 0(String)
2019-04-18 16:34:23 -<==      Total: 1
2019-04-18 16:34:23 -耗时 : 7
2019-04-18 16:34:23 -返回值 : com.bootdo.common.utils.PageUtils@5a55cb82
2019-04-18 16:34:24 -请求地址 : http://localhost:8081/main
2019-04-18 16:34:24 -HTTP METHOD : GET
2019-04-18 16:34:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:34:24 -参数 : []
2019-04-18 16:34:24 -耗时 : 0
2019-04-18 16:34:24 -返回值 : main
2019-04-18 16:34:26 -请求地址 : http://localhost:8081/index
2019-04-18 16:34:26 -HTTP METHOD : GET
2019-04-18 16:34:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 16:34:26 -参数 : [{}]
2019-04-18 16:34:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 16:34:26 -==> Parameters: 1(Long)
2019-04-18 16:34:26 -<==      Total: 49
2019-04-18 16:34:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 16:34:26 -==> Parameters: 138(Long)
2019-04-18 16:34:26 -<==      Total: 1
2019-04-18 16:34:26 -耗时 : 29
2019-04-18 16:34:26 -返回值 : index_v1
2019-04-18 16:34:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:34:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 16:34:26.336(Timestamp)
2019-04-18 16:34:26 -请求地址 : http://localhost:8081/main
2019-04-18 16:34:26 -HTTP METHOD : GET
2019-04-18 16:34:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:34:26 -参数 : []
2019-04-18 16:34:26 -耗时 : 0
2019-04-18 16:34:26 -返回值 : main
2019-04-18 16:34:26 -<==    Updates: 1
2019-04-18 16:34:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 16:34:26 -HTTP METHOD : GET
2019-04-18 16:34:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 16:34:26 -参数 : []
2019-04-18 16:34:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 16:34:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 16:34:26 -<==      Total: 0
2019-04-18 16:34:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 16:34:26 -==> Parameters: 1(Long), 0(String)
2019-04-18 16:34:26 -<==      Total: 1
2019-04-18 16:34:26 -耗时 : 8
2019-04-18 16:34:26 -返回值 : com.bootdo.common.utils.PageUtils@5dc797e3
2019-04-18 16:34:26 -请求地址 : http://localhost:8081/main
2019-04-18 16:34:26 -HTTP METHOD : GET
2019-04-18 16:34:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:34:26 -参数 : []
2019-04-18 16:34:26 -耗时 : 0
2019-04-18 16:34:26 -返回值 : main
2019-04-18 16:34:43 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 16:34:43 -HTTP METHOD : GET
2019-04-18 16:34:43 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 16:34:43 -参数 : []
2019-04-18 16:34:43 -耗时 : 16
2019-04-18 16:34:43 -返回值 : charts/countDD
2019-04-18 16:34:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 16:34:43 -HTTP METHOD : GET
2019-04-18 16:34:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 16:34:43 -参数 : [userType]
2019-04-18 16:34:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 16:34:43 -==> Parameters: userType(String)
2019-04-18 16:34:43 -<==      Total: 4
2019-04-18 16:34:43 -耗时 : 88
2019-04-18 16:34:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 16:34:45 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 16:34:45 -HTTP METHOD : GET
2019-04-18 16:34:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 16:34:45 -参数 : []
2019-04-18 16:34:45 -耗时 : 1
2019-04-18 16:34:45 -返回值 : charts/tableDD
2019-04-18 16:35:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 16:35:02 -HTTP METHOD : GET
2019-04-18 16:35:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 16:35:02 -参数 : []
2019-04-18 16:35:02 -耗时 : 0
2019-04-18 16:35:02 -返回值 : system/dept/deptTree
2019-04-18 16:35:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 16:35:02 -HTTP METHOD : GET
2019-04-18 16:35:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 16:35:02 -参数 : []
2019-04-18 16:35:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 16:35:02 -==> Parameters: 
2019-04-18 16:35:02 -<==      Total: 3
2019-04-18 16:35:02 -耗时 : 13
2019-04-18 16:35:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 16:35:03 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:35:03 -HTTP METHOD : POST
2019-04-18 16:35:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:35:03 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@275c5b5f, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4d934ef2, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6d682b59, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@275c5b5f, com.bootdo.moneyLog.vo.WaterLogVo@4d934ef2, com.bootdo.moneyLog.vo.HeatLogVo@6d682b59]
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:03 -<==      Total: 1
2019-04-18 16:35:03 -耗时 : 108
2019-04-18 16:35:03 -返回值 : charts/tableDD
2019-04-18 16:35:33 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:35:33 -HTTP METHOD : POST
2019-04-18 16:35:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:35:33 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@9402a15, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2247355d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4d77d2d3, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@9402a15, com.bootdo.moneyLog.vo.WaterLogVo@2247355d, com.bootdo.moneyLog.vo.HeatLogVo@4d77d2d3]
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:33 -<==      Total: 1
2019-04-18 16:35:33 -耗时 : 111
2019-04-18 16:35:33 -返回值 : charts/tableDD
2019-04-18 16:35:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:35:45 -HTTP METHOD : POST
2019-04-18 16:35:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:35:45 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4f48a974, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1781a0d0, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@f5fd234, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4f48a974, com.bootdo.moneyLog.vo.WaterLogVo@1781a0d0, com.bootdo.moneyLog.vo.HeatLogVo@f5fd234]
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:35:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:35:45 -<==      Total: 1
2019-04-18 16:35:45 -耗时 : 129
2019-04-18 16:35:45 -返回值 : charts/tableDD
2019-04-18 16:36:53 -请求地址 : http://localhost:8081/index
2019-04-18 16:36:53 -HTTP METHOD : GET
2019-04-18 16:36:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 16:36:53 -参数 : [{}]
2019-04-18 16:36:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 16:36:53 -==> Parameters: 1(Long)
2019-04-18 16:36:53 -<==      Total: 49
2019-04-18 16:36:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 16:36:53 -==> Parameters: 138(Long)
2019-04-18 16:36:53 -<==      Total: 1
2019-04-18 16:36:53 -耗时 : 41
2019-04-18 16:36:53 -返回值 : index_v1
2019-04-18 16:36:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:36:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 16:36:53.981(Timestamp)
2019-04-18 16:36:54 -<==    Updates: 1
2019-04-18 16:36:54 -请求地址 : http://localhost:8081/main
2019-04-18 16:36:54 -HTTP METHOD : GET
2019-04-18 16:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:36:54 -参数 : []
2019-04-18 16:36:54 -耗时 : 1
2019-04-18 16:36:54 -返回值 : main
2019-04-18 16:36:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 16:36:54 -HTTP METHOD : GET
2019-04-18 16:36:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 16:36:54 -参数 : []
2019-04-18 16:36:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 16:36:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 16:36:54 -<==      Total: 0
2019-04-18 16:36:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 16:36:54 -==> Parameters: 1(Long), 0(String)
2019-04-18 16:36:54 -<==      Total: 1
2019-04-18 16:36:54 -耗时 : 12
2019-04-18 16:36:54 -返回值 : com.bootdo.common.utils.PageUtils@6de7a775
2019-04-18 16:36:54 -请求地址 : http://localhost:8081/main
2019-04-18 16:36:54 -HTTP METHOD : GET
2019-04-18 16:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:36:54 -参数 : []
2019-04-18 16:36:54 -耗时 : 1
2019-04-18 16:36:54 -返回值 : main
2019-04-18 16:38:27 -请求地址 : http://localhost:8081/index
2019-04-18 16:38:27 -HTTP METHOD : GET
2019-04-18 16:38:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 16:38:27 -参数 : [{}]
2019-04-18 16:38:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 16:38:27 -==> Parameters: 1(Long)
2019-04-18 16:38:27 -<==      Total: 49
2019-04-18 16:38:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 16:38:27 -==> Parameters: 138(Long)
2019-04-18 16:38:27 -<==      Total: 1
2019-04-18 16:38:27 -耗时 : 28
2019-04-18 16:38:27 -返回值 : index_v1
2019-04-18 16:38:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 16:38:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 16:38:27.141(Timestamp)
2019-04-18 16:38:27 -<==    Updates: 1
2019-04-18 16:38:27 -请求地址 : http://localhost:8081/main
2019-04-18 16:38:27 -HTTP METHOD : GET
2019-04-18 16:38:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:38:27 -参数 : []
2019-04-18 16:38:27 -耗时 : 0
2019-04-18 16:38:27 -返回值 : main
2019-04-18 16:38:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 16:38:27 -HTTP METHOD : GET
2019-04-18 16:38:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 16:38:27 -参数 : []
2019-04-18 16:38:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 16:38:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 16:38:27 -<==      Total: 0
2019-04-18 16:38:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 16:38:27 -==> Parameters: 1(Long), 0(String)
2019-04-18 16:38:27 -<==      Total: 1
2019-04-18 16:38:27 -耗时 : 8
2019-04-18 16:38:27 -返回值 : com.bootdo.common.utils.PageUtils@67c4b747
2019-04-18 16:38:27 -请求地址 : http://localhost:8081/main
2019-04-18 16:38:27 -HTTP METHOD : GET
2019-04-18 16:38:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 16:38:27 -参数 : []
2019-04-18 16:38:27 -耗时 : 0
2019-04-18 16:38:27 -返回值 : main
2019-04-18 16:38:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 16:38:29 -==> Parameters: 1(Long)
2019-04-18 16:38:29 -<==      Total: 93
2019-04-18 16:38:29 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 16:38:29 -HTTP METHOD : GET
2019-04-18 16:38:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 16:38:29 -参数 : []
2019-04-18 16:38:29 -耗时 : 0
2019-04-18 16:38:29 -返回值 : charts/countDD
2019-04-18 16:38:29 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 16:38:29 -HTTP METHOD : GET
2019-04-18 16:38:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 16:38:29 -参数 : []
2019-04-18 16:38:29 -耗时 : 1
2019-04-18 16:38:29 -返回值 : charts/tableDD
2019-04-18 16:38:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 16:38:30 -HTTP METHOD : GET
2019-04-18 16:38:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 16:38:30 -参数 : [userType]
2019-04-18 16:38:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 16:38:30 -==> Parameters: userType(String)
2019-04-18 16:38:30 -<==      Total: 4
2019-04-18 16:38:30 -耗时 : 6
2019-04-18 16:38:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 16:38:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 16:38:37 -HTTP METHOD : GET
2019-04-18 16:38:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 16:38:37 -参数 : []
2019-04-18 16:38:37 -耗时 : 2
2019-04-18 16:38:37 -返回值 : system/dept/deptTree
2019-04-18 16:38:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 16:38:38 -HTTP METHOD : GET
2019-04-18 16:38:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 16:38:38 -参数 : []
2019-04-18 16:38:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 16:38:38 -==> Parameters: 
2019-04-18 16:38:38 -<==      Total: 3
2019-04-18 16:38:38 -耗时 : 3
2019-04-18 16:38:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 16:38:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:38:40 -HTTP METHOD : POST
2019-04-18 16:38:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:38:40 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@44dc319d, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@246e8ba, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@23248a8b, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@44dc319d, com.bootdo.moneyLog.vo.WaterLogVo@246e8ba, com.bootdo.moneyLog.vo.HeatLogVo@23248a8b]
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:40 -<==      Total: 1
2019-04-18 16:38:40 -耗时 : 97
2019-04-18 16:38:40 -返回值 : charts/tableDD
2019-04-18 16:38:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:38:41 -HTTP METHOD : POST
2019-04-18 16:38:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:38:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7118a0e1, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6b8669b3, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2f2c4268, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7118a0e1, com.bootdo.moneyLog.vo.WaterLogVo@6b8669b3, com.bootdo.moneyLog.vo.HeatLogVo@2f2c4268]
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -耗时 : 99
2019-04-18 16:38:41 -返回值 : charts/tableDD
2019-04-18 16:38:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 16:38:41 -HTTP METHOD : POST
2019-04-18 16:38:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 16:38:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3fe53faf, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4461a641, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@21d645f2, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3fe53faf, com.bootdo.moneyLog.vo.WaterLogVo@4461a641, com.bootdo.moneyLog.vo.HeatLogVo@21d645f2]
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:41 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 16:38:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 16:38:42 -<==      Total: 1
2019-04-18 16:38:42 -耗时 : 85
2019-04-18 16:38:42 -返回值 : charts/tableDD
2019-04-18 18:17:30 -Starting BootdoApplication on ZJZL-20180906VX with PID 9428 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-18 18:17:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-18 18:17:31 -The following profiles are active: dev
2019-04-18 18:17:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 18:17:31 CST 2019]; root of context hierarchy
2019-04-18 18:17:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-18 18:17:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d81ac79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6fdadb20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-18 18:17:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-18 18:17:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-18 18:17:41 -Tomcat initialized with port(s): 8081 (http)
2019-04-18 18:17:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-18 18:17:41 -Starting service [Tomcat]
2019-04-18 18:17:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-18 18:17:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-18 18:17:41 -Initializing Spring embedded WebApplicationContext
2019-04-18 18:17:41 -Root WebApplicationContext: initialization completed in 10723 ms
2019-04-18 18:17:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-18 18:17:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-18 18:17:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-18 18:17:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-18 18:17:42 -Filter xssFilter was not registered (disabled)
2019-04-18 18:17:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-18 18:17:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-18 18:17:42 -Servlet statViewServlet mapped to [/druid/*]
2019-04-18 18:17:42 -Servlet dispatcherServlet mapped to [/]
2019-04-18 18:17:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 18:17:31 CST 2019]; root of context hierarchy
2019-04-18 18:17:47 -Using default implementation for ThreadExecutor
2019-04-18 18:17:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-18 18:17:47 -Quartz Scheduler v.2.2.1 created.
2019-04-18 18:17:47 -RAMJobStore initialized.
2019-04-18 18:17:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-18 18:17:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-18 18:17:47 -Quartz scheduler version: 2.2.1
2019-04-18 18:17:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5b332439
2019-04-18 18:17:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-18 18:17:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-18 18:17:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-18 18:17:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-18 18:17:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-18 18:17:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-18 18:17:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-18 18:17:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-18 18:17:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-18 18:17:50 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-18 18:17:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-18 18:17:50 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-18 18:17:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-18 18:17:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-18 18:17:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-18 18:17:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-18 18:17:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-18 18:17:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-18 18:17:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-18 18:17:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-18 18:17:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-18 18:17:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 18:17:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-18 18:17:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-18 18:17:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-18 18:17:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-18 18:17:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-18 18:17:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-18 18:17:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-18 18:17:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-18 18:17:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-18 18:17:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-18 18:17:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-18 18:17:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-18 18:17:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-18 18:17:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-18 18:17:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-18 18:17:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-18 18:17:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-18 18:17:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-18 18:17:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-18 18:17:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-18 18:17:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-18 18:17:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-18 18:17:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-18 18:17:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-18 18:17:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-18 18:17:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 18:17:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-18 18:17:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 18:17:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 18:17:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-18 18:17:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-18 18:17:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-18 18:17:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-18 18:17:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-18 18:17:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-18 18:17:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-18 18:17:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-18 18:17:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-18 18:17:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-18 18:17:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-18 18:17:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-18 18:17:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-18 18:17:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-18 18:17:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-18 18:17:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-18 18:17:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-18 18:17:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-18 18:17:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-18 18:17:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-18 18:17:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-18 18:17:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-18 18:17:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-18 18:17:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-18 18:17:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-18 18:17:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-18 18:17:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-18 18:17:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 18:17:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-18 18:17:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-18 18:17:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-18 18:17:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-18 18:17:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-18 18:17:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-18 18:17:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-18 18:17:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-18 18:17:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-18 18:17:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-18 18:17:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-18 18:17:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-18 18:17:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-18 18:17:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-18 18:17:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-18 18:17:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-18 18:17:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-18 18:17:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-18 18:17:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-18 18:17:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-18 18:17:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-18 18:17:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-18 18:17:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 18:17:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 18 18:17:31 CST 2019]; root of context hierarchy
2019-04-18 18:17:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 18:17:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 18:17:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-18 18:17:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-18 18:17:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-18 18:17:56 -Registering beans for JMX exposure on startup
2019-04-18 18:17:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-18 18:17:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-18 18:17:56 -Starting beans in phase 2147483647
2019-04-18 18:17:56 -Context refreshed
2019-04-18 18:17:56 -Found 1 custom documentation plugin(s)
2019-04-18 18:17:56 -Scanning for api listing references
2019-04-18 18:17:56 -Generating unique operation named: getCountDUsingPOST_1
2019-04-18 18:17:56 -Generating unique operation named: getCountDUsingPOST_2
2019-04-18 18:17:56 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-18 18:17:56 -Generating unique operation named: getCountDUsingPOST_3
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_1
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_2
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_3
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_1
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_4
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_5
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_2
2019-04-18 18:17:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_3
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_3
2019-04-18 18:17:57 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_3
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_6
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_7
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_2
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_4
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_4
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_4
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_8
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_9
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_3
2019-04-18 18:17:57 -Generating unique operation named: ElecUsingGET_1
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_5
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_5
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_5
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_10
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_11
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_4
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_6
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_6
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_6
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_7
2019-04-18 18:17:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_7
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_12
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_13
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_5
2019-04-18 18:17:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_7
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_8
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_8
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_14
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_15
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_8
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_6
2019-04-18 18:17:57 -Generating unique operation named: addUsingGET_8
2019-04-18 18:17:57 -Generating unique operation named: editUsingGET_9
2019-04-18 18:17:57 -Generating unique operation named: listUsingGET_9
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_16
2019-04-18 18:17:57 -Generating unique operation named: removeUsingPOST_17
2019-04-18 18:17:57 -Generating unique operation named: saveUsingPOST_8
2019-04-18 18:17:57 -Generating unique operation named: updateUsingGET_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingHEAD_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPOST_9
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPUT_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingPATCH_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingDELETE_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-18 18:17:57 -Generating unique operation named: updateUsingTRACE_7
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_9
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_10
2019-04-18 18:17:58 -Generating unique operation named: infoUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingHEAD_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingPOST_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingPUT_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingPATCH_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingDELETE_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-18 18:17:58 -Generating unique operation named: infoUsingTRACE_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_10
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_18
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_19
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_10
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_11
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_20
2019-04-18 18:17:58 -Generating unique operation named: welcomeUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_10
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_11
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_12
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_21
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_10
2019-04-18 18:17:58 -Generating unique operation named: treeUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: treeUsingGET_2
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_11
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_11
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_12
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_13
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_22
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_23
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingGET_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingHEAD_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPUT_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPATCH_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingDELETE_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-18 18:17:58 -Generating unique operation named: updateUsingTRACE_8
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_12
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_13
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_14
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_24
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_25
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingGET_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingHEAD_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_13
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPUT_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPATCH_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingDELETE_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-18 18:17:58 -Generating unique operation named: updateUsingTRACE_9
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_13
2019-04-18 18:17:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_14
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_15
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_13
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_14
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_14
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_16
2019-04-18 18:17:58 -Generating unique operation named: listUsingHEAD_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingPOST_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingPUT_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingPATCH_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingDELETE_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingOPTIONS_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingTRACE_1
2019-04-18 18:17:58 -Generating unique operation named: countDDUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: exportDDUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-18 18:17:58 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-18 18:17:58 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-18 18:17:58 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_14
2019-04-18 18:17:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_15
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_17
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_26
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_15
2019-04-18 18:17:58 -Generating unique operation named: treeUsingGET_3
2019-04-18 18:17:58 -Generating unique operation named: treeViewUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_15
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_15
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_16
2019-04-18 18:17:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_18
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_27
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_28
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_16
2019-04-18 18:17:58 -Generating unique operation named: updateUsingGET_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingHEAD_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_16
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPUT_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPATCH_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingDELETE_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-18 18:17:58 -Generating unique operation named: updateUsingTRACE_10
2019-04-18 18:17:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_16
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_17
2019-04-18 18:17:58 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_19
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_29
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_30
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_17
2019-04-18 18:17:58 -Generating unique operation named: updateUsingGET_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingHEAD_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_17
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPUT_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPATCH_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingDELETE_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-18 18:17:58 -Generating unique operation named: updateUsingTRACE_11
2019-04-18 18:17:58 -Generating unique operation named: addUsingGET_17
2019-04-18 18:17:58 -Generating unique operation named: editUsingGET_18
2019-04-18 18:17:58 -Generating unique operation named: listUsingGET_20
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_31
2019-04-18 18:17:58 -Generating unique operation named: removeUsingPOST_32
2019-04-18 18:17:58 -Generating unique operation named: saveUsingPOST_18
2019-04-18 18:17:58 -Generating unique operation named: updateUsingGET_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingHEAD_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPOST_18
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPUT_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingPATCH_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingDELETE_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-18 18:17:58 -Generating unique operation named: updateUsingTRACE_12
2019-04-18 18:17:58 -Starting Quartz Scheduler now
2019-04-18 18:17:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-18 18:17:58 -Starting...
2019-04-18 18:17:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-18 18:17:58 -Started.
2019-04-18 18:17:58 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-18 18:17:59 -Using a shared selector for servlet write/read
2019-04-18 18:17:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-18 18:17:59 -Started BootdoApplication in 29.489 seconds (JVM running for 30.345)
2019-04-18 18:17:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-18 18:17:59 -==> Parameters: 
2019-04-18 18:17:59 -<==      Total: 1
2019-04-18 18:18:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-18 18:23:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-18 18:23:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-18 18:23:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 162 ms
2019-04-18 18:23:30 -Enabling session validation scheduler...
2019-04-18 18:23:30 -请求地址 : http://localhost:8081/login;JSESSIONID=8ce25536-f9a8-4b9b-a822-dae184f3c6ab
2019-04-18 18:23:30 -HTTP METHOD : GET
2019-04-18 18:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-18 18:23:30 -参数 : [{}]
2019-04-18 18:23:30 -耗时 : 3
2019-04-18 18:23:30 -返回值 : login
2019-04-18 18:23:33 -请求地址 : http://localhost:8081/getVerify
2019-04-18 18:23:33 -HTTP METHOD : GET
2019-04-18 18:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-18 18:23:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@325c6f03, org.apache.shiro.web.servlet.ShiroHttpServletResponse@775ef72c]
2019-04-18 18:23:41 -6788
2019-04-18 18:23:42 -耗时 : 9182
2019-04-18 18:23:42 -返回值 : null
2019-04-18 18:23:55 -请求地址 : http://localhost:8081/login
2019-04-18 18:23:55 -HTTP METHOD : POST
2019-04-18 18:23:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-18 18:23:55 -参数 : [admin, 111111, 6788, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a0f686c]
2019-04-18 18:23:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-18 18:23:55 -==> Parameters: admin(String)
2019-04-18 18:23:55 -<==      Total: 1
2019-04-18 18:23:55 -耗时 : 274
2019-04-18 18:23:55 -返回值 : {msg=操作成功, code=0}
2019-04-18 18:23:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-18 18:23:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:23:56 -==> Parameters: 1(Long), admin(String), 登录(String), 274(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-18 18:23:56.014(Timestamp)
2019-04-18 18:23:56 -<==    Updates: 1
2019-04-18 18:23:56 -请求地址 : http://localhost:8081/index
2019-04-18 18:23:56 -HTTP METHOD : GET
2019-04-18 18:23:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:23:56 -参数 : [{}]
2019-04-18 18:23:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:23:57 -==> Parameters: 1(Long)
2019-04-18 18:23:57 -<==      Total: 49
2019-04-18 18:23:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:23:57 -==> Parameters: 138(Long)
2019-04-18 18:23:57 -<==      Total: 1
2019-04-18 18:23:57 -耗时 : 564
2019-04-18 18:23:57 -返回值 : index_v1
2019-04-18 18:23:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:23:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 564(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:23:57.461(Timestamp)
2019-04-18 18:23:57 -<==    Updates: 1
2019-04-18 18:23:58 -请求地址 : http://localhost:8081/main
2019-04-18 18:23:58 -HTTP METHOD : GET
2019-04-18 18:23:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:23:58 -参数 : []
2019-04-18 18:23:58 -耗时 : 2
2019-04-18 18:23:58 -返回值 : main
2019-04-18 18:24:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:24:03 -HTTP METHOD : GET
2019-04-18 18:24:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:24:03 -参数 : []
2019-04-18 18:24:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:24:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:24:03 -<==      Total: 0
2019-04-18 18:24:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:24:03 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:24:03 -<==      Total: 1
2019-04-18 18:24:03 -耗时 : 56
2019-04-18 18:24:03 -返回值 : com.bootdo.common.utils.PageUtils@55e38cd0
2019-04-18 18:24:03 -请求地址 : http://localhost:8081/main
2019-04-18 18:24:03 -HTTP METHOD : GET
2019-04-18 18:24:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:24:03 -参数 : []
2019-04-18 18:24:03 -耗时 : 0
2019-04-18 18:24:03 -返回值 : main
2019-04-18 18:24:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 18:24:16 -==> Parameters: 1(Long)
2019-04-18 18:24:16 -<==      Total: 93
2019-04-18 18:24:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:24:16 -HTTP METHOD : GET
2019-04-18 18:24:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:24:16 -参数 : []
2019-04-18 18:24:16 -耗时 : 17
2019-04-18 18:24:16 -返回值 : charts/tableDD
2019-04-18 18:24:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:24:22 -HTTP METHOD : GET
2019-04-18 18:24:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:24:22 -参数 : []
2019-04-18 18:24:22 -耗时 : 0
2019-04-18 18:24:22 -返回值 : system/dept/deptTree
2019-04-18 18:24:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:24:22 -HTTP METHOD : GET
2019-04-18 18:24:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:24:22 -参数 : []
2019-04-18 18:24:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:24:22 -==> Parameters: 
2019-04-18 18:24:22 -<==      Total: 3
2019-04-18 18:24:22 -耗时 : 26
2019-04-18 18:24:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:24:24 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:24:24 -HTTP METHOD : POST
2019-04-18 18:24:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:24:24 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@10e40662, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@75f95f77, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7328f070, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@10e40662, com.bootdo.moneyLog.vo.WaterLogVo@75f95f77, com.bootdo.moneyLog.vo.HeatLogVo@7328f070]
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:24:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:24:24 -<==      Total: 1
2019-04-18 18:24:24 -耗时 : 188
2019-04-18 18:24:24 -返回值 : charts/tableDD
2019-04-18 18:30:09 -请求地址 : http://localhost:8081/index
2019-04-18 18:30:09 -HTTP METHOD : GET
2019-04-18 18:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:30:09 -参数 : [{}]
2019-04-18 18:30:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:30:09 -==> Parameters: 1(Long)
2019-04-18 18:30:09 -<==      Total: 49
2019-04-18 18:30:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:30:09 -==> Parameters: 138(Long)
2019-04-18 18:30:09 -<==      Total: 1
2019-04-18 18:30:09 -耗时 : 30
2019-04-18 18:30:09 -返回值 : index_v1
2019-04-18 18:30:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:30:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:30:09.346(Timestamp)
2019-04-18 18:30:09 -请求地址 : http://localhost:8081/main
2019-04-18 18:30:09 -HTTP METHOD : GET
2019-04-18 18:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:30:09 -参数 : []
2019-04-18 18:30:09 -耗时 : 1
2019-04-18 18:30:09 -返回值 : main
2019-04-18 18:30:09 -<==    Updates: 1
2019-04-18 18:30:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:30:09 -HTTP METHOD : GET
2019-04-18 18:30:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:30:09 -参数 : []
2019-04-18 18:30:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:30:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:30:09 -<==      Total: 0
2019-04-18 18:30:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:30:09 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:30:09 -<==      Total: 1
2019-04-18 18:30:09 -耗时 : 6
2019-04-18 18:30:09 -返回值 : com.bootdo.common.utils.PageUtils@119b74b
2019-04-18 18:30:09 -请求地址 : http://localhost:8081/main
2019-04-18 18:30:09 -HTTP METHOD : GET
2019-04-18 18:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:30:09 -参数 : []
2019-04-18 18:30:09 -耗时 : 0
2019-04-18 18:30:09 -返回值 : main
2019-04-18 18:30:15 -请求地址 : http://localhost:8081/charts/countDD
2019-04-18 18:30:15 -HTTP METHOD : GET
2019-04-18 18:30:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-18 18:30:15 -参数 : []
2019-04-18 18:30:15 -耗时 : 18
2019-04-18 18:30:15 -返回值 : charts/countDD
2019-04-18 18:30:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 18:30:16 -HTTP METHOD : GET
2019-04-18 18:30:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 18:30:16 -参数 : [userType]
2019-04-18 18:30:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 18:30:16 -==> Parameters: userType(String)
2019-04-18 18:30:16 -<==      Total: 4
2019-04-18 18:30:16 -耗时 : 53
2019-04-18 18:30:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 18:30:18 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:30:18 -HTTP METHOD : GET
2019-04-18 18:30:18 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:30:18 -参数 : []
2019-04-18 18:30:18 -耗时 : 0
2019-04-18 18:30:18 -返回值 : charts/tableDD
2019-04-18 18:30:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:30:23 -HTTP METHOD : GET
2019-04-18 18:30:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:30:23 -参数 : []
2019-04-18 18:30:23 -耗时 : 1
2019-04-18 18:30:23 -返回值 : system/dept/deptTree
2019-04-18 18:30:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:30:23 -HTTP METHOD : GET
2019-04-18 18:30:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:30:23 -参数 : []
2019-04-18 18:30:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:30:23 -==> Parameters: 
2019-04-18 18:30:23 -<==      Total: 3
2019-04-18 18:30:23 -耗时 : 5
2019-04-18 18:30:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:30:25 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:30:25 -HTTP METHOD : POST
2019-04-18 18:30:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:30:25 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3193539f, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5a87d115, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@77d95985, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3193539f, com.bootdo.moneyLog.vo.WaterLogVo@5a87d115, com.bootdo.moneyLog.vo.HeatLogVo@77d95985]
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:25 -<==      Total: 1
2019-04-18 18:30:25 -耗时 : 95
2019-04-18 18:30:25 -返回值 : charts/tableDD
2019-04-18 18:30:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:30:26 -HTTP METHOD : POST
2019-04-18 18:30:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:30:26 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@f675178, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@404b6aad, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5dbbb515, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@f675178, com.bootdo.moneyLog.vo.WaterLogVo@404b6aad, com.bootdo.moneyLog.vo.HeatLogVo@5dbbb515]
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:26 -<==      Total: 1
2019-04-18 18:30:26 -耗时 : 108
2019-04-18 18:30:26 -返回值 : charts/tableDD
2019-04-18 18:30:27 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:30:27 -HTTP METHOD : POST
2019-04-18 18:30:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:30:27 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@140e4f14, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2f1dc89b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@476e4ca, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@140e4f14, com.bootdo.moneyLog.vo.WaterLogVo@2f1dc89b, com.bootdo.moneyLog.vo.HeatLogVo@476e4ca]
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:27 -<==      Total: 1
2019-04-18 18:30:27 -耗时 : 105
2019-04-18 18:30:27 -返回值 : charts/tableDD
2019-04-18 18:30:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:30:28 -HTTP METHOD : POST
2019-04-18 18:30:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:30:28 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@513d65b2, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5ffa81e5, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5bc50ec2, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@513d65b2, com.bootdo.moneyLog.vo.WaterLogVo@5ffa81e5, com.bootdo.moneyLog.vo.HeatLogVo@5bc50ec2]
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -耗时 : 105
2019-04-18 18:30:28 -返回值 : charts/tableDD
2019-04-18 18:30:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:30:28 -HTTP METHOD : POST
2019-04-18 18:30:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:30:28 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5392dbaf, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@c275621, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@76f26f94, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5392dbaf, com.bootdo.moneyLog.vo.WaterLogVo@c275621, com.bootdo.moneyLog.vo.HeatLogVo@76f26f94]
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:30:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:30:28 -<==      Total: 1
2019-04-18 18:30:28 -耗时 : 88
2019-04-18 18:30:28 -返回值 : charts/tableDD
2019-04-18 18:30:45 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-18 18:32:58 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:32:58 -HTTP METHOD : POST
2019-04-18 18:32:58 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:32:58 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4a7052d9, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4baedf31, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@48e41a16, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4a7052d9, com.bootdo.moneyLog.vo.WaterLogVo@4baedf31, com.bootdo.moneyLog.vo.HeatLogVo@48e41a16]
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:32:58 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:32:58 -<==      Total: 1
2019-04-18 18:32:58 -耗时 : 85
2019-04-18 18:32:58 -返回值 : charts/tableDD
2019-04-18 18:33:09 -请求地址 : http://localhost:8081/charts/countMM
2019-04-18 18:33:09 -HTTP METHOD : GET
2019-04-18 18:33:09 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-18 18:33:09 -参数 : []
2019-04-18 18:33:09 -耗时 : 10
2019-04-18 18:33:09 -返回值 : charts/countMM
2019-04-18 18:33:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 18:33:09 -HTTP METHOD : GET
2019-04-18 18:33:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 18:33:09 -参数 : [userType]
2019-04-18 18:33:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 18:33:09 -==> Parameters: userType(String)
2019-04-18 18:33:09 -<==      Total: 4
2019-04-18 18:33:09 -耗时 : 4
2019-04-18 18:33:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 18:33:10 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-18 18:33:10 -HTTP METHOD : GET
2019-04-18 18:33:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-18 18:33:10 -参数 : []
2019-04-18 18:33:10 -耗时 : 11
2019-04-18 18:33:10 -返回值 : charts/tableElecMM
2019-04-18 18:33:21 -请求地址 : http://localhost:8081/charts/countYY
2019-04-18 18:33:21 -HTTP METHOD : GET
2019-04-18 18:33:21 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-18 18:33:21 -参数 : []
2019-04-18 18:33:21 -耗时 : 1
2019-04-18 18:33:21 -返回值 : charts/countYY
2019-04-18 18:33:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 18:33:21 -HTTP METHOD : GET
2019-04-18 18:33:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 18:33:21 -参数 : [userType]
2019-04-18 18:33:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 18:33:21 -==> Parameters: userType(String)
2019-04-18 18:33:21 -<==      Total: 4
2019-04-18 18:33:21 -耗时 : 5
2019-04-18 18:33:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 18:33:22 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-18 18:33:22 -HTTP METHOD : GET
2019-04-18 18:33:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-18 18:33:22 -参数 : []
2019-04-18 18:33:22 -耗时 : 8
2019-04-18 18:33:22 -返回值 : charts/tableElecYY
2019-04-18 18:33:23 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-18 18:33:23 -HTTP METHOD : GET
2019-04-18 18:33:23 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-18 18:33:23 -参数 : []
2019-04-18 18:33:23 -耗时 : 1
2019-04-18 18:33:23 -返回值 : charts/countOwe
2019-04-18 18:33:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 18:33:23 -HTTP METHOD : GET
2019-04-18 18:33:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 18:33:23 -参数 : [userType]
2019-04-18 18:33:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 18:33:23 -==> Parameters: userType(String)
2019-04-18 18:33:23 -<==      Total: 4
2019-04-18 18:33:23 -耗时 : 7
2019-04-18 18:33:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 18:33:26 -请求地址 : http://localhost:8081/charts/countRun
2019-04-18 18:33:26 -HTTP METHOD : GET
2019-04-18 18:33:26 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-18 18:33:26 -参数 : []
2019-04-18 18:33:26 -耗时 : 0
2019-04-18 18:33:26 -返回值 : charts/countRun
2019-04-18 18:45:25 -请求地址 : http://localhost:8081/index
2019-04-18 18:45:25 -HTTP METHOD : GET
2019-04-18 18:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:45:25 -参数 : [{}]
2019-04-18 18:45:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:45:25 -==> Parameters: 1(Long)
2019-04-18 18:45:25 -<==      Total: 49
2019-04-18 18:45:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:45:25 -==> Parameters: 138(Long)
2019-04-18 18:45:25 -<==      Total: 1
2019-04-18 18:45:25 -耗时 : 37
2019-04-18 18:45:25 -返回值 : index_v1
2019-04-18 18:45:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:45:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:45:25.906(Timestamp)
2019-04-18 18:45:26 -<==    Updates: 1
2019-04-18 18:45:26 -请求地址 : http://localhost:8081/main
2019-04-18 18:45:26 -HTTP METHOD : GET
2019-04-18 18:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:45:26 -参数 : []
2019-04-18 18:45:26 -耗时 : 1
2019-04-18 18:45:26 -返回值 : main
2019-04-18 18:45:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:45:26 -HTTP METHOD : GET
2019-04-18 18:45:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:45:26 -参数 : []
2019-04-18 18:45:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:45:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:45:26 -<==      Total: 0
2019-04-18 18:45:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:45:26 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:45:26 -<==      Total: 1
2019-04-18 18:45:26 -耗时 : 24
2019-04-18 18:45:26 -返回值 : com.bootdo.common.utils.PageUtils@354506a
2019-04-18 18:45:26 -请求地址 : http://localhost:8081/main
2019-04-18 18:45:26 -HTTP METHOD : GET
2019-04-18 18:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:45:26 -参数 : []
2019-04-18 18:45:26 -耗时 : 1
2019-04-18 18:45:26 -返回值 : main
2019-04-18 18:45:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 18:45:29 -==> Parameters: 1(Long)
2019-04-18 18:45:29 -<==      Total: 93
2019-04-18 18:45:29 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:45:29 -HTTP METHOD : GET
2019-04-18 18:45:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:45:29 -参数 : []
2019-04-18 18:45:29 -耗时 : 0
2019-04-18 18:45:29 -返回值 : charts/tableDD
2019-04-18 18:45:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:45:37 -HTTP METHOD : GET
2019-04-18 18:45:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:45:37 -参数 : []
2019-04-18 18:45:37 -耗时 : 1
2019-04-18 18:45:37 -返回值 : system/dept/deptTree
2019-04-18 18:45:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:45:38 -HTTP METHOD : GET
2019-04-18 18:45:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:45:38 -参数 : []
2019-04-18 18:45:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:45:38 -==> Parameters: 
2019-04-18 18:45:38 -<==      Total: 3
2019-04-18 18:45:38 -耗时 : 5
2019-04-18 18:45:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:45:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:45:39 -HTTP METHOD : POST
2019-04-18 18:45:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:45:39 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2e7d0e6d, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3843ddb4, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@106ba848, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2e7d0e6d, com.bootdo.moneyLog.vo.WaterLogVo@3843ddb4, com.bootdo.moneyLog.vo.HeatLogVo@106ba848]
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:39 -<==      Total: 1
2019-04-18 18:45:39 -耗时 : 85
2019-04-18 18:45:39 -返回值 : charts/tableDD
2019-04-18 18:45:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:45:40 -HTTP METHOD : POST
2019-04-18 18:45:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:45:40 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@679524b0, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4e1f2338, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1b3e4bfa, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@679524b0, com.bootdo.moneyLog.vo.WaterLogVo@4e1f2338, com.bootdo.moneyLog.vo.HeatLogVo@1b3e4bfa]
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:40 -<==      Total: 1
2019-04-18 18:45:40 -耗时 : 84
2019-04-18 18:45:40 -返回值 : charts/tableDD
2019-04-18 18:45:41 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:45:41 -HTTP METHOD : POST
2019-04-18 18:45:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:45:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7e6398ab, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@360283ad, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@66b17385, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7e6398ab, com.bootdo.moneyLog.vo.WaterLogVo@360283ad, com.bootdo.moneyLog.vo.HeatLogVo@66b17385]
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:41 -<==      Total: 1
2019-04-18 18:45:41 -耗时 : 76
2019-04-18 18:45:41 -返回值 : charts/tableDD
2019-04-18 18:45:42 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:45:42 -HTTP METHOD : POST
2019-04-18 18:45:42 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:45:42 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@413473ac, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1e878f3f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@73988d46, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@413473ac, com.bootdo.moneyLog.vo.WaterLogVo@1e878f3f, com.bootdo.moneyLog.vo.HeatLogVo@73988d46]
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:45:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:45:42 -<==      Total: 1
2019-04-18 18:45:42 -耗时 : 96
2019-04-18 18:45:42 -返回值 : charts/tableDD
2019-04-18 18:47:00 -请求地址 : http://localhost:8081/index
2019-04-18 18:47:00 -HTTP METHOD : GET
2019-04-18 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:47:00 -参数 : [{}]
2019-04-18 18:47:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:47:00 -==> Parameters: 1(Long)
2019-04-18 18:47:00 -<==      Total: 49
2019-04-18 18:47:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:47:00 -==> Parameters: 138(Long)
2019-04-18 18:47:00 -<==      Total: 1
2019-04-18 18:47:00 -耗时 : 25
2019-04-18 18:47:00 -返回值 : index_v1
2019-04-18 18:47:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:47:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:47:00.423(Timestamp)
2019-04-18 18:47:00 -<==    Updates: 1
2019-04-18 18:47:00 -请求地址 : http://localhost:8081/main
2019-04-18 18:47:00 -HTTP METHOD : GET
2019-04-18 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:47:00 -参数 : []
2019-04-18 18:47:00 -耗时 : 1
2019-04-18 18:47:00 -返回值 : main
2019-04-18 18:47:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:47:00 -HTTP METHOD : GET
2019-04-18 18:47:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:47:00 -参数 : []
2019-04-18 18:47:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:47:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:47:00 -<==      Total: 0
2019-04-18 18:47:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:47:00 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:47:00 -<==      Total: 1
2019-04-18 18:47:00 -耗时 : 28
2019-04-18 18:47:00 -返回值 : com.bootdo.common.utils.PageUtils@1c3e7eaf
2019-04-18 18:47:01 -请求地址 : http://localhost:8081/main
2019-04-18 18:47:01 -HTTP METHOD : GET
2019-04-18 18:47:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:47:01 -参数 : []
2019-04-18 18:47:01 -耗时 : 2
2019-04-18 18:47:01 -返回值 : main
2019-04-18 18:47:04 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:47:04 -HTTP METHOD : GET
2019-04-18 18:47:04 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:47:04 -参数 : []
2019-04-18 18:47:04 -耗时 : 1
2019-04-18 18:47:04 -返回值 : charts/tableDD
2019-04-18 18:47:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:47:09 -HTTP METHOD : GET
2019-04-18 18:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:47:09 -参数 : []
2019-04-18 18:47:09 -耗时 : 1
2019-04-18 18:47:09 -返回值 : system/dept/deptTree
2019-04-18 18:47:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:47:09 -HTTP METHOD : GET
2019-04-18 18:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:47:09 -参数 : []
2019-04-18 18:47:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:47:09 -==> Parameters: 
2019-04-18 18:47:09 -<==      Total: 3
2019-04-18 18:47:09 -耗时 : 4
2019-04-18 18:47:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:47:10 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:10 -HTTP METHOD : POST
2019-04-18 18:47:10 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:10 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@6615f72a, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4f3a6b44, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1250ff87, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@6615f72a, com.bootdo.moneyLog.vo.WaterLogVo@4f3a6b44, com.bootdo.moneyLog.vo.HeatLogVo@1250ff87]
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:10 -<==      Total: 1
2019-04-18 18:47:10 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -耗时 : 80
2019-04-18 18:47:11 -返回值 : charts/tableDD
2019-04-18 18:47:11 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:11 -HTTP METHOD : POST
2019-04-18 18:47:11 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:11 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4ed4287d, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@331f542a, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@11c85de9, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4ed4287d, com.bootdo.moneyLog.vo.WaterLogVo@331f542a, com.bootdo.moneyLog.vo.HeatLogVo@11c85de9]
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:11 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:11 -<==      Total: 1
2019-04-18 18:47:11 -耗时 : 87
2019-04-18 18:47:11 -返回值 : charts/tableDD
2019-04-18 18:47:12 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:12 -HTTP METHOD : POST
2019-04-18 18:47:12 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:12 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5eb5a471, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@746a24cb, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@c1ff88d, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5eb5a471, com.bootdo.moneyLog.vo.WaterLogVo@746a24cb, com.bootdo.moneyLog.vo.HeatLogVo@c1ff88d]
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -耗时 : 87
2019-04-18 18:47:12 -返回值 : charts/tableDD
2019-04-18 18:47:12 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:12 -HTTP METHOD : POST
2019-04-18 18:47:12 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:12 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@32bb24e, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@b12d112, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@13d791aa, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@32bb24e, com.bootdo.moneyLog.vo.WaterLogVo@b12d112, com.bootdo.moneyLog.vo.HeatLogVo@13d791aa]
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:12 -<==      Total: 1
2019-04-18 18:47:12 -耗时 : 80
2019-04-18 18:47:12 -返回值 : charts/tableDD
2019-04-18 18:47:13 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:13 -HTTP METHOD : POST
2019-04-18 18:47:13 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:13 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@380b4fa4, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2ac13730, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@59beb12a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@380b4fa4, com.bootdo.moneyLog.vo.WaterLogVo@2ac13730, com.bootdo.moneyLog.vo.HeatLogVo@59beb12a]
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:13 -<==      Total: 1
2019-04-18 18:47:13 -耗时 : 76
2019-04-18 18:47:13 -返回值 : charts/tableDD
2019-04-18 18:47:14 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:14 -HTTP METHOD : POST
2019-04-18 18:47:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:14 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7147c0ff, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2e01e0f6, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5d813c98, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7147c0ff, com.bootdo.moneyLog.vo.WaterLogVo@2e01e0f6, com.bootdo.moneyLog.vo.HeatLogVo@5d813c98]
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:14 -<==      Total: 1
2019-04-18 18:47:14 -耗时 : 78
2019-04-18 18:47:14 -返回值 : charts/tableDD
2019-04-18 18:47:23 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:47:23 -HTTP METHOD : POST
2019-04-18 18:47:23 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:47:23 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@429fbcc3, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@668f4128, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@75b17f50, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@429fbcc3, com.bootdo.moneyLog.vo.WaterLogVo@668f4128, com.bootdo.moneyLog.vo.HeatLogVo@75b17f50]
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:47:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:47:23 -<==      Total: 1
2019-04-18 18:47:23 -耗时 : 65
2019-04-18 18:47:23 -返回值 : charts/tableDD
2019-04-18 18:48:39 -请求地址 : http://localhost:8081/index
2019-04-18 18:48:39 -HTTP METHOD : GET
2019-04-18 18:48:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:48:39 -参数 : [{}]
2019-04-18 18:48:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:48:39 -==> Parameters: 1(Long)
2019-04-18 18:48:39 -<==      Total: 49
2019-04-18 18:48:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:48:39 -==> Parameters: 138(Long)
2019-04-18 18:48:39 -<==      Total: 1
2019-04-18 18:48:39 -耗时 : 19
2019-04-18 18:48:39 -返回值 : index_v1
2019-04-18 18:48:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:48:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:48:39.947(Timestamp)
2019-04-18 18:48:40 -<==    Updates: 1
2019-04-18 18:48:40 -请求地址 : http://localhost:8081/main
2019-04-18 18:48:40 -HTTP METHOD : GET
2019-04-18 18:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:48:40 -参数 : []
2019-04-18 18:48:40 -耗时 : 0
2019-04-18 18:48:40 -返回值 : main
2019-04-18 18:48:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:48:40 -HTTP METHOD : GET
2019-04-18 18:48:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:48:40 -参数 : []
2019-04-18 18:48:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:48:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:48:40 -<==      Total: 0
2019-04-18 18:48:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:48:40 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:48:40 -<==      Total: 1
2019-04-18 18:48:40 -耗时 : 7
2019-04-18 18:48:40 -返回值 : com.bootdo.common.utils.PageUtils@f03a1d7
2019-04-18 18:48:40 -请求地址 : http://localhost:8081/main
2019-04-18 18:48:40 -HTTP METHOD : GET
2019-04-18 18:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:48:40 -参数 : []
2019-04-18 18:48:40 -耗时 : 1
2019-04-18 18:48:40 -返回值 : main
2019-04-18 18:48:45 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:48:45 -HTTP METHOD : GET
2019-04-18 18:48:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:48:45 -参数 : []
2019-04-18 18:48:45 -耗时 : 2
2019-04-18 18:48:45 -返回值 : charts/tableDD
2019-04-18 18:48:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:48:51 -HTTP METHOD : GET
2019-04-18 18:48:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:48:51 -参数 : []
2019-04-18 18:48:51 -耗时 : 1
2019-04-18 18:48:51 -返回值 : system/dept/deptTree
2019-04-18 18:48:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:48:51 -HTTP METHOD : GET
2019-04-18 18:48:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:48:51 -参数 : []
2019-04-18 18:48:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:48:51 -==> Parameters: 
2019-04-18 18:48:51 -<==      Total: 3
2019-04-18 18:48:51 -耗时 : 4
2019-04-18 18:48:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:48:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 357]
2019-04-18 18:48:52 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:48:52 -HTTP METHOD : POST
2019-04-18 18:48:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:48:52 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@f08ff37, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@72fbc9d6, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@298cf543, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@f08ff37, com.bootdo.moneyLog.vo.WaterLogVo@72fbc9d6, com.bootdo.moneyLog.vo.HeatLogVo@298cf543]
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:52 -<==      Total: 1
2019-04-18 18:48:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -耗时 : 77
2019-04-18 18:48:53 -返回值 : charts/tableDD
2019-04-18 18:48:53 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:48:53 -HTTP METHOD : POST
2019-04-18 18:48:53 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:48:53 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7405388b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7da33ba5, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7552ea20, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7405388b, com.bootdo.moneyLog.vo.WaterLogVo@7da33ba5, com.bootdo.moneyLog.vo.HeatLogVo@7552ea20]
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:53 -<==      Total: 1
2019-04-18 18:48:53 -耗时 : 64
2019-04-18 18:48:53 -返回值 : charts/tableDD
2019-04-18 18:48:54 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:48:54 -HTTP METHOD : POST
2019-04-18 18:48:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:48:54 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5f815aa9, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7075a2c3, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@45a8278a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5f815aa9, com.bootdo.moneyLog.vo.WaterLogVo@7075a2c3, com.bootdo.moneyLog.vo.HeatLogVo@45a8278a]
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:54 -<==      Total: 1
2019-04-18 18:48:54 -耗时 : 73
2019-04-18 18:48:54 -返回值 : charts/tableDD
2019-04-18 18:48:55 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:48:55 -HTTP METHOD : POST
2019-04-18 18:48:55 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:48:55 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5b09471f, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5c99ad3, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@23c8caf2, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5b09471f, com.bootdo.moneyLog.vo.WaterLogVo@5c99ad3, com.bootdo.moneyLog.vo.HeatLogVo@23c8caf2]
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:55 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:55 -<==      Total: 1
2019-04-18 18:48:55 -耗时 : 64
2019-04-18 18:48:55 -返回值 : charts/tableDD
2019-04-18 18:48:56 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:48:56 -HTTP METHOD : POST
2019-04-18 18:48:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:48:56 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3d605f16, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2ec15515, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4fb81261, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3d605f16, com.bootdo.moneyLog.vo.WaterLogVo@2ec15515, com.bootdo.moneyLog.vo.HeatLogVo@4fb81261]
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:48:56 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:48:56 -<==      Total: 1
2019-04-18 18:48:56 -耗时 : 73
2019-04-18 18:48:56 -返回值 : charts/tableDD
2019-04-18 18:51:10 -请求地址 : http://localhost:8081/index
2019-04-18 18:51:10 -HTTP METHOD : GET
2019-04-18 18:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:51:10 -参数 : [{}]
2019-04-18 18:51:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:51:10 -==> Parameters: 1(Long)
2019-04-18 18:51:10 -<==      Total: 49
2019-04-18 18:51:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:51:10 -==> Parameters: 138(Long)
2019-04-18 18:51:10 -<==      Total: 1
2019-04-18 18:51:10 -耗时 : 24
2019-04-18 18:51:10 -返回值 : index_v1
2019-04-18 18:51:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:51:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:51:10.666(Timestamp)
2019-04-18 18:51:10 -请求地址 : http://localhost:8081/main
2019-04-18 18:51:10 -HTTP METHOD : GET
2019-04-18 18:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:51:10 -参数 : []
2019-04-18 18:51:10 -耗时 : 0
2019-04-18 18:51:10 -返回值 : main
2019-04-18 18:51:10 -<==    Updates: 1
2019-04-18 18:51:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:51:11 -HTTP METHOD : GET
2019-04-18 18:51:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:51:11 -参数 : []
2019-04-18 18:51:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:51:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:51:11 -<==      Total: 0
2019-04-18 18:51:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:51:11 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:51:11 -<==      Total: 1
2019-04-18 18:51:11 -耗时 : 5
2019-04-18 18:51:11 -返回值 : com.bootdo.common.utils.PageUtils@3d1020a7
2019-04-18 18:51:11 -请求地址 : http://localhost:8081/main
2019-04-18 18:51:11 -HTTP METHOD : GET
2019-04-18 18:51:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:51:11 -参数 : []
2019-04-18 18:51:11 -耗时 : 0
2019-04-18 18:51:11 -返回值 : main
2019-04-18 18:51:13 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:51:13 -HTTP METHOD : GET
2019-04-18 18:51:13 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:51:13 -参数 : []
2019-04-18 18:51:13 -耗时 : 0
2019-04-18 18:51:13 -返回值 : charts/tableDD
2019-04-18 18:51:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:51:18 -HTTP METHOD : GET
2019-04-18 18:51:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:51:18 -参数 : []
2019-04-18 18:51:18 -耗时 : 0
2019-04-18 18:51:18 -返回值 : system/dept/deptTree
2019-04-18 18:51:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:51:18 -HTTP METHOD : GET
2019-04-18 18:51:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:51:18 -参数 : []
2019-04-18 18:51:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:51:18 -==> Parameters: 
2019-04-18 18:51:18 -<==      Total: 3
2019-04-18 18:51:18 -耗时 : 7
2019-04-18 18:51:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:51:20 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:20 -HTTP METHOD : POST
2019-04-18 18:51:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:20 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4b29cd, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@53585c9b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@790f340e, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4b29cd, com.bootdo.moneyLog.vo.WaterLogVo@53585c9b, com.bootdo.moneyLog.vo.HeatLogVo@790f340e]
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:20 -<==      Total: 1
2019-04-18 18:51:20 -耗时 : 74
2019-04-18 18:51:20 -返回值 : charts/tableDD
2019-04-18 18:51:21 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:21 -HTTP METHOD : POST
2019-04-18 18:51:21 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:21 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@32feb557, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@815ed4a, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@71346ed9, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@32feb557, com.bootdo.moneyLog.vo.WaterLogVo@815ed4a, com.bootdo.moneyLog.vo.HeatLogVo@71346ed9]
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:21 -<==      Total: 1
2019-04-18 18:51:21 -耗时 : 63
2019-04-18 18:51:21 -返回值 : charts/tableDD
2019-04-18 18:51:22 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:22 -HTTP METHOD : POST
2019-04-18 18:51:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:22 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2e759c4, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4a9b99b9, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@501bd376, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2e759c4, com.bootdo.moneyLog.vo.WaterLogVo@4a9b99b9, com.bootdo.moneyLog.vo.HeatLogVo@501bd376]
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:22 -<==      Total: 1
2019-04-18 18:51:22 -耗时 : 57
2019-04-18 18:51:22 -返回值 : charts/tableDD
2019-04-18 18:51:23 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:23 -HTTP METHOD : POST
2019-04-18 18:51:23 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:23 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@401852ac, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@17edf9c2, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@3c90439, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@401852ac, com.bootdo.moneyLog.vo.WaterLogVo@17edf9c2, com.bootdo.moneyLog.vo.HeatLogVo@3c90439]
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:23 -<==      Total: 1
2019-04-18 18:51:23 -耗时 : 60
2019-04-18 18:51:23 -返回值 : charts/tableDD
2019-04-18 18:51:24 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:24 -HTTP METHOD : POST
2019-04-18 18:51:24 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:24 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3ef3a7cd, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3c51ec23, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@103f18ef, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3ef3a7cd, com.bootdo.moneyLog.vo.WaterLogVo@3c51ec23, com.bootdo.moneyLog.vo.HeatLogVo@103f18ef]
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:24 -<==      Total: 1
2019-04-18 18:51:24 -耗时 : 57
2019-04-18 18:51:24 -返回值 : charts/tableDD
2019-04-18 18:51:25 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:25 -HTTP METHOD : POST
2019-04-18 18:51:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:25 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@719d1dca, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2aaf15f7, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@16c43042, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@719d1dca, com.bootdo.moneyLog.vo.WaterLogVo@2aaf15f7, com.bootdo.moneyLog.vo.HeatLogVo@16c43042]
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:25 -<==      Total: 1
2019-04-18 18:51:25 -耗时 : 65
2019-04-18 18:51:25 -返回值 : charts/tableDD
2019-04-18 18:51:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:26 -HTTP METHOD : POST
2019-04-18 18:51:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:26 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7dafaf23, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2dc6c09, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@61566f73, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7dafaf23, com.bootdo.moneyLog.vo.WaterLogVo@2dc6c09, com.bootdo.moneyLog.vo.HeatLogVo@61566f73]
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:26 -<==      Total: 1
2019-04-18 18:51:26 -耗时 : 61
2019-04-18 18:51:26 -返回值 : charts/tableDD
2019-04-18 18:51:27 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:27 -HTTP METHOD : POST
2019-04-18 18:51:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:27 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7f41960a, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@f77878b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5090e0dc, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7f41960a, com.bootdo.moneyLog.vo.WaterLogVo@f77878b, com.bootdo.moneyLog.vo.HeatLogVo@5090e0dc]
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:27 -<==      Total: 1
2019-04-18 18:51:27 -耗时 : 74
2019-04-18 18:51:27 -返回值 : charts/tableDD
2019-04-18 18:51:28 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:28 -HTTP METHOD : POST
2019-04-18 18:51:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:28 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@65e00fc, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@43c5b427, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5f5fedb4, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@65e00fc, com.bootdo.moneyLog.vo.WaterLogVo@43c5b427, com.bootdo.moneyLog.vo.HeatLogVo@5f5fedb4]
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:28 -<==      Total: 1
2019-04-18 18:51:28 -耗时 : 54
2019-04-18 18:51:28 -返回值 : charts/tableDD
2019-04-18 18:51:29 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:29 -HTTP METHOD : POST
2019-04-18 18:51:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:29 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5d0ccdbf, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4f6eae1d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@24849b39, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5d0ccdbf, com.bootdo.moneyLog.vo.WaterLogVo@4f6eae1d, com.bootdo.moneyLog.vo.HeatLogVo@24849b39]
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:29 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:29 -<==      Total: 1
2019-04-18 18:51:29 -耗时 : 143
2019-04-18 18:51:29 -返回值 : charts/tableDD
2019-04-18 18:51:30 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:51:30 -HTTP METHOD : POST
2019-04-18 18:51:30 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:51:30 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@6cb34dfa, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5cdcd7ae, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6d21af5d, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@6cb34dfa, com.bootdo.moneyLog.vo.WaterLogVo@5cdcd7ae, com.bootdo.moneyLog.vo.HeatLogVo@6d21af5d]
2019-04-18 18:51:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:30 -<==      Total: 1
2019-04-18 18:51:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:30 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:51:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:51:31 -<==      Total: 1
2019-04-18 18:51:31 -耗时 : 62
2019-04-18 18:51:31 -返回值 : charts/tableDD
2019-04-18 18:54:33 -请求地址 : http://localhost:8081/index
2019-04-18 18:54:33 -HTTP METHOD : GET
2019-04-18 18:54:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:54:33 -参数 : [{}]
2019-04-18 18:54:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:54:33 -==> Parameters: 1(Long)
2019-04-18 18:54:33 -<==      Total: 49
2019-04-18 18:54:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:54:33 -==> Parameters: 138(Long)
2019-04-18 18:54:33 -<==      Total: 1
2019-04-18 18:54:33 -耗时 : 82
2019-04-18 18:54:33 -返回值 : index_v1
2019-04-18 18:54:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:54:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:54:33.693(Timestamp)
2019-04-18 18:54:33 -<==    Updates: 1
2019-04-18 18:54:33 -请求地址 : http://localhost:8081/main
2019-04-18 18:54:33 -HTTP METHOD : GET
2019-04-18 18:54:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:54:33 -参数 : []
2019-04-18 18:54:33 -耗时 : 0
2019-04-18 18:54:33 -返回值 : main
2019-04-18 18:54:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:54:33 -HTTP METHOD : GET
2019-04-18 18:54:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:54:33 -参数 : []
2019-04-18 18:54:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:54:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:54:34 -请求地址 : http://localhost:8081/main
2019-04-18 18:54:34 -HTTP METHOD : GET
2019-04-18 18:54:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:54:34 -参数 : []
2019-04-18 18:54:34 -耗时 : 0
2019-04-18 18:54:34 -返回值 : main
2019-04-18 18:54:34 -<==      Total: 0
2019-04-18 18:54:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:54:34 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:54:34 -<==      Total: 1
2019-04-18 18:54:34 -耗时 : 173
2019-04-18 18:54:34 -返回值 : com.bootdo.common.utils.PageUtils@7b9a63a
2019-04-18 18:54:36 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:54:36 -HTTP METHOD : GET
2019-04-18 18:54:36 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:54:36 -参数 : []
2019-04-18 18:54:36 -耗时 : 1
2019-04-18 18:54:36 -返回值 : charts/tableDD
2019-04-18 18:54:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:54:41 -HTTP METHOD : GET
2019-04-18 18:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:54:41 -参数 : []
2019-04-18 18:54:41 -耗时 : 0
2019-04-18 18:54:41 -返回值 : system/dept/deptTree
2019-04-18 18:54:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:54:41 -HTTP METHOD : GET
2019-04-18 18:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:54:41 -参数 : []
2019-04-18 18:54:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:54:41 -==> Parameters: 
2019-04-18 18:54:41 -<==      Total: 3
2019-04-18 18:54:41 -耗时 : 4
2019-04-18 18:54:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:54:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:54:43 -HTTP METHOD : POST
2019-04-18 18:54:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:54:43 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@64df5301, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2ba5468d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@269b3cc7, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@64df5301, com.bootdo.moneyLog.vo.WaterLogVo@2ba5468d, com.bootdo.moneyLog.vo.HeatLogVo@269b3cc7]
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -耗时 : 78
2019-04-18 18:54:43 -返回值 : charts/tableDD
2019-04-18 18:54:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:54:43 -HTTP METHOD : POST
2019-04-18 18:54:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:54:43 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@71bcf9d2, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@567ce45, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@a74b5a2, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@71bcf9d2, com.bootdo.moneyLog.vo.WaterLogVo@567ce45, com.bootdo.moneyLog.vo.HeatLogVo@a74b5a2]
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:54:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:54:43 -<==      Total: 1
2019-04-18 18:54:43 -耗时 : 55
2019-04-18 18:54:43 -返回值 : charts/tableDD
2019-04-18 18:56:22 -请求地址 : http://localhost:8081/index
2019-04-18 18:56:22 -HTTP METHOD : GET
2019-04-18 18:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-18 18:56:22 -参数 : [{}]
2019-04-18 18:56:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-18 18:56:22 -==> Parameters: 1(Long)
2019-04-18 18:56:22 -<==      Total: 49
2019-04-18 18:56:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-18 18:56:22 -==> Parameters: 138(Long)
2019-04-18 18:56:22 -<==      Total: 1
2019-04-18 18:56:22 -耗时 : 101
2019-04-18 18:56:22 -返回值 : index_v1
2019-04-18 18:56:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-18 18:56:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 102(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-18 18:56:22.19(Timestamp)
2019-04-18 18:56:22 -<==    Updates: 1
2019-04-18 18:56:22 -请求地址 : http://localhost:8081/main
2019-04-18 18:56:22 -HTTP METHOD : GET
2019-04-18 18:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:56:22 -参数 : []
2019-04-18 18:56:22 -耗时 : 0
2019-04-18 18:56:22 -返回值 : main
2019-04-18 18:56:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-18 18:56:22 -HTTP METHOD : GET
2019-04-18 18:56:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-18 18:56:22 -参数 : []
2019-04-18 18:56:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-18 18:56:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-18 18:56:22 -<==      Total: 0
2019-04-18 18:56:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-18 18:56:22 -==> Parameters: 1(Long), 0(String)
2019-04-18 18:56:22 -<==      Total: 1
2019-04-18 18:56:22 -耗时 : 8
2019-04-18 18:56:22 -返回值 : com.bootdo.common.utils.PageUtils@39a8c284
2019-04-18 18:56:22 -请求地址 : http://localhost:8081/main
2019-04-18 18:56:22 -HTTP METHOD : GET
2019-04-18 18:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-18 18:56:22 -参数 : []
2019-04-18 18:56:22 -耗时 : 5
2019-04-18 18:56:22 -返回值 : main
2019-04-18 18:56:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-18 18:56:27 -==> Parameters: 1(Long)
2019-04-18 18:56:27 -<==      Total: 93
2019-04-18 18:56:27 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-18 18:56:27 -HTTP METHOD : GET
2019-04-18 18:56:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-18 18:56:27 -参数 : []
2019-04-18 18:56:27 -耗时 : 0
2019-04-18 18:56:27 -返回值 : charts/tableDD
2019-04-18 18:56:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-18 18:56:32 -HTTP METHOD : GET
2019-04-18 18:56:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-18 18:56:32 -参数 : []
2019-04-18 18:56:32 -耗时 : 0
2019-04-18 18:56:32 -返回值 : system/dept/deptTree
2019-04-18 18:56:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-18 18:56:32 -HTTP METHOD : GET
2019-04-18 18:56:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-18 18:56:32 -参数 : []
2019-04-18 18:56:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-18 18:56:32 -==> Parameters: 
2019-04-18 18:56:32 -<==      Total: 3
2019-04-18 18:56:32 -耗时 : 3
2019-04-18 18:56:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-18 18:56:34 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:34 -HTTP METHOD : POST
2019-04-18 18:56:34 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:34 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@457a0ba9, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@13c98a5b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@67450032, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@457a0ba9, com.bootdo.moneyLog.vo.WaterLogVo@13c98a5b, com.bootdo.moneyLog.vo.HeatLogVo@67450032]
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:34 -<==      Total: 1
2019-04-18 18:56:34 -耗时 : 69
2019-04-18 18:56:34 -返回值 : charts/tableDD
2019-04-18 18:56:35 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:35 -HTTP METHOD : POST
2019-04-18 18:56:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:35 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4a8ada6b, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4b382438, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@677588b0, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4a8ada6b, com.bootdo.moneyLog.vo.WaterLogVo@4b382438, com.bootdo.moneyLog.vo.HeatLogVo@677588b0]
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -耗时 : 68
2019-04-18 18:56:35 -返回值 : charts/tableDD
2019-04-18 18:56:35 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:35 -HTTP METHOD : POST
2019-04-18 18:56:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:35 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2b947702, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6ca6103f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1bf421b, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2b947702, com.bootdo.moneyLog.vo.WaterLogVo@6ca6103f, com.bootdo.moneyLog.vo.HeatLogVo@1bf421b]
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:35 -<==      Total: 1
2019-04-18 18:56:35 -耗时 : 59
2019-04-18 18:56:35 -返回值 : charts/tableDD
2019-04-18 18:56:36 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:36 -HTTP METHOD : POST
2019-04-18 18:56:36 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:36 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3cef22f8, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2b429c7f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@25ad8595, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3cef22f8, com.bootdo.moneyLog.vo.WaterLogVo@2b429c7f, com.bootdo.moneyLog.vo.HeatLogVo@25ad8595]
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:36 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:36 -<==      Total: 1
2019-04-18 18:56:36 -耗时 : 56
2019-04-18 18:56:36 -返回值 : charts/tableDD
2019-04-18 18:56:37 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:37 -HTTP METHOD : POST
2019-04-18 18:56:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:37 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3c65e6df, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@595b2bbb, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7e24c477, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3c65e6df, com.bootdo.moneyLog.vo.WaterLogVo@595b2bbb, com.bootdo.moneyLog.vo.HeatLogVo@7e24c477]
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:37 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:37 -<==      Total: 1
2019-04-18 18:56:37 -耗时 : 73
2019-04-18 18:56:37 -返回值 : charts/tableDD
2019-04-18 18:56:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:39 -HTTP METHOD : POST
2019-04-18 18:56:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:39 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@62a8ae4a, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@641a1228, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@31e7917a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@62a8ae4a, com.bootdo.moneyLog.vo.WaterLogVo@641a1228, com.bootdo.moneyLog.vo.HeatLogVo@31e7917a]
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:39 -<==      Total: 1
2019-04-18 18:56:39 -耗时 : 67
2019-04-18 18:56:39 -返回值 : charts/tableDD
2019-04-18 18:56:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:40 -HTTP METHOD : POST
2019-04-18 18:56:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:40 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@1b122486, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@fd6d724, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1c975b74, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@1b122486, com.bootdo.moneyLog.vo.WaterLogVo@fd6d724, com.bootdo.moneyLog.vo.HeatLogVo@1c975b74]
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:40 -<==      Total: 1
2019-04-18 18:56:40 -耗时 : 55
2019-04-18 18:56:40 -返回值 : charts/tableDD
2019-04-18 18:56:43 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:43 -HTTP METHOD : POST
2019-04-18 18:56:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:43 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2f2b16d2, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@552bd094, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@22f4ceb9, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2f2b16d2, com.bootdo.moneyLog.vo.WaterLogVo@552bd094, com.bootdo.moneyLog.vo.HeatLogVo@22f4ceb9]
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:43 -<==      Total: 1
2019-04-18 18:56:43 -耗时 : 61
2019-04-18 18:56:43 -返回值 : charts/tableDD
2019-04-18 18:56:44 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:44 -HTTP METHOD : POST
2019-04-18 18:56:44 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:44 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3ba7c49d, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4ccbfaca, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@b4a26c4, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3ba7c49d, com.bootdo.moneyLog.vo.WaterLogVo@4ccbfaca, com.bootdo.moneyLog.vo.HeatLogVo@b4a26c4]
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:44 -<==      Total: 1
2019-04-18 18:56:44 -耗时 : 52
2019-04-18 18:56:44 -返回值 : charts/tableDD
2019-04-18 18:56:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-18 18:56:45 -HTTP METHOD : POST
2019-04-18 18:56:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-18 18:56:45 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@37b90155, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@40289a55, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@56d9272, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@37b90155, com.bootdo.moneyLog.vo.WaterLogVo@40289a55, com.bootdo.moneyLog.vo.HeatLogVo@56d9272]
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-18 18:56:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-18 18:56:45 -<==      Total: 1
2019-04-18 18:56:45 -耗时 : 55
2019-04-18 18:56:45 -返回值 : charts/tableDD
2019-04-18 18:59:59 -请求地址 : http://localhost:8081/water/water
2019-04-18 18:59:59 -HTTP METHOD : GET
2019-04-18 18:59:59 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-04-18 18:59:59 -参数 : []
2019-04-18 18:59:59 -耗时 : 1
2019-04-18 18:59:59 -返回值 : water/water/water
2019-04-18 18:59:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 18:59:59 -HTTP METHOD : GET
2019-04-18 18:59:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 18:59:59 -参数 : [userType]
2019-04-18 18:59:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 18:59:59 -==> Parameters: userType(String)
2019-04-18 18:59:59 -<==      Total: 4
2019-04-18 18:59:59 -耗时 : 5
2019-04-18 18:59:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 19:00:00 -请求地址 : http://localhost:8081/water/water/list
2019-04-18 19:00:00 -HTTP METHOD : GET
2019-04-18 19:00:00 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-18 19:00:00 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-18 19:00:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-18 19:00:00 -==> Parameters: 0(Integer), 3(Integer)
2019-04-18 19:00:00 -<==      Total: 3
2019-04-18 19:00:00 -==>  Preparing: select count(*) from water 
2019-04-18 19:00:00 -==> Parameters: 
2019-04-18 19:00:00 -<==      Total: 1
2019-04-18 19:00:00 -耗时 : 309
2019-04-18 19:00:00 -返回值 : com.bootdo.common.utils.PageUtils@548fbdcc
2019-04-18 19:00:04 -请求地址 : http://localhost:8081/water/water/list
2019-04-18 19:00:04 -HTTP METHOD : GET
2019-04-18 19:00:04 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-18 19:00:04 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-04-18 19:00:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-04-18 19:00:04 -==> Parameters: 0(Integer), 3(Integer)
2019-04-18 19:00:04 -<==      Total: 2
2019-04-18 19:00:04 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-04-18 19:00:04 -==> Parameters: 
2019-04-18 19:00:04 -<==      Total: 1
2019-04-18 19:00:04 -耗时 : 8
2019-04-18 19:00:04 -返回值 : com.bootdo.common.utils.PageUtils@1cb5d2e5
2019-04-18 19:00:46 -请求地址 : http://localhost:8081/print/print
2019-04-18 19:00:46 -HTTP METHOD : GET
2019-04-18 19:00:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-18 19:00:46 -参数 : []
2019-04-18 19:00:46 -耗时 : 0
2019-04-18 19:00:46 -返回值 : print/print/print
2019-04-18 19:00:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-18 19:00:47 -HTTP METHOD : GET
2019-04-18 19:00:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-18 19:00:47 -参数 : [userType]
2019-04-18 19:00:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-18 19:00:47 -==> Parameters: userType(String)
2019-04-18 19:00:47 -<==      Total: 4
2019-04-18 19:00:47 -耗时 : 4
2019-04-18 19:00:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-18 19:00:47 -请求地址 : http://localhost:8081/print/print/list
2019-04-18 19:00:47 -HTTP METHOD : GET
2019-04-18 19:00:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-18 19:00:47 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-18 19:00:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-18 19:00:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-18 19:00:47 -<==      Total: 4
2019-04-18 19:00:47 -==>  Preparing: select count(*) from print 
2019-04-18 19:00:47 -==> Parameters: 
2019-04-18 19:00:47 -<==      Total: 1
2019-04-18 19:00:47 -耗时 : 161
2019-04-18 19:00:47 -返回值 : com.bootdo.common.utils.PageUtils@23da76a6

2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 5500]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12546]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12547]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12548]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12549]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12550]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12551]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12552]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12553]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12554]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12555]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12556]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12557]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12558]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12559]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12560]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12561]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12562]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12563]
2019-05-27 08:27:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 12564]
2019-05-27 08:37:02 -Starting BootdoApplication on PC-201905091110 with PID 22920 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 08:37:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 08:37:02 -The following profiles are active: dev
2019-05-27 08:37:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:37:02 CST 2019]; root of context hierarchy
2019-05-27 08:37:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 08:37:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d2e9d50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6f87cbf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 08:37:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 08:37:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:37:10 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 08:37:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 08:37:10 -Starting service [Tomcat]
2019-05-27 08:37:10 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 08:37:10 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 08:37:10 -Initializing Spring embedded WebApplicationContext
2019-05-27 08:37:10 -Root WebApplicationContext: initialization completed in 7892 ms
2019-05-27 08:37:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 08:37:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 08:37:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 08:37:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 08:37:11 -Filter xssFilter was not registered (disabled)
2019-05-27 08:37:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 08:37:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 08:37:11 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 08:37:11 -Servlet dispatcherServlet mapped to [/]
2019-05-27 08:37:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:37:02 CST 2019]; root of context hierarchy
2019-05-27 08:37:15 -Using default implementation for ThreadExecutor
2019-05-27 08:37:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 08:37:15 -Quartz Scheduler v.2.2.1 created.
2019-05-27 08:37:15 -RAMJobStore initialized.
2019-05-27 08:37:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 08:37:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 08:37:15 -Quartz scheduler version: 2.2.1
2019-05-27 08:37:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@63e4484d
2019-05-27 08:37:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 08:37:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 08:37:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 08:37:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 08:37:22 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 08:37:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 08:37:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 08:37:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 08:37:22 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 08:37:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 08:37:22 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 08:37:22 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 08:37:22 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 08:37:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 08:37:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 08:37:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 08:37:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 08:37:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 08:37:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 08:37:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 08:37:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 08:37:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 08:37:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 08:37:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 08:37:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 08:37:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 08:37:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 08:37:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 08:37:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 08:37:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 08:37:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 08:37:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 08:37:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 08:37:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 08:37:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 08:37:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 08:37:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 08:37:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 08:37:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 08:37:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 08:37:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 08:37:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 08:37:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 08:37:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 08:37:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 08:37:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 08:37:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 08:37:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 08:37:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 08:37:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 08:37:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 08:37:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 08:37:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 08:37:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 08:37:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 08:37:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 08:37:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 08:37:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 08:37:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 08:37:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 08:37:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 08:37:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 08:37:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 08:37:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 08:37:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 08:37:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 08:37:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 08:37:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 08:37:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 08:37:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 08:37:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 08:37:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 08:37:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 08:37:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 08:37:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 08:37:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 08:37:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 08:37:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 08:37:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 08:37:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 08:37:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 08:37:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 08:37:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 08:37:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 08:37:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 08:37:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 08:37:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 08:37:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 08:37:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 08:37:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 08:37:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:37:02 CST 2019]; root of context hierarchy
2019-05-27 08:37:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 08:37:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 08:37:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 08:37:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 08:37:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 08:37:26 -Registering beans for JMX exposure on startup
2019-05-27 08:37:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 08:37:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 08:37:26 -Starting beans in phase 2147483647
2019-05-27 08:37:26 -Context refreshed
2019-05-27 08:37:26 -Found 1 custom documentation plugin(s)
2019-05-27 08:37:26 -Scanning for api listing references
2019-05-27 08:37:27 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_1
2019-05-27 08:37:27 -Generating unique operation named: addUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: editUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: listUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_2
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_3
2019-05-27 08:37:27 -Generating unique operation named: saveUsingPOST_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPOST_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPUT_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 08:37:27 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 08:37:27 -Generating unique operation named: addUsingGET_2
2019-05-27 08:37:27 -Generating unique operation named: editUsingGET_2
2019-05-27 08:37:27 -Generating unique operation named: listUsingGET_2
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_4
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_5
2019-05-27 08:37:27 -Generating unique operation named: saveUsingPOST_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPOST_2
2019-05-27 08:37:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: addUsingGET_3
2019-05-27 08:37:27 -Generating unique operation named: editUsingGET_3
2019-05-27 08:37:27 -Generating unique operation named: listUsingGET_3
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_6
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_7
2019-05-27 08:37:27 -Generating unique operation named: saveUsingPOST_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingGET_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPOST_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPUT_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 08:37:27 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 08:37:27 -Generating unique operation named: addUsingGET_4
2019-05-27 08:37:27 -Generating unique operation named: editUsingGET_4
2019-05-27 08:37:27 -Generating unique operation named: listUsingGET_4
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_8
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_9
2019-05-27 08:37:27 -Generating unique operation named: saveUsingPOST_4
2019-05-27 08:37:27 -Generating unique operation named: updateUsingGET_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPOST_4
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPUT_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 08:37:27 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 08:37:27 -Generating unique operation named: ElecUsingGET_1
2019-05-27 08:37:27 -Generating unique operation named: addUsingGET_5
2019-05-27 08:37:27 -Generating unique operation named: editUsingGET_5
2019-05-27 08:37:27 -Generating unique operation named: listUsingGET_5
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_10
2019-05-27 08:37:27 -Generating unique operation named: removeUsingPOST_11
2019-05-27 08:37:27 -Generating unique operation named: saveUsingPOST_5
2019-05-27 08:37:27 -Generating unique operation named: updateUsingGET_4
2019-05-27 08:37:27 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPOST_5
2019-05-27 08:37:27 -Generating unique operation named: updateUsingPUT_4
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_6
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_6
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_6
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_7
2019-05-27 08:37:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_7
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_12
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_13
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingGET_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPUT_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 08:37:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_7
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_8
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_8
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_14
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_15
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingGET_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPUT_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_8
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_9
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_9
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_16
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_17
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingGET_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPUT_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_9
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_10
2019-05-27 08:37:28 -Generating unique operation named: infoUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingPOST_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingPUT_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 08:37:28 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_10
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_18
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_19
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_10
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_11
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_20
2019-05-27 08:37:28 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_10
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_11
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_12
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_21
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_10
2019-05-27 08:37:28 -Generating unique operation named: treeUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: treeUsingGET_2
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_11
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_11
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_12
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_13
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_22
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_23
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_12
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_12
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_13
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_14
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_24
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_25
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_11
2019-05-27 08:37:28 -Generating unique operation named: updateUsingGET_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_13
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPUT_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_13
2019-05-27 08:37:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_14
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_15
2019-05-27 08:37:28 -Generating unique operation named: printEditUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_26
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_12
2019-05-27 08:37:28 -Generating unique operation named: updateUsingGET_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_14
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPUT_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 08:37:28 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_14
2019-05-27 08:37:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_15
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_16
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_13
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_14
2019-05-27 08:37:28 -Generating unique operation named: updateUsingPOST_15
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_17
2019-05-27 08:37:28 -Generating unique operation named: listUsingHEAD_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingPOST_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingPUT_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingPATCH_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingDELETE_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 08:37:28 -Generating unique operation named: listUsingTRACE_1
2019-05-27 08:37:28 -Generating unique operation named: countDDUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 08:37:28 -Generating unique operation named: addUsingGET_15
2019-05-27 08:37:28 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 08:37:28 -Generating unique operation named: editUsingGET_16
2019-05-27 08:37:28 -Generating unique operation named: listUsingGET_18
2019-05-27 08:37:28 -Generating unique operation named: removeUsingPOST_27
2019-05-27 08:37:28 -Generating unique operation named: saveUsingPOST_15
2019-05-27 08:37:28 -Generating unique operation named: treeUsingGET_3
2019-05-27 08:37:28 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPOST_16
2019-05-27 08:37:29 -Generating unique operation named: addUsingGET_16
2019-05-27 08:37:29 -Generating unique operation named: editUsingGET_17
2019-05-27 08:37:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 08:37:29 -Generating unique operation named: listUsingGET_19
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_28
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_29
2019-05-27 08:37:29 -Generating unique operation named: saveUsingPOST_16
2019-05-27 08:37:29 -Generating unique operation named: updateUsingGET_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPOST_17
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPUT_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 08:37:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 08:37:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 08:37:29 -Generating unique operation named: addUsingGET_17
2019-05-27 08:37:29 -Generating unique operation named: editUsingGET_18
2019-05-27 08:37:29 -Generating unique operation named: listUsingGET_20
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_30
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_31
2019-05-27 08:37:29 -Generating unique operation named: saveUsingPOST_17
2019-05-27 08:37:29 -Generating unique operation named: updateUsingGET_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPOST_18
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPUT_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 08:37:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 08:37:29 -Generating unique operation named: addUsingGET_18
2019-05-27 08:37:29 -Generating unique operation named: editUsingGET_19
2019-05-27 08:37:29 -Generating unique operation named: listUsingGET_21
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_32
2019-05-27 08:37:29 -Generating unique operation named: removeUsingPOST_33
2019-05-27 08:37:29 -Generating unique operation named: saveUsingPOST_18
2019-05-27 08:37:29 -Generating unique operation named: updateUsingGET_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPOST_19
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPUT_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 08:37:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 08:37:29 -Starting Quartz Scheduler now
2019-05-27 08:37:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 08:37:29 -Starting...
2019-05-27 08:37:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 08:37:29 -Started.
2019-05-27 08:37:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 08:37:29 -Using a shared selector for servlet write/read
2019-05-27 08:37:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 08:37:29 -Started BootdoApplication in 27.994 seconds (JVM running for 28.757)
2019-05-27 08:37:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 08:37:29 -==> Parameters: 
2019-05-27 08:37:30 -<==      Total: 1
2019-05-27 08:38:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 08:43:22 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 08:43:22 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 08:43:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-05-27 08:43:23 -Enabling session validation scheduler...
2019-05-27 08:43:23 -请求地址 : http://localhost:8081/login;JSESSIONID=397f29e6-43e3-4c6f-b917-08687887c1bf
2019-05-27 08:43:23 -HTTP METHOD : GET
2019-05-27 08:43:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 08:43:23 -参数 : [{}]
2019-05-27 08:43:23 -耗时 : 3
2019-05-27 08:43:23 -返回值 : login
2019-05-27 08:43:24 -请求地址 : http://localhost:8081/getVerify
2019-05-27 08:43:24 -HTTP METHOD : GET
2019-05-27 08:43:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 08:43:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@65aed57d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@61915d10]
2019-05-27 08:43:32 -1267
2019-05-27 08:43:32 -耗时 : 8251
2019-05-27 08:43:32 -返回值 : null
2019-05-27 08:43:33 -请求地址 : http://localhost:8081/login
2019-05-27 08:43:33 -HTTP METHOD : GET
2019-05-27 08:43:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 08:43:33 -参数 : [{}]
2019-05-27 08:43:33 -耗时 : 0
2019-05-27 08:43:33 -返回值 : login
2019-05-27 08:44:37 -请求地址 : http://localhost:8081/login
2019-05-27 08:44:37 -HTTP METHOD : POST
2019-05-27 08:44:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 08:44:37 -参数 : [admin, 111111, 1267, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4afb2b13]
2019-05-27 08:44:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 08:44:37 -==> Parameters: admin(String)
2019-05-27 08:44:37 -<==      Total: 1
2019-05-27 08:44:37 -耗时 : 311
2019-05-27 08:44:37 -返回值 : {msg=操作成功, code=0}
2019-05-27 08:44:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 08:44:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 08:44:38 -==> Parameters: 1(Long), admin(String), 登录(String), 311(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 08:44:38.185(Timestamp)
2019-05-27 08:44:38 -<==    Updates: 1
2019-05-27 08:44:38 -请求地址 : http://localhost:8081/index
2019-05-27 08:44:38 -HTTP METHOD : GET
2019-05-27 08:44:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 08:44:38 -参数 : [{}]
2019-05-27 08:44:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 08:44:38 -==> Parameters: 1(Long)
2019-05-27 08:44:38 -<==      Total: 50
2019-05-27 08:44:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 08:44:38 -==> Parameters: 138(Long)
2019-05-27 08:44:38 -<==      Total: 1
2019-05-27 08:44:38 -耗时 : 332
2019-05-27 08:44:38 -返回值 : index_v1
2019-05-27 08:44:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 08:44:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 332(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 08:44:39.021(Timestamp)
2019-05-27 08:44:39 -<==    Updates: 1
2019-05-27 08:44:39 -请求地址 : http://localhost:8081/main
2019-05-27 08:44:39 -HTTP METHOD : GET
2019-05-27 08:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 08:44:39 -参数 : []
2019-05-27 08:44:39 -耗时 : 0
2019-05-27 08:44:39 -返回值 : main
2019-05-27 08:44:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 08:44:40 -HTTP METHOD : GET
2019-05-27 08:44:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 08:44:40 -参数 : []
2019-05-27 08:44:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 08:44:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 08:44:40 -请求地址 : http://localhost:8081/main
2019-05-27 08:44:40 -HTTP METHOD : GET
2019-05-27 08:44:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 08:44:40 -参数 : []
2019-05-27 08:44:40 -耗时 : 1
2019-05-27 08:44:40 -返回值 : main
2019-05-27 08:44:41 -<==      Total: 0
2019-05-27 08:44:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 08:44:41 -==> Parameters: 1(Long), 0(String)
2019-05-27 08:44:41 -<==      Total: 1
2019-05-27 08:44:41 -耗时 : 1072
2019-05-27 08:44:41 -返回值 : com.bootdo.common.utils.PageUtils@46878c97
2019-05-27 08:46:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 08:46:01 -==> Parameters: 1(Long)
2019-05-27 08:46:01 -<==      Total: 94
2019-05-27 08:46:01 -请求地址 : http://localhost:8081/elec/elec
2019-05-27 08:46:01 -HTTP METHOD : GET
2019-05-27 08:46:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-27 08:46:01 -参数 : []
2019-05-27 08:46:01 -耗时 : 1
2019-05-27 08:46:01 -返回值 : elec/elec/elec
2019-05-27 08:46:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 08:46:02 -HTTP METHOD : GET
2019-05-27 08:46:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 08:46:02 -参数 : [userType]
2019-05-27 08:46:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-27 08:46:02 -HTTP METHOD : GET
2019-05-27 08:46:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 08:46:02 -参数 : [elecType]
2019-05-27 08:46:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 08:46:02 -==> Parameters: elecType(String)
2019-05-27 08:46:02 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-27 08:46:02 -HTTP METHOD : GET
2019-05-27 08:46:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-27 08:46:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6fe2bb61]
2019-05-27 08:46:02 -<==      Total: 11
2019-05-27 08:46:02 -耗时 : 244
2019-05-27 08:46:02 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 08:46:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 08:46:02 -==> Parameters: userType(String)
2019-05-27 08:46:02 -<==      Total: 4
2019-05-27 08:46:02 -耗时 : 251
2019-05-27 08:46:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 08:46:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-27 08:46:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-27 08:46:03 -<==      Total: 10
2019-05-27 08:46:03 -==>  Preparing: select count(*) from elec 
2019-05-27 08:46:03 -==> Parameters: 
2019-05-27 08:46:03 -<==      Total: 1
2019-05-27 08:46:03 -耗时 : 318
2019-05-27 08:46:03 -返回值 : com.bootdo.common.utils.PageUtils@58fa8f7a
2019-05-27 08:46:52 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 08:46:52 -HTTP METHOD : GET
2019-05-27 08:46:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 08:46:52 -参数 : []
2019-05-27 08:46:52 -耗时 : 0
2019-05-27 08:46:52 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 08:56:08 -请求地址 : http://localhost:8081/index
2019-05-27 08:56:08 -HTTP METHOD : GET
2019-05-27 08:56:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 08:56:08 -参数 : [{}]
2019-05-27 08:56:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 08:56:08 -==> Parameters: 1(Long)
2019-05-27 08:56:08 -<==      Total: 50
2019-05-27 08:56:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 08:56:08 -==> Parameters: 138(Long)
2019-05-27 08:56:08 -<==      Total: 1
2019-05-27 08:56:08 -耗时 : 31
2019-05-27 08:56:08 -返回值 : index_v1
2019-05-27 08:56:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 08:56:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 08:56:08.209(Timestamp)
2019-05-27 08:56:08 -<==    Updates: 1
2019-05-27 08:56:10 -请求地址 : http://localhost:8081/main
2019-05-27 08:56:10 -HTTP METHOD : GET
2019-05-27 08:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 08:56:10 -参数 : []
2019-05-27 08:56:10 -耗时 : 20
2019-05-27 08:56:10 -返回值 : main
2019-05-27 08:56:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 08:56:10 -HTTP METHOD : GET
2019-05-27 08:56:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 08:56:10 -参数 : []
2019-05-27 08:56:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 08:56:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 08:56:10 -<==      Total: 0
2019-05-27 08:56:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 08:56:10 -==> Parameters: 1(Long), 0(String)
2019-05-27 08:56:10 -<==      Total: 1
2019-05-27 08:56:10 -耗时 : 9
2019-05-27 08:56:10 -返回值 : com.bootdo.common.utils.PageUtils@253f05f5
2019-05-27 08:56:10 -请求地址 : http://localhost:8081/main
2019-05-27 08:56:10 -HTTP METHOD : GET
2019-05-27 08:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 08:56:10 -参数 : []
2019-05-27 08:56:10 -耗时 : 1
2019-05-27 08:56:10 -返回值 : main
2019-05-27 08:56:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 08:56:18 -==> Parameters: 1(Long)
2019-05-27 08:56:18 -<==      Total: 94
2019-05-27 08:56:18 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 08:56:18 -HTTP METHOD : GET
2019-05-27 08:56:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 08:56:18 -参数 : []
2019-05-27 08:56:18 -耗时 : 0
2019-05-27 08:56:18 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 08:59:39 -Starting BootdoApplication on PC-201905091110 with PID 14300 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 08:59:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 08:59:39 -The following profiles are active: dev
2019-05-27 08:59:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:59:40 CST 2019]; root of context hierarchy
2019-05-27 08:59:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 08:59:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cce5540c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bf3e82b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 08:59:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 08:59:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 08:59:50 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 08:59:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 08:59:50 -Starting service [Tomcat]
2019-05-27 08:59:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 08:59:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 08:59:51 -Initializing Spring embedded WebApplicationContext
2019-05-27 08:59:51 -Root WebApplicationContext: initialization completed in 11187 ms
2019-05-27 08:59:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 08:59:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 08:59:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 08:59:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 08:59:52 -Filter xssFilter was not registered (disabled)
2019-05-27 08:59:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 08:59:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 08:59:52 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 08:59:52 -Servlet dispatcherServlet mapped to [/]
2019-05-27 08:59:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:59:40 CST 2019]; root of context hierarchy
2019-05-27 09:00:00 -Using default implementation for ThreadExecutor
2019-05-27 09:00:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 09:00:00 -Quartz Scheduler v.2.2.1 created.
2019-05-27 09:00:00 -RAMJobStore initialized.
2019-05-27 09:00:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 09:00:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 09:00:00 -Quartz scheduler version: 2.2.1
2019-05-27 09:00:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@62735b13
2019-05-27 09:00:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 09:00:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 09:00:06 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 09:00:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 09:00:06 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 09:00:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 09:00:06 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 09:00:06 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 09:00:06 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 09:00:06 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 09:00:06 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 09:00:06 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 09:00:06 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 09:00:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 09:00:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 09:00:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 09:00:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 09:00:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 09:00:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 09:00:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 09:00:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 09:00:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 09:00:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 09:00:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 09:00:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 09:00:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 09:00:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 09:00:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 09:00:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 09:00:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 09:00:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 09:00:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 09:00:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 09:00:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:00:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 09:00:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 09:00:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 09:00:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 09:00:06 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 09:00:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 09:00:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 09:00:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 09:00:06 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:00:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 09:00:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 09:00:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 09:00:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 09:00:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 09:00:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 09:00:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 09:00:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 09:00:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 09:00:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 09:00:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 09:00:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 09:00:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 09:00:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 09:00:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 09:00:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 09:00:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 09:00:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 09:00:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 09:00:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 09:00:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 09:00:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 09:00:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 09:00:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 09:00:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 09:00:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 09:00:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 09:00:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 09:00:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 09:00:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 09:00:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 09:00:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 09:00:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 09:00:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 09:00:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 09:00:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 09:00:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 09:00:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 09:00:07 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 09:00:07 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 09:00:07 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 09:00:07 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 09:00:07 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 09:00:07 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 09:00:07 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:00:07 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 09:00:07 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 09:00:07 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 09:00:07 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:00:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:00:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 09:00:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 09:00:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 09:00:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 09:00:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 09:00:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 09:00:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:00:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 08:59:40 CST 2019]; root of context hierarchy
2019-05-27 09:00:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:00:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:00:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:00:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 09:00:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 09:00:11 -Registering beans for JMX exposure on startup
2019-05-27 09:00:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 09:00:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 09:00:11 -Starting beans in phase 2147483647
2019-05-27 09:00:11 -Context refreshed
2019-05-27 09:00:12 -Found 1 custom documentation plugin(s)
2019-05-27 09:00:12 -Scanning for api listing references
2019-05-27 09:00:13 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_1
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_2
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_3
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_2
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_2
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_2
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_4
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_5
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_2
2019-05-27 09:00:13 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_3
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_3
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_3
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_6
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_7
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_4
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_4
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_4
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_8
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_9
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 09:00:13 -Generating unique operation named: ElecUsingGET_1
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_5
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_5
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_5
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_10
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_11
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_6
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_6
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_6
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_7
2019-05-27 09:00:13 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_7
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_12
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_13
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_7
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 09:00:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_7
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_8
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_8
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_14
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_15
2019-05-27 09:00:13 -Generating unique operation named: saveUsingPOST_7
2019-05-27 09:00:13 -Generating unique operation named: updateUsingGET_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPOST_8
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPUT_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 09:00:13 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 09:00:13 -Generating unique operation named: addUsingGET_8
2019-05-27 09:00:13 -Generating unique operation named: editUsingGET_9
2019-05-27 09:00:13 -Generating unique operation named: listUsingGET_9
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_16
2019-05-27 09:00:13 -Generating unique operation named: removeUsingPOST_17
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingGET_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPUT_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 09:00:14 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_9
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_10
2019-05-27 09:00:14 -Generating unique operation named: infoUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingPOST_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingPUT_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 09:00:14 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_10
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_18
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_19
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_10
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_11
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_20
2019-05-27 09:00:14 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_10
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_11
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_12
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_21
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_10
2019-05-27 09:00:14 -Generating unique operation named: treeUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: treeUsingGET_2
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_11
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_11
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_12
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_13
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_22
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_23
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_12
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_12
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_13
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_14
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_24
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_25
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_11
2019-05-27 09:00:14 -Generating unique operation named: updateUsingGET_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_13
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPUT_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 09:00:14 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_13
2019-05-27 09:00:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_14
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_15
2019-05-27 09:00:14 -Generating unique operation named: printEditUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_26
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_12
2019-05-27 09:00:14 -Generating unique operation named: updateUsingGET_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_14
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPUT_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 09:00:14 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_14
2019-05-27 09:00:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_15
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_16
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_13
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_14
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_15
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_17
2019-05-27 09:00:14 -Generating unique operation named: listUsingHEAD_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingPOST_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingPUT_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingPATCH_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingDELETE_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 09:00:14 -Generating unique operation named: listUsingTRACE_1
2019-05-27 09:00:14 -Generating unique operation named: countDDUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_15
2019-05-27 09:00:14 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_16
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_18
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_27
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_15
2019-05-27 09:00:14 -Generating unique operation named: treeUsingGET_3
2019-05-27 09:00:14 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_16
2019-05-27 09:00:14 -Generating unique operation named: addUsingGET_16
2019-05-27 09:00:14 -Generating unique operation named: editUsingGET_17
2019-05-27 09:00:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 09:00:14 -Generating unique operation named: listUsingGET_19
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_28
2019-05-27 09:00:14 -Generating unique operation named: removeUsingPOST_29
2019-05-27 09:00:14 -Generating unique operation named: saveUsingPOST_16
2019-05-27 09:00:14 -Generating unique operation named: updateUsingGET_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPOST_17
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPUT_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 09:00:14 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 09:00:14 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 09:00:15 -Generating unique operation named: addUsingGET_17
2019-05-27 09:00:15 -Generating unique operation named: editUsingGET_18
2019-05-27 09:00:15 -Generating unique operation named: listUsingGET_20
2019-05-27 09:00:15 -Generating unique operation named: removeUsingPOST_30
2019-05-27 09:00:15 -Generating unique operation named: removeUsingPOST_31
2019-05-27 09:00:15 -Generating unique operation named: saveUsingPOST_17
2019-05-27 09:00:15 -Generating unique operation named: updateUsingGET_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPOST_18
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPUT_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 09:00:15 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 09:00:15 -Generating unique operation named: addUsingGET_18
2019-05-27 09:00:15 -Generating unique operation named: editUsingGET_19
2019-05-27 09:00:15 -Generating unique operation named: listUsingGET_21
2019-05-27 09:00:15 -Generating unique operation named: removeUsingPOST_32
2019-05-27 09:00:15 -Generating unique operation named: removeUsingPOST_33
2019-05-27 09:00:15 -Generating unique operation named: saveUsingPOST_18
2019-05-27 09:00:15 -Generating unique operation named: updateUsingGET_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPOST_19
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPUT_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 09:00:15 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 09:00:15 -Starting Quartz Scheduler now
2019-05-27 09:00:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 09:00:15 -Starting...
2019-05-27 09:00:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 09:00:15 -Started.
2019-05-27 09:00:15 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 09:00:16 -Using a shared selector for servlet write/read
2019-05-27 09:00:16 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 09:00:16 -Started BootdoApplication in 37.986 seconds (JVM running for 38.833)
2019-05-27 09:00:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 09:00:17 -==> Parameters: 
2019-05-27 09:00:18 -<==      Total: 1
2019-05-27 09:01:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 09:01:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 09:01:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-05-27 09:01:07 -Enabling session validation scheduler...
2019-05-27 09:01:07 -请求地址 : http://localhost:8081/login;JSESSIONID=d0fafd17-fb81-4fd8-a26a-421c30dbaa10
2019-05-27 09:01:07 -HTTP METHOD : GET
2019-05-27 09:01:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 09:01:07 -参数 : [{}]
2019-05-27 09:01:07 -耗时 : 4
2019-05-27 09:01:07 -返回值 : login
2019-05-27 09:01:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 09:01:10 -请求地址 : http://localhost:8081/getVerify
2019-05-27 09:01:10 -HTTP METHOD : GET
2019-05-27 09:01:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 09:01:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38f99c9e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@32f3a4a1]
2019-05-27 09:01:17 -0717
2019-05-27 09:01:17 -耗时 : 7736
2019-05-27 09:01:17 -返回值 : null
2019-05-27 09:01:23 -请求地址 : http://localhost:8081/login
2019-05-27 09:01:23 -HTTP METHOD : POST
2019-05-27 09:01:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 09:01:23 -参数 : [admin, 111111, 0717, org.apache.shiro.web.servlet.ShiroHttpServletRequest@17bd3bbe]
2019-05-27 09:01:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 09:01:23 -==> Parameters: admin(String)
2019-05-27 09:01:23 -<==      Total: 1
2019-05-27 09:01:23 -耗时 : 433
2019-05-27 09:01:23 -返回值 : {msg=操作成功, code=0}
2019-05-27 09:01:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 09:01:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:01:23 -==> Parameters: 1(Long), admin(String), 登录(String), 434(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 09:01:23.772(Timestamp)
2019-05-27 09:01:23 -请求地址 : http://localhost:8081/index
2019-05-27 09:01:23 -HTTP METHOD : GET
2019-05-27 09:01:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:01:23 -参数 : [{}]
2019-05-27 09:01:24 -<==    Updates: 1
2019-05-27 09:01:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:01:25 -==> Parameters: 1(Long)
2019-05-27 09:01:25 -<==      Total: 50
2019-05-27 09:01:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:01:26 -==> Parameters: 138(Long)
2019-05-27 09:01:26 -<==      Total: 1
2019-05-27 09:01:26 -耗时 : 2274
2019-05-27 09:01:26 -返回值 : index_v1
2019-05-27 09:01:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:01:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2275(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:01:26.617(Timestamp)
2019-05-27 09:01:26 -<==    Updates: 1
2019-05-27 09:01:26 -请求地址 : http://localhost:8081/main
2019-05-27 09:01:26 -HTTP METHOD : GET
2019-05-27 09:01:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:01:26 -参数 : []
2019-05-27 09:01:26 -耗时 : 1
2019-05-27 09:01:26 -返回值 : main
2019-05-27 09:01:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:01:27 -HTTP METHOD : GET
2019-05-27 09:01:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:01:27 -参数 : []
2019-05-27 09:01:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:01:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:01:27 -请求地址 : http://localhost:8081/main
2019-05-27 09:01:27 -HTTP METHOD : GET
2019-05-27 09:01:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:01:27 -参数 : []
2019-05-27 09:01:27 -耗时 : 0
2019-05-27 09:01:27 -返回值 : main
2019-05-27 09:01:27 -<==      Total: 0
2019-05-27 09:01:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:01:27 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:01:27 -<==      Total: 1
2019-05-27 09:01:27 -耗时 : 154
2019-05-27 09:01:27 -返回值 : com.bootdo.common.utils.PageUtils@61c43ce2
2019-05-27 09:01:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:01:32 -==> Parameters: 1(Long)
2019-05-27 09:01:32 -<==      Total: 94
2019-05-27 09:01:32 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 09:01:32 -HTTP METHOD : GET
2019-05-27 09:01:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 09:01:32 -参数 : []
2019-05-27 09:01:32 -耗时 : 1
2019-05-27 09:01:32 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 09:01:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 09:01:58 -HTTP METHOD : GET
2019-05-27 09:01:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 09:01:58 -参数 : []
2019-05-27 09:01:58 -耗时 : 0
2019-05-27 09:01:58 -返回值 : system/dept/deptTree
2019-05-27 09:01:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 09:01:59 -HTTP METHOD : GET
2019-05-27 09:01:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 09:01:59 -参数 : []
2019-05-27 09:01:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 09:01:59 -==> Parameters: 
2019-05-27 09:01:59 -<==      Total: 3
2019-05-27 09:01:59 -耗时 : 372
2019-05-27 09:01:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 09:02:44 -请求地址 : http://localhost:8081/login;JSESSIONID=0593a61f-30de-42ad-96c8-6ce2a89d2740
2019-05-27 09:02:44 -HTTP METHOD : GET
2019-05-27 09:02:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 09:02:44 -参数 : [{}]
2019-05-27 09:02:44 -耗时 : 0
2019-05-27 09:02:44 -返回值 : login
2019-05-27 09:03:16 -请求地址 : http://localhost:8081/login
2019-05-27 09:03:16 -HTTP METHOD : GET
2019-05-27 09:03:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 09:03:16 -参数 : [{}]
2019-05-27 09:03:16 -耗时 : 1
2019-05-27 09:03:16 -返回值 : login
2019-05-27 09:03:16 -请求地址 : http://localhost:8081/getVerify
2019-05-27 09:03:16 -HTTP METHOD : GET
2019-05-27 09:03:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 09:03:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6c97a625, org.apache.shiro.web.servlet.ShiroHttpServletResponse@22747f3a]
2019-05-27 09:03:16 -4544
2019-05-27 09:03:16 -耗时 : 21
2019-05-27 09:03:16 -返回值 : null
2019-05-27 09:03:16 -请求地址 : http://localhost:8081/login
2019-05-27 09:03:16 -HTTP METHOD : GET
2019-05-27 09:03:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 09:03:16 -参数 : [{}]
2019-05-27 09:03:16 -耗时 : 0
2019-05-27 09:03:16 -返回值 : login
2019-05-27 09:03:21 -请求地址 : http://localhost:8081/login
2019-05-27 09:03:21 -HTTP METHOD : POST
2019-05-27 09:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 09:03:21 -参数 : [admin, 111111, 4544, org.apache.shiro.web.servlet.ShiroHttpServletRequest@b6c14ce]
2019-05-27 09:03:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 09:03:21 -==> Parameters: admin(String)
2019-05-27 09:03:21 -<==      Total: 1
2019-05-27 09:03:21 -耗时 : 7
2019-05-27 09:03:21 -返回值 : {msg=操作成功, code=0}
2019-05-27 09:03:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:03:21 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 09:03:21.101(Timestamp)
2019-05-27 09:03:21 -请求地址 : http://localhost:8081/index
2019-05-27 09:03:21 -HTTP METHOD : GET
2019-05-27 09:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:03:21 -参数 : [{}]
2019-05-27 09:03:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:03:21 -==> Parameters: 1(Long)
2019-05-27 09:03:21 -<==    Updates: 1
2019-05-27 09:03:23 -<==      Total: 50
2019-05-27 09:03:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:03:23 -==> Parameters: 138(Long)
2019-05-27 09:03:23 -<==      Total: 1
2019-05-27 09:03:23 -耗时 : 2157
2019-05-27 09:03:23 -返回值 : index_v1
2019-05-27 09:03:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:03:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2159(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:03:23.302(Timestamp)
2019-05-27 09:03:23 -请求地址 : http://localhost:8081/main
2019-05-27 09:03:23 -HTTP METHOD : GET
2019-05-27 09:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:03:23 -参数 : []
2019-05-27 09:03:23 -耗时 : 0
2019-05-27 09:03:23 -返回值 : main
2019-05-27 09:03:24 -<==    Updates: 1
2019-05-27 09:03:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:03:24 -HTTP METHOD : GET
2019-05-27 09:03:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:03:24 -参数 : []
2019-05-27 09:03:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:03:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:03:25 -<==      Total: 0
2019-05-27 09:03:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:03:25 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:03:25 -<==      Total: 1
2019-05-27 09:03:25 -耗时 : 429
2019-05-27 09:03:25 -返回值 : com.bootdo.common.utils.PageUtils@3695b7b7
2019-05-27 09:03:26 -请求地址 : http://localhost:8081/main
2019-05-27 09:03:26 -HTTP METHOD : GET
2019-05-27 09:03:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:03:26 -参数 : []
2019-05-27 09:03:26 -耗时 : 0
2019-05-27 09:03:26 -返回值 : main
2019-05-27 09:03:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:03:32 -==> Parameters: 1(Long)
2019-05-27 09:03:32 -<==      Total: 94
2019-05-27 09:03:32 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 09:03:32 -HTTP METHOD : GET
2019-05-27 09:03:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 09:03:32 -参数 : []
2019-05-27 09:03:32 -耗时 : 0
2019-05-27 09:03:32 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 09:03:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 09:03:44 -HTTP METHOD : GET
2019-05-27 09:03:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 09:03:44 -参数 : []
2019-05-27 09:03:44 -耗时 : 1
2019-05-27 09:03:44 -返回值 : system/dept/deptTree
2019-05-27 09:03:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 09:03:45 -HTTP METHOD : GET
2019-05-27 09:03:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 09:03:45 -参数 : []
2019-05-27 09:03:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 09:03:45 -==> Parameters: 
2019-05-27 09:03:45 -<==      Total: 3
2019-05-27 09:03:45 -耗时 : 26
2019-05-27 09:03:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 09:06:05 -请求地址 : http://localhost:8081/index
2019-05-27 09:06:05 -HTTP METHOD : GET
2019-05-27 09:06:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:06:05 -参数 : [{}]
2019-05-27 09:06:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:06:05 -==> Parameters: 1(Long)
2019-05-27 09:06:06 -<==      Total: 50
2019-05-27 09:06:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:06:06 -==> Parameters: 138(Long)
2019-05-27 09:06:06 -<==      Total: 1
2019-05-27 09:06:06 -耗时 : 233
2019-05-27 09:06:06 -返回值 : index_v1
2019-05-27 09:06:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:06:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 233(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:06:06.215(Timestamp)
2019-05-27 09:06:06 -请求地址 : http://localhost:8081/main
2019-05-27 09:06:06 -HTTP METHOD : GET
2019-05-27 09:06:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:06:06 -参数 : []
2019-05-27 09:06:06 -耗时 : 1
2019-05-27 09:06:06 -返回值 : main
2019-05-27 09:06:07 -<==    Updates: 1
2019-05-27 09:06:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:06:08 -HTTP METHOD : GET
2019-05-27 09:06:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:06:08 -参数 : []
2019-05-27 09:06:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:06:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:06:08 -<==      Total: 0
2019-05-27 09:06:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:06:08 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:06:08 -<==      Total: 1
2019-05-27 09:06:08 -耗时 : 6
2019-05-27 09:06:08 -返回值 : com.bootdo.common.utils.PageUtils@1eafd166
2019-05-27 09:06:08 -请求地址 : http://localhost:8081/main
2019-05-27 09:06:08 -HTTP METHOD : GET
2019-05-27 09:06:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:06:08 -参数 : []
2019-05-27 09:06:08 -耗时 : 1
2019-05-27 09:06:08 -返回值 : main
2019-05-27 09:06:18 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 09:06:18 -HTTP METHOD : GET
2019-05-27 09:06:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 09:06:18 -参数 : []
2019-05-27 09:06:18 -耗时 : 1
2019-05-27 09:06:18 -返回值 : elec/elecInto/elecInto
2019-05-27 09:06:20 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 09:06:20 -HTTP METHOD : GET
2019-05-27 09:06:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 09:06:20 -参数 : []
2019-05-27 09:06:20 -耗时 : 0
2019-05-27 09:06:20 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 09:06:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 09:06:36 -HTTP METHOD : GET
2019-05-27 09:06:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 09:06:36 -参数 : []
2019-05-27 09:06:36 -耗时 : 0
2019-05-27 09:06:36 -返回值 : system/dept/deptTree
2019-05-27 09:06:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 09:06:36 -HTTP METHOD : GET
2019-05-27 09:06:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 09:06:36 -参数 : []
2019-05-27 09:06:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 09:06:36 -==> Parameters: 
2019-05-27 09:06:36 -<==      Total: 3
2019-05-27 09:06:36 -耗时 : 3
2019-05-27 09:06:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 09:06:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:06:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:06:38.625(Timestamp)
2019-05-27 09:06:38 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:06:38 -<==    Updates: 1
2019-05-27 09:06:47 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:10 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:08:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:08:10.318(Timestamp)
2019-05-27 09:08:10 -<==    Updates: 1
2019-05-27 09:08:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:08:12 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:08:12.356(Timestamp)
2019-05-27 09:08:12 -<==    Updates: 1
2019-05-27 09:08:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:08:13 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:08:13.788(Timestamp)
2019-05-27 09:08:14 -<==    Updates: 1
2019-05-27 09:08:15 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:08:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:08:15.125(Timestamp)
2019-05-27 09:08:15 -<==    Updates: 1
2019-05-27 09:08:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:08:16 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:08:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:08:16.757(Timestamp)
2019-05-27 09:08:16 -<==    Updates: 1
2019-05-27 09:17:49 -请求地址 : http://localhost:8081/index
2019-05-27 09:17:49 -HTTP METHOD : GET
2019-05-27 09:17:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:17:49 -参数 : [{}]
2019-05-27 09:17:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:17:50 -==> Parameters: 1(Long)
2019-05-27 09:17:50 -<==      Total: 50
2019-05-27 09:17:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:17:50 -==> Parameters: 138(Long)
2019-05-27 09:17:50 -<==      Total: 1
2019-05-27 09:17:50 -耗时 : 136
2019-05-27 09:17:50 -返回值 : index_v1
2019-05-27 09:17:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:17:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 136(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:17:50.137(Timestamp)
2019-05-27 09:17:50 -<==    Updates: 1
2019-05-27 09:17:50 -请求地址 : http://localhost:8081/main
2019-05-27 09:17:50 -HTTP METHOD : GET
2019-05-27 09:17:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:17:50 -参数 : []
2019-05-27 09:17:50 -耗时 : 0
2019-05-27 09:17:50 -返回值 : main
2019-05-27 09:17:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:17:50 -HTTP METHOD : GET
2019-05-27 09:17:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:17:50 -参数 : []
2019-05-27 09:17:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:17:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:17:50 -<==      Total: 0
2019-05-27 09:17:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:17:50 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:17:50 -请求地址 : http://localhost:8081/main
2019-05-27 09:17:50 -HTTP METHOD : GET
2019-05-27 09:17:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:17:50 -参数 : []
2019-05-27 09:17:50 -耗时 : 1
2019-05-27 09:17:50 -返回值 : main
2019-05-27 09:17:50 -<==      Total: 1
2019-05-27 09:17:50 -耗时 : 71
2019-05-27 09:17:50 -返回值 : com.bootdo.common.utils.PageUtils@c78bfae
2019-05-27 09:17:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:17:53 -==> Parameters: 1(Long)
2019-05-27 09:17:53 -<==      Total: 94
2019-05-27 09:17:53 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 09:17:53 -HTTP METHOD : GET
2019-05-27 09:17:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 09:17:53 -参数 : []
2019-05-27 09:17:53 -耗时 : 0
2019-05-27 09:17:53 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 09:17:55 -请求地址 : http://localhost:8081/file/downImport/elecUser
2019-05-27 09:17:55 -HTTP METHOD : GET
2019-05-27 09:17:55 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-27 09:17:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@275a9de3, elecUser]
2019-05-27 09:17:55 -耗时 : 209
2019-05-27 09:17:55 -返回值 : null
2019-05-27 09:18:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 09:18:16 -HTTP METHOD : GET
2019-05-27 09:18:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 09:18:16 -参数 : []
2019-05-27 09:18:16 -耗时 : 0
2019-05-27 09:18:16 -返回值 : system/dept/deptTree
2019-05-27 09:18:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 09:18:16 -HTTP METHOD : GET
2019-05-27 09:18:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 09:18:16 -参数 : []
2019-05-27 09:18:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 09:18:16 -==> Parameters: 
2019-05-27 09:18:16 -<==      Total: 3
2019-05-27 09:18:16 -耗时 : 4
2019-05-27 09:18:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 09:18:18 -请求地址 : http://localhost:8081/elec/elecUpLoad/exprotElecExcel
2019-05-27 09:18:18 -HTTP METHOD : GET
2019-05-27 09:18:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel
2019-05-27 09:18:18 -参数 : [com.bootdo.elec.vo.ElecVo@29497a77, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48cc48a4]
2019-05-27 09:18:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? 
2019-05-27 09:18:18 -==> Parameters: 2019-03(String), 2(String)
2019-05-27 09:18:18 -<==      Total: 8
2019-05-27 09:18:20 -耗时 : 1758
2019-05-27 09:18:20 -返回值 : null
2019-05-27 09:20:52 -Starting BootdoApplication on PC-201905091110 with PID 13648 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 09:20:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 09:20:52 -The following profiles are active: dev
2019-05-27 09:20:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 09:20:52 CST 2019]; root of context hierarchy
2019-05-27 09:20:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 09:20:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd9bea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:20:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fe32ed50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:02 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 09:21:03 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 09:21:03 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 09:21:04 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 09:21:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 09:21:05 -Starting service [Tomcat]
2019-05-27 09:21:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 09:21:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 09:21:06 -Initializing Spring embedded WebApplicationContext
2019-05-27 09:21:06 -Root WebApplicationContext: initialization completed in 13459 ms
2019-05-27 09:21:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 09:21:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 09:21:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 09:21:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 09:21:07 -Filter xssFilter was not registered (disabled)
2019-05-27 09:21:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 09:21:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 09:21:07 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 09:21:07 -Servlet dispatcherServlet mapped to [/]
2019-05-27 09:21:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 09:20:52 CST 2019]; root of context hierarchy
2019-05-27 09:21:14 -Using default implementation for ThreadExecutor
2019-05-27 09:21:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 09:21:14 -Quartz Scheduler v.2.2.1 created.
2019-05-27 09:21:14 -RAMJobStore initialized.
2019-05-27 09:21:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 09:21:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 09:21:14 -Quartz scheduler version: 2.2.1
2019-05-27 09:21:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1e6bd263
2019-05-27 09:21:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 09:21:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 09:21:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 09:21:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 09:21:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 09:21:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 09:21:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 09:21:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 09:21:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 09:21:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 09:21:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 09:21:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 09:21:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 09:21:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 09:21:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 09:21:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 09:21:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 09:21:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 09:21:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 09:21:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 09:21:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 09:21:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 09:21:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 09:21:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 09:21:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 09:21:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 09:21:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 09:21:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 09:21:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 09:21:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 09:21:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 09:21:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 09:21:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 09:21:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 09:21:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 09:21:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 09:21:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 09:21:23 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 09:21:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 09:21:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 09:21:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 09:21:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 09:21:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 09:21:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 09:21:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 09:21:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 09:21:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 09:21:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 09:21:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 09:21:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 09:21:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 09:21:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 09:21:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 09:21:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 09:21:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 09:21:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 09:21:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 09:21:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 09:21:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:24 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 09:21:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 09:21:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 09:21:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 09:21:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 09:21:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 09:21:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 09:21:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 09:21:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 09:21:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 09:21:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 09:21:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 09:21:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 09:21:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 09:21:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 09:21:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 09:21:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 09:21:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 09:21:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 09:21:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 09:21:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 09:21:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 09:21:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 09:21:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 09:21:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 09:21:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 09:21:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 09:21:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 09:21:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 09:21:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 09:21:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 09:21:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 09:21:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 09:21:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 09:21:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 09:21:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 09:21:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 09:21:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 09:21:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 09:21:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 09:21:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 09:21:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:21:28 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 09:20:52 CST 2019]; root of context hierarchy
2019-05-27 09:21:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:21:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:21:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 09:21:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 09:21:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 09:21:31 -Registering beans for JMX exposure on startup
2019-05-27 09:21:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 09:21:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 09:21:31 -Starting beans in phase 2147483647
2019-05-27 09:21:31 -Context refreshed
2019-05-27 09:21:31 -Found 1 custom documentation plugin(s)
2019-05-27 09:21:31 -Scanning for api listing references
2019-05-27 09:21:32 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 09:21:32 -Generating unique operation named: removeUsingPOST_1
2019-05-27 09:21:32 -Generating unique operation named: addUsingGET_1
2019-05-27 09:21:32 -Generating unique operation named: editUsingGET_1
2019-05-27 09:21:32 -Generating unique operation named: listUsingGET_1
2019-05-27 09:21:32 -Generating unique operation named: removeUsingPOST_2
2019-05-27 09:21:32 -Generating unique operation named: removeUsingPOST_3
2019-05-27 09:21:32 -Generating unique operation named: saveUsingPOST_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingGET_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingPOST_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingPUT_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 09:21:32 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 09:21:32 -Generating unique operation named: addUsingGET_2
2019-05-27 09:21:32 -Generating unique operation named: editUsingGET_2
2019-05-27 09:21:32 -Generating unique operation named: listUsingGET_2
2019-05-27 09:21:32 -Generating unique operation named: removeUsingPOST_4
2019-05-27 09:21:32 -Generating unique operation named: removeUsingPOST_5
2019-05-27 09:21:32 -Generating unique operation named: saveUsingPOST_2
2019-05-27 09:21:32 -Generating unique operation named: updateUsingPOST_2
2019-05-27 09:21:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 09:21:32 -Generating unique operation named: addUsingGET_3
2019-05-27 09:21:32 -Generating unique operation named: editUsingGET_3
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_3
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_6
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_7
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_4
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_4
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_4
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_8
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_9
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 09:21:33 -Generating unique operation named: ElecUsingGET_1
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_5
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_5
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_5
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_10
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_11
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_6
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_6
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_6
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_7
2019-05-27 09:21:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_7
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_12
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_13
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 09:21:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_7
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_8
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_8
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_14
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_15
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_8
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_8
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_9
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_9
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_16
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_17
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_8
2019-05-27 09:21:33 -Generating unique operation named: updateUsingGET_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_9
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPUT_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 09:21:33 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_9
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_10
2019-05-27 09:21:33 -Generating unique operation named: infoUsingGET_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingPOST_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingPUT_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 09:21:33 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_10
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_18
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_19
2019-05-27 09:21:33 -Generating unique operation named: saveUsingPOST_9
2019-05-27 09:21:33 -Generating unique operation named: updateUsingPOST_10
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_11
2019-05-27 09:21:33 -Generating unique operation named: removeUsingPOST_20
2019-05-27 09:21:33 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 09:21:33 -Generating unique operation named: addUsingGET_10
2019-05-27 09:21:33 -Generating unique operation named: editUsingGET_11
2019-05-27 09:21:33 -Generating unique operation named: listUsingGET_12
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_21
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_10
2019-05-27 09:21:34 -Generating unique operation named: treeUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: treeUsingGET_2
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_11
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_11
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_12
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_13
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_22
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_23
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_12
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_12
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_13
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_14
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_24
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_25
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingGET_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_13
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPUT_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 09:21:34 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_13
2019-05-27 09:21:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_14
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_15
2019-05-27 09:21:34 -Generating unique operation named: printEditUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_26
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingGET_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_14
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPUT_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 09:21:34 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_14
2019-05-27 09:21:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_15
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_16
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_13
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_14
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_15
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_17
2019-05-27 09:21:34 -Generating unique operation named: listUsingHEAD_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingPOST_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingPUT_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingPATCH_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingDELETE_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 09:21:34 -Generating unique operation named: listUsingTRACE_1
2019-05-27 09:21:34 -Generating unique operation named: countDDUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_15
2019-05-27 09:21:34 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_16
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_18
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_27
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_15
2019-05-27 09:21:34 -Generating unique operation named: treeUsingGET_3
2019-05-27 09:21:34 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_16
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_16
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_17
2019-05-27 09:21:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_19
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_28
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_29
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_16
2019-05-27 09:21:34 -Generating unique operation named: updateUsingGET_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_17
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPUT_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 09:21:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 09:21:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_17
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_18
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_20
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_30
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_31
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_17
2019-05-27 09:21:34 -Generating unique operation named: updateUsingGET_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_18
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPUT_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 09:21:34 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 09:21:34 -Generating unique operation named: addUsingGET_18
2019-05-27 09:21:34 -Generating unique operation named: editUsingGET_19
2019-05-27 09:21:34 -Generating unique operation named: listUsingGET_21
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_32
2019-05-27 09:21:34 -Generating unique operation named: removeUsingPOST_33
2019-05-27 09:21:34 -Generating unique operation named: saveUsingPOST_18
2019-05-27 09:21:34 -Generating unique operation named: updateUsingGET_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPOST_19
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPUT_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 09:21:34 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 09:21:34 -Starting Quartz Scheduler now
2019-05-27 09:21:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 09:21:34 -Starting...
2019-05-27 09:21:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 09:21:34 -Started.
2019-05-27 09:21:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 09:21:35 -Using a shared selector for servlet write/read
2019-05-27 09:21:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 09:21:35 -Started BootdoApplication in 44.03 seconds (JVM running for 44.983)
2019-05-27 09:21:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 09:21:35 -==> Parameters: 
2019-05-27 09:21:35 -<==      Total: 1
2019-05-27 09:22:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 09:22:14 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 09:22:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-05-27 09:22:14 -Enabling session validation scheduler...
2019-05-27 09:22:14 -请求地址 : http://localhost:8081/login;JSESSIONID=f1dd7149-1f43-448f-9a6a-e9ac621a0096
2019-05-27 09:22:14 -HTTP METHOD : GET
2019-05-27 09:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 09:22:14 -参数 : [{}]
2019-05-27 09:22:14 -耗时 : 6
2019-05-27 09:22:14 -返回值 : login
2019-05-27 09:22:16 -请求地址 : http://localhost:8081/getVerify
2019-05-27 09:22:16 -HTTP METHOD : GET
2019-05-27 09:22:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 09:22:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@54a9b0e9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@778329f2]
2019-05-27 09:22:26 -7405
2019-05-27 09:22:27 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 09:22:28 -耗时 : 12322
2019-05-27 09:22:28 -返回值 : null
2019-05-27 09:22:34 -请求地址 : http://localhost:8081/login
2019-05-27 09:22:34 -HTTP METHOD : POST
2019-05-27 09:22:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 09:22:34 -参数 : [admin, 111111, 7405, org.apache.shiro.web.servlet.ShiroHttpServletRequest@edbeea3]
2019-05-27 09:22:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 09:22:34 -==> Parameters: admin(String)
2019-05-27 09:22:35 -<==      Total: 1
2019-05-27 09:22:35 -耗时 : 319
2019-05-27 09:22:35 -返回值 : {msg=操作成功, code=0}
2019-05-27 09:22:35 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 09:22:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:22:35 -==> Parameters: 1(Long), admin(String), 登录(String), 319(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 09:22:35.264(Timestamp)
2019-05-27 09:22:35 -请求地址 : http://localhost:8081/index
2019-05-27 09:22:35 -HTTP METHOD : GET
2019-05-27 09:22:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:22:35 -参数 : [{}]
2019-05-27 09:22:35 -<==    Updates: 1
2019-05-27 09:22:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:22:35 -==> Parameters: 1(Long)
2019-05-27 09:22:36 -<==      Total: 50
2019-05-27 09:22:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:22:36 -==> Parameters: 138(Long)
2019-05-27 09:22:36 -<==      Total: 1
2019-05-27 09:22:36 -耗时 : 920
2019-05-27 09:22:36 -返回值 : index_v1
2019-05-27 09:22:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:22:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 920(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:22:36.534(Timestamp)
2019-05-27 09:22:36 -请求地址 : http://localhost:8081/main
2019-05-27 09:22:36 -HTTP METHOD : GET
2019-05-27 09:22:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:22:36 -参数 : []
2019-05-27 09:22:36 -耗时 : 1
2019-05-27 09:22:36 -返回值 : main
2019-05-27 09:22:37 -请求地址 : http://localhost:8081/main
2019-05-27 09:22:37 -HTTP METHOD : GET
2019-05-27 09:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:22:37 -参数 : []
2019-05-27 09:22:37 -耗时 : 1
2019-05-27 09:22:37 -返回值 : main
2019-05-27 09:22:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:22:37 -HTTP METHOD : GET
2019-05-27 09:22:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:22:37 -参数 : []
2019-05-27 09:22:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:22:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:22:37 -<==    Updates: 1
2019-05-27 09:22:38 -<==      Total: 0
2019-05-27 09:22:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:22:38 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:22:38 -<==      Total: 1
2019-05-27 09:22:38 -耗时 : 754
2019-05-27 09:22:38 -返回值 : com.bootdo.common.utils.PageUtils@3a786788
2019-05-27 09:22:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:22:47 -==> Parameters: 1(Long)
2019-05-27 09:22:47 -<==      Total: 94
2019-05-27 09:22:47 -请求地址 : http://localhost:8081/elec/elec
2019-05-27 09:22:47 -HTTP METHOD : GET
2019-05-27 09:22:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-27 09:22:47 -参数 : []
2019-05-27 09:22:47 -耗时 : 1
2019-05-27 09:22:47 -返回值 : elec/elec/elec
2019-05-27 09:22:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-27 09:22:48 -HTTP METHOD : GET
2019-05-27 09:22:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 09:22:48 -参数 : [elecType]
2019-05-27 09:22:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 09:22:48 -HTTP METHOD : GET
2019-05-27 09:22:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 09:22:48 -参数 : [userType]
2019-05-27 09:22:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 09:22:48 -==> Parameters: elecType(String)
2019-05-27 09:22:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 09:22:48 -==> Parameters: userType(String)
2019-05-27 09:22:48 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-27 09:22:48 -HTTP METHOD : GET
2019-05-27 09:22:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-27 09:22:48 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@738ceaa3]
2019-05-27 09:22:48 -<==      Total: 11
2019-05-27 09:22:48 -耗时 : 344
2019-05-27 09:22:48 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 09:22:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-27 09:22:48 -==> Parameters: 0(Integer), 10(Integer)
2019-05-27 09:22:48 -<==      Total: 10
2019-05-27 09:22:48 -==>  Preparing: select count(*) from elec 
2019-05-27 09:22:48 -==> Parameters: 
2019-05-27 09:22:48 -<==      Total: 1
2019-05-27 09:22:48 -耗时 : 199
2019-05-27 09:22:48 -返回值 : com.bootdo.common.utils.PageUtils@a7fad5e
2019-05-27 09:22:48 -<==      Total: 4
2019-05-27 09:22:48 -耗时 : 505
2019-05-27 09:22:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 09:22:50 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-27 09:22:50 -HTTP METHOD : GET
2019-05-27 09:22:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-27 09:22:50 -参数 : []
2019-05-27 09:22:50 -耗时 : 0
2019-05-27 09:22:50 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-27 09:22:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:22:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importUserExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-27 09:22:56.316(Timestamp)
2019-05-27 09:22:56 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:22:56 -<==    Updates: 1
2019-05-27 09:23:03 -请求地址 : http://localhost:8081/file/downImport/elecUser
2019-05-27 09:23:03 -HTTP METHOD : GET
2019-05-27 09:23:03 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-27 09:23:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@15d04e8, elecUser]
2019-05-27 09:23:03 -耗时 : 157
2019-05-27 09:23:03 -返回值 : null
2019-05-27 09:32:45 -请求地址 : http://localhost:8081/getVerify
2019-05-27 09:32:45 -HTTP METHOD : GET
2019-05-27 09:32:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 09:32:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@20f62309, org.apache.shiro.web.servlet.ShiroHttpServletResponse@374b45d5]
2019-05-27 09:32:45 -5044
2019-05-27 09:32:45 -耗时 : 12
2019-05-27 09:32:45 -返回值 : null
2019-05-27 09:32:47 -请求地址 : http://localhost:8081/login
2019-05-27 09:32:47 -HTTP METHOD : POST
2019-05-27 09:32:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 09:32:47 -参数 : [admin, 111111, 7405, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5bbd52ef]
2019-05-27 09:32:47 -耗时 : 0
2019-05-27 09:32:47 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-27 09:32:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:32:47 -==> Parameters: 1(Long), admin(String), 登录(String), 0(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 09:32:47.962(Timestamp)
2019-05-27 09:32:48 -<==    Updates: 1
2019-05-27 09:32:53 -请求地址 : http://localhost:8081/login
2019-05-27 09:32:53 -HTTP METHOD : POST
2019-05-27 09:32:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 09:32:53 -参数 : [admin, 111111, 5044, org.apache.shiro.web.servlet.ShiroHttpServletRequest@e1e6f81]
2019-05-27 09:32:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 09:32:53 -==> Parameters: admin(String)
2019-05-27 09:32:53 -<==      Total: 1
2019-05-27 09:32:53 -耗时 : 8
2019-05-27 09:32:53 -返回值 : {msg=操作成功, code=0}
2019-05-27 09:32:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:32:53 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 09:32:53.831(Timestamp)
2019-05-27 09:32:53 -请求地址 : http://localhost:8081/index
2019-05-27 09:32:53 -HTTP METHOD : GET
2019-05-27 09:32:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 09:32:53 -参数 : [{}]
2019-05-27 09:32:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 09:32:53 -==> Parameters: 1(Long)
2019-05-27 09:32:53 -<==    Updates: 1
2019-05-27 09:32:53 -<==      Total: 50
2019-05-27 09:32:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 09:32:53 -==> Parameters: 138(Long)
2019-05-27 09:32:54 -<==      Total: 1
2019-05-27 09:32:54 -耗时 : 147
2019-05-27 09:32:54 -返回值 : index_v1
2019-05-27 09:32:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 09:32:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 147(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 09:32:54.003(Timestamp)
2019-05-27 09:32:54 -请求地址 : http://localhost:8081/main
2019-05-27 09:32:54 -HTTP METHOD : GET
2019-05-27 09:32:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:32:54 -参数 : []
2019-05-27 09:32:54 -耗时 : 1
2019-05-27 09:32:54 -返回值 : main
2019-05-27 09:32:54 -<==    Updates: 1
2019-05-27 09:32:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 09:32:54 -HTTP METHOD : GET
2019-05-27 09:32:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 09:32:54 -参数 : []
2019-05-27 09:32:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 09:32:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 09:32:54 -<==      Total: 0
2019-05-27 09:32:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 09:32:54 -==> Parameters: 1(Long), 0(String)
2019-05-27 09:32:54 -<==      Total: 1
2019-05-27 09:32:54 -耗时 : 34
2019-05-27 09:32:54 -返回值 : com.bootdo.common.utils.PageUtils@3d21a146
2019-05-27 09:32:54 -请求地址 : http://localhost:8081/main
2019-05-27 09:32:54 -HTTP METHOD : GET
2019-05-27 09:32:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 09:32:54 -参数 : []
2019-05-27 09:32:54 -耗时 : 0
2019-05-27 09:32:54 -返回值 : main
2019-05-27 09:33:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:33:16 -==> Parameters: 1(Long)
2019-05-27 09:33:16 -<==      Total: 94
2019-05-27 09:33:16 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-27 09:33:16 -HTTP METHOD : GET
2019-05-27 09:33:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-27 09:33:16 -参数 : []
2019-05-27 09:33:16 -耗时 : 1
2019-05-27 09:33:16 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-27 09:33:28 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-05-27 09:33:28 -HTTP METHOD : GET
2019-05-27 09:33:28 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-27 09:33:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@3d5950a8, heatUser]
2019-05-27 09:33:28 -耗时 : 79
2019-05-27 09:33:28 -返回值 : null
2019-05-27 09:33:31 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 09:52:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-05-27 09:52:45 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-05-27 09:52:45 -HTTP METHOD : GET
2019-05-27 09:52:45 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-27 09:52:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@6f9df36c, heatUser]
2019-05-27 09:52:45 -耗时 : 3
2019-05-27 09:52:45 -返回值 : null
2019-05-27 09:53:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 09:53:27 -==> Parameters: 1(Long)
2019-05-27 09:53:27 -<==      Total: 94
2019-05-27 09:53:27 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-05-27 09:53:27 -HTTP METHOD : GET
2019-05-27 09:53:27 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-05-27 09:53:27 -参数 : []
2019-05-27 09:53:27 -耗时 : 0
2019-05-27 09:53:27 -返回值 : water/waterUpLoad/waterUpLoad
2019-05-27 09:53:29 -请求地址 : http://localhost:8081/file/downImport/waterUser
2019-05-27 09:53:29 -HTTP METHOD : GET
2019-05-27 09:53:29 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-27 09:53:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@23983915, waterUser]
2019-05-27 09:53:29 -耗时 : 190
2019-05-27 09:53:29 -返回值 : null
2019-05-27 10:22:53 -Starting BootdoApplication on PC-201905091110 with PID 17024 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 10:22:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 10:22:53 -The following profiles are active: dev
2019-05-27 10:22:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 10:22:53 CST 2019]; root of context hierarchy
2019-05-27 10:23:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 10:23:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$697c1b10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5bd549b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 10:23:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 10:23:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 10:23:12 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 10:23:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 10:23:12 -Starting service [Tomcat]
2019-05-27 10:23:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 10:23:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 10:23:12 -Initializing Spring embedded WebApplicationContext
2019-05-27 10:23:12 -Root WebApplicationContext: initialization completed in 19525 ms
2019-05-27 10:23:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 10:23:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 10:23:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 10:23:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 10:23:13 -Filter xssFilter was not registered (disabled)
2019-05-27 10:23:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 10:23:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 10:23:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 10:23:13 -Servlet dispatcherServlet mapped to [/]
2019-05-27 10:23:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 10:22:53 CST 2019]; root of context hierarchy
2019-05-27 10:23:18 -Using default implementation for ThreadExecutor
2019-05-27 10:23:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 10:23:18 -Quartz Scheduler v.2.2.1 created.
2019-05-27 10:23:18 -RAMJobStore initialized.
2019-05-27 10:23:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 10:23:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 10:23:18 -Quartz scheduler version: 2.2.1
2019-05-27 10:23:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@63e4484d
2019-05-27 10:23:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 10:23:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 10:23:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 10:23:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 10:23:22 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 10:23:22 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 10:23:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 10:23:22 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 10:23:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 10:23:22 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 10:23:22 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 10:23:22 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 10:23:22 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 10:23:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 10:23:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 10:23:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 10:23:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 10:23:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 10:23:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 10:23:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 10:23:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 10:23:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 10:23:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 10:23:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 10:23:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 10:23:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 10:23:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 10:23:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 10:23:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 10:23:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 10:23:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 10:23:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 10:23:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 10:23:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 10:23:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 10:23:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 10:23:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 10:23:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 10:23:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 10:23:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 10:23:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 10:23:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 10:23:22 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 10:23:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 10:23:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 10:23:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 10:23:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 10:23:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 10:23:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 10:23:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 10:23:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 10:23:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 10:23:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 10:23:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 10:23:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 10:23:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 10:23:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 10:23:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 10:23:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 10:23:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 10:23:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 10:23:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 10:23:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 10:23:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 10:23:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 10:23:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 10:23:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 10:23:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 10:23:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 10:23:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 10:23:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 10:23:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 10:23:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 10:23:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 10:23:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 10:23:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 10:23:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 10:23:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 10:23:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 10:23:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 10:23:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 10:23:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 10:23:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 10:23:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 10:23:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 10:23:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 10:23:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 10:23:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 10:23:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 10:23:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 10:23:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 10:23:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 10:23:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 10:23:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 10:22:53 CST 2019]; root of context hierarchy
2019-05-27 10:23:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 10:23:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 10:23:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 10:23:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 10:23:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 10:23:27 -Registering beans for JMX exposure on startup
2019-05-27 10:23:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 10:23:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 10:23:27 -Starting beans in phase 2147483647
2019-05-27 10:23:27 -Context refreshed
2019-05-27 10:23:27 -Found 1 custom documentation plugin(s)
2019-05-27 10:23:27 -Scanning for api listing references
2019-05-27 10:23:28 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_1
2019-05-27 10:23:28 -Generating unique operation named: addUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: editUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: listUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_2
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_3
2019-05-27 10:23:28 -Generating unique operation named: saveUsingPOST_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPOST_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPUT_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 10:23:28 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 10:23:28 -Generating unique operation named: addUsingGET_2
2019-05-27 10:23:28 -Generating unique operation named: editUsingGET_2
2019-05-27 10:23:28 -Generating unique operation named: listUsingGET_2
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_4
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_5
2019-05-27 10:23:28 -Generating unique operation named: saveUsingPOST_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPOST_2
2019-05-27 10:23:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: addUsingGET_3
2019-05-27 10:23:28 -Generating unique operation named: editUsingGET_3
2019-05-27 10:23:28 -Generating unique operation named: listUsingGET_3
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_6
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_7
2019-05-27 10:23:28 -Generating unique operation named: saveUsingPOST_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingGET_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPOST_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPUT_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 10:23:28 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 10:23:28 -Generating unique operation named: addUsingGET_4
2019-05-27 10:23:28 -Generating unique operation named: editUsingGET_4
2019-05-27 10:23:28 -Generating unique operation named: listUsingGET_4
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_8
2019-05-27 10:23:28 -Generating unique operation named: removeUsingPOST_9
2019-05-27 10:23:28 -Generating unique operation named: saveUsingPOST_4
2019-05-27 10:23:28 -Generating unique operation named: updateUsingGET_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPOST_4
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPUT_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 10:23:28 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 10:23:28 -Generating unique operation named: ElecUsingGET_1
2019-05-27 10:23:28 -Generating unique operation named: addUsingGET_5
2019-05-27 10:23:28 -Generating unique operation named: editUsingGET_5
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_5
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_10
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_11
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingGET_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPUT_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 10:23:29 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_6
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_6
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_6
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_7
2019-05-27 10:23:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_7
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_12
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_13
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingGET_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPUT_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 10:23:29 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 10:23:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_7
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_8
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_8
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_14
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_15
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingGET_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPUT_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 10:23:29 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_8
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_9
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_9
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_16
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_17
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingGET_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_9
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPUT_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 10:23:29 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_9
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_10
2019-05-27 10:23:29 -Generating unique operation named: infoUsingGET_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingPOST_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingPUT_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 10:23:29 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_10
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_18
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_19
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_9
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_10
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_11
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_20
2019-05-27 10:23:29 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_10
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_11
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_12
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_21
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_10
2019-05-27 10:23:29 -Generating unique operation named: treeUsingGET_1
2019-05-27 10:23:29 -Generating unique operation named: treeUsingGET_2
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_11
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_11
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_12
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_13
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_22
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_23
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_12
2019-05-27 10:23:29 -Generating unique operation named: addUsingGET_12
2019-05-27 10:23:29 -Generating unique operation named: editUsingGET_13
2019-05-27 10:23:29 -Generating unique operation named: listUsingGET_14
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_24
2019-05-27 10:23:29 -Generating unique operation named: removeUsingPOST_25
2019-05-27 10:23:29 -Generating unique operation named: saveUsingPOST_11
2019-05-27 10:23:29 -Generating unique operation named: updateUsingGET_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPOST_13
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPUT_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 10:23:29 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 10:23:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 10:23:30 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_13
2019-05-27 10:23:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_14
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_15
2019-05-27 10:23:30 -Generating unique operation named: printEditUsingGET_1
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_26
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingGET_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_14
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPUT_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 10:23:30 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_14
2019-05-27 10:23:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_15
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_16
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_13
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_14
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_15
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_17
2019-05-27 10:23:30 -Generating unique operation named: listUsingHEAD_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingPOST_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingPUT_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingPATCH_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingDELETE_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 10:23:30 -Generating unique operation named: listUsingTRACE_1
2019-05-27 10:23:30 -Generating unique operation named: countDDUsingGET_1
2019-05-27 10:23:30 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 10:23:30 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_15
2019-05-27 10:23:30 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_16
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_18
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_27
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_15
2019-05-27 10:23:30 -Generating unique operation named: treeUsingGET_3
2019-05-27 10:23:30 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_16
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_16
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_17
2019-05-27 10:23:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_19
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_28
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_29
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_16
2019-05-27 10:23:30 -Generating unique operation named: updateUsingGET_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_17
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPUT_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 10:23:30 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 10:23:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_17
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_18
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_20
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_30
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_31
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_17
2019-05-27 10:23:30 -Generating unique operation named: updateUsingGET_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_18
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPUT_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 10:23:30 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 10:23:30 -Generating unique operation named: addUsingGET_18
2019-05-27 10:23:30 -Generating unique operation named: editUsingGET_19
2019-05-27 10:23:30 -Generating unique operation named: listUsingGET_21
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_32
2019-05-27 10:23:30 -Generating unique operation named: removeUsingPOST_33
2019-05-27 10:23:30 -Generating unique operation named: saveUsingPOST_18
2019-05-27 10:23:30 -Generating unique operation named: updateUsingGET_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPOST_19
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPUT_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 10:23:30 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 10:23:30 -Starting Quartz Scheduler now
2019-05-27 10:23:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 10:23:30 -Starting...
2019-05-27 10:23:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 10:23:30 -Started.
2019-05-27 10:23:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 10:23:30 -Using a shared selector for servlet write/read
2019-05-27 10:23:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 10:23:31 -Started BootdoApplication in 39.244 seconds (JVM running for 40.24)
2019-05-27 10:23:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 10:23:31 -==> Parameters: 
2019-05-27 10:23:31 -<==      Total: 1
2019-05-27 10:24:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 10:24:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 10:24:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 10:24:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 105 ms
2019-05-27 10:24:45 -Enabling session validation scheduler...
2019-05-27 10:24:45 -请求地址 : http://localhost:8081/login;JSESSIONID=31f002ca-123b-431b-9e82-4bd78ef777a5
2019-05-27 10:24:45 -HTTP METHOD : GET
2019-05-27 10:24:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 10:24:45 -参数 : [{}]
2019-05-27 10:24:45 -耗时 : 7
2019-05-27 10:24:45 -返回值 : login
2019-05-27 10:24:48 -请求地址 : http://localhost:8081/getVerify
2019-05-27 10:24:48 -HTTP METHOD : GET
2019-05-27 10:24:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 10:24:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b339361, org.apache.shiro.web.servlet.ShiroHttpServletResponse@392c70ee]
2019-05-27 10:25:02 -3312
2019-05-27 10:25:04 -耗时 : 15969
2019-05-27 10:25:04 -返回值 : null
2019-05-27 10:25:10 -请求地址 : http://localhost:8081/login
2019-05-27 10:25:10 -HTTP METHOD : POST
2019-05-27 10:25:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 10:25:10 -参数 : [admin, 111111, 3312, org.apache.shiro.web.servlet.ShiroHttpServletRequest@53acdcd2]
2019-05-27 10:25:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 10:25:10 -==> Parameters: admin(String)
2019-05-27 10:25:10 -<==      Total: 1
2019-05-27 10:25:10 -耗时 : 608
2019-05-27 10:25:10 -返回值 : {msg=操作成功, code=0}
2019-05-27 10:25:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 10:25:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:25:11 -==> Parameters: 1(Long), admin(String), 登录(String), 608(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 10:25:11.027(Timestamp)
2019-05-27 10:25:11 -请求地址 : http://localhost:8081/index
2019-05-27 10:25:11 -HTTP METHOD : GET
2019-05-27 10:25:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 10:25:11 -参数 : [{}]
2019-05-27 10:25:11 -<==    Updates: 1
2019-05-27 10:25:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 10:25:11 -==> Parameters: 1(Long)
2019-05-27 10:25:12 -<==      Total: 50
2019-05-27 10:25:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 10:25:12 -==> Parameters: 138(Long)
2019-05-27 10:25:12 -<==      Total: 1
2019-05-27 10:25:12 -耗时 : 1090
2019-05-27 10:25:12 -返回值 : index_v1
2019-05-27 10:25:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:25:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1091(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 10:25:12.536(Timestamp)
2019-05-27 10:25:12 -请求地址 : http://localhost:8081/main
2019-05-27 10:25:12 -HTTP METHOD : GET
2019-05-27 10:25:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 10:25:12 -参数 : []
2019-05-27 10:25:12 -耗时 : 1
2019-05-27 10:25:12 -返回值 : main
2019-05-27 10:25:13 -<==    Updates: 1
2019-05-27 10:25:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 10:25:13 -HTTP METHOD : GET
2019-05-27 10:25:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 10:25:13 -参数 : []
2019-05-27 10:25:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 10:25:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 10:25:13 -请求地址 : http://localhost:8081/main
2019-05-27 10:25:13 -HTTP METHOD : GET
2019-05-27 10:25:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 10:25:13 -参数 : []
2019-05-27 10:25:13 -耗时 : 0
2019-05-27 10:25:13 -返回值 : main
2019-05-27 10:25:14 -<==      Total: 0
2019-05-27 10:25:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 10:25:14 -==> Parameters: 1(Long), 0(String)
2019-05-27 10:25:14 -<==      Total: 1
2019-05-27 10:25:14 -耗时 : 309
2019-05-27 10:25:14 -返回值 : com.bootdo.common.utils.PageUtils@48fd99b8
2019-05-27 10:25:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 10:25:21 -==> Parameters: 1(Long)
2019-05-27 10:25:21 -<==      Total: 94
2019-05-27 10:25:21 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-27 10:25:21 -HTTP METHOD : GET
2019-05-27 10:25:21 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-27 10:25:21 -参数 : []
2019-05-27 10:25:21 -耗时 : 0
2019-05-27 10:25:21 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-27 10:25:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 10:25:27 -HTTP METHOD : GET
2019-05-27 10:25:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 10:25:27 -参数 : []
2019-05-27 10:25:27 -耗时 : 1
2019-05-27 10:25:27 -返回值 : system/dept/deptTree
2019-05-27 10:25:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 10:25:28 -HTTP METHOD : GET
2019-05-27 10:25:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 10:25:28 -参数 : []
2019-05-27 10:25:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 10:25:28 -==> Parameters: 
2019-05-27 10:25:28 -<==      Total: 3
2019-05-27 10:25:28 -耗时 : 75
2019-05-27 10:25:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 10:25:39 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-05-27 10:25:39 -HTTP METHOD : POST
2019-05-27 10:25:39 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-05-27 10:25:39 -参数 : [com.bootdo.heat.domain.HeatDO@67b31815]
2019-05-27 10:25:39 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:25:39 -==> Parameters: 2019-05(String), 2(String)
2019-05-27 10:25:39 -<==      Total: 0
2019-05-27 10:25:39 -耗时 : 50
2019-05-27 10:25:39 -返回值 : 
2019-05-27 10:26:03 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-05-27 10:26:03 -HTTP METHOD : POST
2019-05-27 10:26:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-05-27 10:26:03 -参数 : [com.bootdo.heat.domain.HeatDO@4ba0bf8b]
2019-05-27 10:26:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:26:03 -==> Parameters: 2019-03(String), 2(String)
2019-05-27 10:26:03 -<==      Total: 7
2019-05-27 10:26:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:26:03 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:26:03 -<==      Total: 0
2019-05-27 10:26:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:26:03 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:26:03 -<==      Total: 0
2019-05-27 10:26:03 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:03 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 15716675678(String), 1(String), 10005(String), 1(String), 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -172.35(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:03 -<==    Updates: 1
2019-05-27 10:26:03 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:03 -==> Parameters: 1-002(String), 新东方(String), A(String), 2(String), (String), 1(String), 10002(String), 1(String), 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:04 -==> Parameters: 1-003(String), 阿萨德(String), B(String), 2(String), (String), 1(String), 10005(String), 1(String), 3.50(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:04 -==> Parameters: 1-004(String), 话说得(String), B(String), 2(String), null, 1(String), 1(String), 3(String), 3.50(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:04 -==> Parameters: 1-005(String), 阿萨德(String), A(String), 2(String), null, 1(String), 1(String), 2(String), 4.80(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:04 -==> Parameters: 1-006(String), 是的法定(String), A(String), 2(String), null, 1(String), 1(String), 2(String), 4.80(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:26:04 -==> Parameters: 1-0007(String), 爱仕达(String), B(String), 2(String), null, 0(String), 1(String), 4(String), 4.80(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 22:10:03.0(Timestamp), 1(Long), (String)
2019-05-27 10:26:04 -<==    Updates: 1
2019-05-27 10:26:04 -耗时 : 933
2019-05-27 10:26:04 -返回值 : success
2019-05-27 10:27:57 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-05-27 10:27:57 -HTTP METHOD : POST
2019-05-27 10:27:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-05-27 10:27:57 -参数 : [com.bootdo.heat.domain.HeatDO@44912fae]
2019-05-27 10:27:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:27:57 -==> Parameters: 2019-05(String), 2(String)
2019-05-27 10:27:57 -<==      Total: 0
2019-05-27 10:27:57 -耗时 : 4
2019-05-27 10:27:57 -返回值 : 
2019-05-27 10:28:48 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-05-27 10:28:48 -HTTP METHOD : POST
2019-05-27 10:28:48 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-05-27 10:28:48 -参数 : [com.bootdo.heat.domain.HeatDO@1ce84a52]
2019-05-27 10:28:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:28:48 -==> Parameters: 2019-03(String), 2(String)
2019-05-27 10:28:48 -<==      Total: 7
2019-05-27 10:28:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:28:48 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:28:48 -<==      Total: 7
2019-05-27 10:28:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-05-27 10:28:48 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:28:48 -<==      Total: 7
2019-05-27 10:28:48 -耗时 : 55
2019-05-27 10:28:48 -返回值 : fail
2019-05-27 10:29:20 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:29:20 -HTTP METHOD : POST
2019-05-27 10:29:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:29:20 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@56d4e4f9, 2019-03, 2]
2019-05-27 10:29:23 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:29:23 -==> Parameters: 1-0001(String)
2019-05-27 10:29:23 -<==      Total: 1
2019-05-27 10:29:23 -耗时 : 2828
2019-05-27 10:29:23 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:29:58 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:29:58 -HTTP METHOD : POST
2019-05-27 10:29:58 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:29:58 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5237fe06, 2019-02, 2]
2019-05-27 10:29:59 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:29:59 -==> Parameters: 1-0001(String)
2019-05-27 10:29:59 -<==      Total: 1
2019-05-27 10:29:59 -耗时 : 84
2019-05-27 10:29:59 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:30:01 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:30:01 -HTTP METHOD : POST
2019-05-27 10:30:01 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:30:01 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3b504c39, 2019-02, 2]
2019-05-27 10:30:01 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:30:01 -==> Parameters: 1-0001(String)
2019-05-27 10:30:01 -<==      Total: 1
2019-05-27 10:30:01 -耗时 : 84
2019-05-27 10:30:01 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:30:03 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:30:03 -HTTP METHOD : POST
2019-05-27 10:30:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:30:03 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6c25dd07, 2019-02, 2]
2019-05-27 10:30:03 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:30:03 -==> Parameters: 1-0001(String)
2019-05-27 10:30:03 -<==      Total: 1
2019-05-27 10:30:03 -耗时 : 89
2019-05-27 10:30:03 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:30:05 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:30:05 -HTTP METHOD : POST
2019-05-27 10:30:05 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:30:05 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@28b189b9, 2019-02, 2]
2019-05-27 10:30:05 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:30:05 -==> Parameters: 1-0001(String)
2019-05-27 10:30:05 -<==      Total: 1
2019-05-27 10:30:05 -耗时 : 91
2019-05-27 10:30:05 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:30:09 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-27 10:30:09 -HTTP METHOD : POST
2019-05-27 10:30:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-27 10:30:09 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1ee44156, 2019-02, 2]
2019-05-27 10:30:09 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-27 10:30:09 -==> Parameters: 1-0001(String)
2019-05-27 10:30:09 -<==      Total: 1
2019-05-27 10:30:09 -耗时 : 91
2019-05-27 10:30:09 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 10:32:59 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-27 10:32:59 -HTTP METHOD : GET
2019-05-27 10:32:59 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-27 10:32:59 -参数 : []
2019-05-27 10:32:59 -耗时 : 0
2019-05-27 10:32:59 -返回值 : water/waterPrice/waterPrice
2019-05-27 10:33:00 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-27 10:33:00 -HTTP METHOD : GET
2019-05-27 10:33:00 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-27 10:33:00 -参数 : [{limit=10, offset=0}]
2019-05-27 10:33:00 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-27 10:33:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-27 10:33:00 -请求地址 : http://localhost:8081/water/waterInto
2019-05-27 10:33:00 -HTTP METHOD : GET
2019-05-27 10:33:00 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-05-27 10:33:00 -参数 : []
2019-05-27 10:33:00 -耗时 : 1
2019-05-27 10:33:00 -返回值 : water/waterInto/waterInto
2019-05-27 10:33:00 -<==      Total: 2
2019-05-27 10:33:00 -==>  Preparing: select count(*) from water_price 
2019-05-27 10:33:00 -==> Parameters: 
2019-05-27 10:33:00 -<==      Total: 1
2019-05-27 10:33:00 -耗时 : 495
2019-05-27 10:33:00 -返回值 : com.bootdo.common.utils.PageUtils@5018df9f
2019-05-27 10:33:01 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-05-27 10:33:01 -HTTP METHOD : GET
2019-05-27 10:33:01 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-05-27 10:33:01 -参数 : []
2019-05-27 10:33:01 -耗时 : 0
2019-05-27 10:33:01 -返回值 : water/waterUpLoad/waterUpLoad
2019-05-27 10:34:40 -请求地址 : http://localhost:8081/index
2019-05-27 10:34:40 -HTTP METHOD : GET
2019-05-27 10:34:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 10:34:40 -参数 : [{}]
2019-05-27 10:34:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 10:34:40 -==> Parameters: 1(Long)
2019-05-27 10:34:40 -<==      Total: 50
2019-05-27 10:34:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 10:34:40 -==> Parameters: 138(Long)
2019-05-27 10:34:40 -<==      Total: 1
2019-05-27 10:34:40 -耗时 : 84
2019-05-27 10:34:40 -返回值 : index_v1
2019-05-27 10:34:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:34:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 84(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 10:34:40.092(Timestamp)
2019-05-27 10:34:40 -<==    Updates: 1
2019-05-27 10:34:40 -请求地址 : http://localhost:8081/main
2019-05-27 10:34:40 -HTTP METHOD : GET
2019-05-27 10:34:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 10:34:40 -参数 : []
2019-05-27 10:34:40 -耗时 : 0
2019-05-27 10:34:40 -返回值 : main
2019-05-27 10:34:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 10:34:40 -HTTP METHOD : GET
2019-05-27 10:34:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 10:34:40 -参数 : []
2019-05-27 10:34:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 10:34:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 10:34:40 -<==      Total: 0
2019-05-27 10:34:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 10:34:40 -==> Parameters: 1(Long), 0(String)
2019-05-27 10:34:40 -<==      Total: 1
2019-05-27 10:34:40 -耗时 : 68
2019-05-27 10:34:40 -返回值 : com.bootdo.common.utils.PageUtils@17bb3e37
2019-05-27 10:34:40 -请求地址 : http://localhost:8081/main
2019-05-27 10:34:40 -HTTP METHOD : GET
2019-05-27 10:34:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 10:34:40 -参数 : []
2019-05-27 10:34:40 -耗时 : 0
2019-05-27 10:34:40 -返回值 : main
2019-05-27 10:34:42 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-05-27 10:34:42 -HTTP METHOD : GET
2019-05-27 10:34:42 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-05-27 10:34:42 -参数 : []
2019-05-27 10:34:42 -耗时 : 1
2019-05-27 10:34:42 -返回值 : water/waterUpLoad/waterUpLoad
2019-05-27 10:34:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 10:34:54 -HTTP METHOD : GET
2019-05-27 10:34:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 10:34:54 -参数 : []
2019-05-27 10:34:54 -耗时 : 1
2019-05-27 10:34:54 -返回值 : system/dept/deptTree
2019-05-27 10:34:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 10:34:55 -HTTP METHOD : GET
2019-05-27 10:34:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 10:34:55 -参数 : []
2019-05-27 10:34:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 10:34:55 -==> Parameters: 
2019-05-27 10:34:55 -<==      Total: 3
2019-05-27 10:34:55 -耗时 : 4
2019-05-27 10:34:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 10:34:56 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-05-27 10:34:56 -HTTP METHOD : POST
2019-05-27 10:34:56 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-05-27 10:34:56 -参数 : [com.bootdo.water.domain.WaterDO@5eed2175]
2019-05-27 10:34:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-05-27 10:34:57 -==> Parameters: 2019-05(String), 2(String)
2019-05-27 10:34:57 -<==      Total: 0
2019-05-27 10:34:57 -耗时 : 41
2019-05-27 10:34:57 -返回值 : 
2019-05-27 10:35:04 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-05-27 10:35:04 -HTTP METHOD : POST
2019-05-27 10:35:04 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-05-27 10:35:04 -参数 : [com.bootdo.water.domain.WaterDO@7936d681]
2019-05-27 10:35:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-05-27 10:35:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-27 10:35:04 -<==      Total: 7
2019-05-27 10:35:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-05-27 10:35:04 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:35:04 -<==      Total: 0
2019-05-27 10:35:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-05-27 10:35:04 -==> Parameters: 2019-04(String), 2(String)
2019-05-27 10:35:04 -<==      Total: 0
2019-05-27 10:35:04 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:04 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 13116675678(String), 1(String), 10005(String), 1(String), 6.30(BigDecimal), 6.00(BigDecimal), 22.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 21:38:35.0(Timestamp), 1(Long), (String)
2019-05-27 10:35:04 -<==    Updates: 1
2019-05-27 10:35:04 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:04 -==> Parameters: 1-0003(String), 阿萨德·(String), B(String), 2(String), (String), 1(String), 10005(String), 2(String), 11.00(BigDecimal), 10.00(BigDecimal), -11.53(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 21:38:35.0(Timestamp), 1(Long), (String)
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:05 -==> Parameters: 1-0005(String), 阿士大(String), A(String), 2(String), (String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 6.00(BigDecimal), 9.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 21:38:35.0(Timestamp), 1(Long), (String)
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:05 -==> Parameters: 1-0008(String), 法规及(String), A(String), 2(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 6.00(BigDecimal), -15.53(BigDecimal), 2019-04(String), 1(Long), 2019-05-16 21:38:35.0(Timestamp), 1(Long), (String)
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:05 -==> Parameters: 2-0001(String), 大师傅(String), A(String), 2(String), null, 1(String), 1(String), 3(String), 6.00(BigDecimal), 6.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-22 11:35:07.0(Timestamp), 1(Long), null
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:05 -==> Parameters: 2-0002(String), 发过火(String), A(String), 2(String), null, 1(String), 1(String), 4(String), 6.00(BigDecimal), 6.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-22 11:35:51.0(Timestamp), 1(Long), null
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -==>  Preparing: insert into water ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 10:35:05 -==> Parameters: 2-0003(String), 豆腐干(String), A(String), 2(String), null, 1(String), 1(String), 3(String), 6.00(BigDecimal), 6.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-05-22 11:36:36.0(Timestamp), 1(Long), null
2019-05-27 10:35:05 -<==    Updates: 1
2019-05-27 10:35:05 -耗时 : 766
2019-05-27 10:35:05 -返回值 : success
2019-05-27 10:37:03 -请求地址 : http://localhost:8081/water/waterUpLoad/importWaterExcel
2019-05-27 10:37:03 -HTTP METHOD : POST
2019-05-27 10:37:03 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.importWaterExcel
2019-05-27 10:37:03 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@16c53140, 2019-02, 2]
2019-05-27 10:37:03 -==>  Preparing: SELECT count(*) FROM WATER he WHERE he.user_id = ? 
2019-05-27 10:37:03 -==> Parameters: 1-0001(String)
2019-05-27 10:37:04 -<==      Total: 1
2019-05-27 10:37:04 -耗时 : 240
2019-05-27 10:37:04 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-27 14:30:50 -Starting BootdoApplication on PC-201905091110 with PID 8080 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 14:30:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 14:30:50 -The following profiles are active: dev
2019-05-27 14:30:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 14:30:50 CST 2019]; root of context hierarchy
2019-05-27 14:30:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 14:30:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$570235d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:30:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$495b647e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 14:31:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 14:31:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 14:31:03 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 14:31:03 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 14:31:03 -Starting service [Tomcat]
2019-05-27 14:31:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 14:31:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 14:31:04 -Initializing Spring embedded WebApplicationContext
2019-05-27 14:31:04 -Root WebApplicationContext: initialization completed in 13966 ms
2019-05-27 14:31:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 14:31:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 14:31:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 14:31:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 14:31:05 -Filter xssFilter was not registered (disabled)
2019-05-27 14:31:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 14:31:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 14:31:05 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 14:31:05 -Servlet dispatcherServlet mapped to [/]
2019-05-27 14:31:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 14:30:50 CST 2019]; root of context hierarchy
2019-05-27 14:31:18 -Using default implementation for ThreadExecutor
2019-05-27 14:31:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 14:31:19 -Quartz Scheduler v.2.2.1 created.
2019-05-27 14:31:19 -RAMJobStore initialized.
2019-05-27 14:31:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 14:31:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 14:31:19 -Quartz scheduler version: 2.2.1
2019-05-27 14:31:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1515f782
2019-05-27 14:31:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 14:31:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 14:31:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 14:31:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 14:31:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 14:31:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 14:31:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 14:31:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 14:31:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 14:31:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 14:31:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 14:31:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 14:31:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 14:31:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 14:31:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 14:31:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 14:31:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 14:31:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 14:31:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 14:31:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 14:31:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 14:31:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 14:31:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 14:31:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 14:31:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 14:31:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 14:31:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 14:31:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 14:31:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 14:31:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 14:31:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 14:31:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 14:31:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 14:31:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 14:31:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 14:31:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 14:31:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 14:31:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 14:31:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 14:31:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 14:31:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 14:31:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 14:31:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 14:31:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 14:31:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 14:31:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 14:31:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 14:31:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 14:31:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 14:31:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 14:31:23 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 14:31:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 14:31:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 14:31:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 14:31:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 14:31:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 14:31:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 14:31:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 14:31:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 14:31:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 14:31:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 14:31:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 14:31:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 14:31:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 14:31:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 14:31:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 14:31:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 14:31:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 14:31:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 14:31:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 14:31:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 14:31:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 14:31:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 14:31:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 14:31:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 14:31:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 14:31:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 14:31:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 14:31:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 14:31:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 14:31:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 14:31:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 14:31:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 14:31:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 14:31:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 14:31:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 14:31:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 14:31:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 14:31:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 14:31:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 14:31:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 14:31:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 14:31:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 14:31:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 14:31:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 14:31:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 14:31:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 14:31:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 14:31:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 14:31:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 14:31:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 14:31:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 14:31:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 14:31:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 14:31:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 14:30:50 CST 2019]; root of context hierarchy
2019-05-27 14:31:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 14:31:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 14:31:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 14:31:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 14:31:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 14:31:30 -Registering beans for JMX exposure on startup
2019-05-27 14:31:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 14:31:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 14:31:30 -Starting beans in phase 2147483647
2019-05-27 14:31:30 -Context refreshed
2019-05-27 14:31:30 -Found 1 custom documentation plugin(s)
2019-05-27 14:31:30 -Scanning for api listing references
2019-05-27 14:31:31 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_1
2019-05-27 14:31:31 -Generating unique operation named: addUsingGET_1
2019-05-27 14:31:31 -Generating unique operation named: editUsingGET_1
2019-05-27 14:31:31 -Generating unique operation named: listUsingGET_1
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_2
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_3
2019-05-27 14:31:31 -Generating unique operation named: saveUsingPOST_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingGET_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPOST_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPUT_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 14:31:31 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 14:31:31 -Generating unique operation named: addUsingGET_2
2019-05-27 14:31:31 -Generating unique operation named: editUsingGET_2
2019-05-27 14:31:31 -Generating unique operation named: listUsingGET_2
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_4
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_5
2019-05-27 14:31:31 -Generating unique operation named: saveUsingPOST_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPOST_2
2019-05-27 14:31:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 14:31:31 -Generating unique operation named: addUsingGET_3
2019-05-27 14:31:31 -Generating unique operation named: editUsingGET_3
2019-05-27 14:31:31 -Generating unique operation named: listUsingGET_3
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_6
2019-05-27 14:31:31 -Generating unique operation named: removeUsingPOST_7
2019-05-27 14:31:31 -Generating unique operation named: saveUsingPOST_3
2019-05-27 14:31:31 -Generating unique operation named: updateUsingGET_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPOST_3
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPUT_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 14:31:31 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 14:31:31 -Generating unique operation named: addUsingGET_4
2019-05-27 14:31:31 -Generating unique operation named: editUsingGET_4
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_4
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_8
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_9
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingGET_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPUT_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 14:31:32 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 14:31:32 -Generating unique operation named: ElecUsingGET_1
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_5
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_5
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_5
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_10
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_11
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingGET_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPUT_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 14:31:32 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_6
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_6
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_6
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_7
2019-05-27 14:31:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_7
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_12
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_13
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingGET_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPUT_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 14:31:32 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 14:31:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_7
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_8
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_8
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_14
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_15
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingGET_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_8
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPUT_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 14:31:32 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_8
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_9
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_9
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_16
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_17
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_8
2019-05-27 14:31:32 -Generating unique operation named: updateUsingGET_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_9
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPUT_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 14:31:32 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_9
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_10
2019-05-27 14:31:32 -Generating unique operation named: infoUsingGET_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingPOST_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingPUT_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 14:31:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_10
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_18
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_19
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_9
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_10
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_11
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_20
2019-05-27 14:31:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 14:31:32 -Generating unique operation named: addUsingGET_10
2019-05-27 14:31:32 -Generating unique operation named: editUsingGET_11
2019-05-27 14:31:32 -Generating unique operation named: listUsingGET_12
2019-05-27 14:31:32 -Generating unique operation named: removeUsingPOST_21
2019-05-27 14:31:32 -Generating unique operation named: saveUsingPOST_10
2019-05-27 14:31:32 -Generating unique operation named: treeUsingGET_1
2019-05-27 14:31:32 -Generating unique operation named: treeUsingGET_2
2019-05-27 14:31:32 -Generating unique operation named: updateUsingPOST_11
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_11
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_12
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_13
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_22
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_23
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_12
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_12
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_13
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_14
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_24
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_25
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingGET_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_13
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPUT_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 14:31:33 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_13
2019-05-27 14:31:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_14
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_15
2019-05-27 14:31:33 -Generating unique operation named: printEditUsingGET_1
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_26
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingGET_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_14
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPUT_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 14:31:33 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_14
2019-05-27 14:31:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_15
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_16
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_13
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_14
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_15
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_17
2019-05-27 14:31:33 -Generating unique operation named: listUsingHEAD_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingPOST_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingPUT_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingPATCH_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingDELETE_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 14:31:33 -Generating unique operation named: listUsingTRACE_1
2019-05-27 14:31:33 -Generating unique operation named: countDDUsingGET_1
2019-05-27 14:31:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 14:31:33 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_15
2019-05-27 14:31:33 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_16
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_18
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_27
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_15
2019-05-27 14:31:33 -Generating unique operation named: treeUsingGET_3
2019-05-27 14:31:33 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_16
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_16
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_17
2019-05-27 14:31:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_19
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_28
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_29
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_16
2019-05-27 14:31:33 -Generating unique operation named: updateUsingGET_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_17
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPUT_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 14:31:33 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 14:31:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_17
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_18
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_20
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_30
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_31
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_17
2019-05-27 14:31:33 -Generating unique operation named: updateUsingGET_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_18
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPUT_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 14:31:33 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 14:31:33 -Generating unique operation named: addUsingGET_18
2019-05-27 14:31:33 -Generating unique operation named: editUsingGET_19
2019-05-27 14:31:33 -Generating unique operation named: listUsingGET_21
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_32
2019-05-27 14:31:33 -Generating unique operation named: removeUsingPOST_33
2019-05-27 14:31:33 -Generating unique operation named: saveUsingPOST_18
2019-05-27 14:31:33 -Generating unique operation named: updateUsingGET_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPOST_19
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPUT_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 14:31:33 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 14:31:33 -Starting Quartz Scheduler now
2019-05-27 14:31:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 14:31:33 -Starting...
2019-05-27 14:31:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 14:31:34 -Started.
2019-05-27 14:31:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 14:31:34 -Using a shared selector for servlet write/read
2019-05-27 14:31:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 14:31:34 -Started BootdoApplication in 45.184 seconds (JVM running for 46.145)
2019-05-27 14:31:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 14:31:34 -==> Parameters: 
2019-05-27 14:31:34 -<==      Total: 1
2019-05-27 14:32:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 14:33:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 14:33:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 14:33:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-05-27 14:33:41 -Enabling session validation scheduler...
2019-05-27 14:33:41 -请求地址 : http://localhost:8081/login;JSESSIONID=4dfbfc97-507e-448d-a9c4-43664e6b74db
2019-05-27 14:33:41 -HTTP METHOD : GET
2019-05-27 14:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 14:33:41 -参数 : [{}]
2019-05-27 14:33:41 -耗时 : 13
2019-05-27 14:33:41 -返回值 : login
2019-05-27 14:33:43 -请求地址 : http://localhost:8081/getVerify
2019-05-27 14:33:43 -HTTP METHOD : GET
2019-05-27 14:33:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 14:33:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@422bfe13, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4614728e]
2019-05-27 14:33:50 -2191
2019-05-27 14:33:52 -耗时 : 8744
2019-05-27 14:33:52 -返回值 : null
2019-05-27 14:33:58 -请求地址 : http://localhost:8081/login
2019-05-27 14:33:58 -HTTP METHOD : POST
2019-05-27 14:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 14:33:58 -参数 : [admin, 111111, 2191, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b984f4c]
2019-05-27 14:33:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 14:33:59 -==> Parameters: admin(String)
2019-05-27 14:33:59 -<==      Total: 1
2019-05-27 14:33:59 -耗时 : 264
2019-05-27 14:33:59 -返回值 : {msg=操作成功, code=0}
2019-05-27 14:33:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 14:33:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 14:33:59 -==> Parameters: 1(Long), admin(String), 登录(String), 265(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 14:33:59.455(Timestamp)
2019-05-27 14:33:59 -<==    Updates: 1
2019-05-27 14:33:59 -请求地址 : http://localhost:8081/index
2019-05-27 14:33:59 -HTTP METHOD : GET
2019-05-27 14:33:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 14:33:59 -参数 : [{}]
2019-05-27 14:33:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 14:33:59 -==> Parameters: 1(Long)
2019-05-27 14:34:00 -<==      Total: 50
2019-05-27 14:34:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 14:34:00 -==> Parameters: 138(Long)
2019-05-27 14:34:00 -<==      Total: 1
2019-05-27 14:34:00 -耗时 : 405
2019-05-27 14:34:00 -返回值 : index_v1
2019-05-27 14:34:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 14:34:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 405(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 14:34:00.419(Timestamp)
2019-05-27 14:34:00 -<==    Updates: 1
2019-05-27 14:34:00 -请求地址 : http://localhost:8081/main
2019-05-27 14:34:00 -HTTP METHOD : GET
2019-05-27 14:34:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 14:34:00 -参数 : []
2019-05-27 14:34:00 -耗时 : 0
2019-05-27 14:34:00 -返回值 : main
2019-05-27 14:34:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 14:34:01 -HTTP METHOD : GET
2019-05-27 14:34:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 14:34:01 -参数 : []
2019-05-27 14:34:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 14:34:01 -请求地址 : http://localhost:8081/main
2019-05-27 14:34:01 -HTTP METHOD : GET
2019-05-27 14:34:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 14:34:01 -参数 : []
2019-05-27 14:34:01 -耗时 : 0
2019-05-27 14:34:01 -返回值 : main
2019-05-27 14:34:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 14:34:01 -<==      Total: 0
2019-05-27 14:34:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 14:34:01 -==> Parameters: 1(Long), 0(String)
2019-05-27 14:34:01 -<==      Total: 1
2019-05-27 14:34:01 -耗时 : 288
2019-05-27 14:34:01 -返回值 : com.bootdo.common.utils.PageUtils@452586eb
2019-05-27 14:34:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 14:34:50 -==> Parameters: 1(Long)
2019-05-27 14:34:50 -<==      Total: 94
2019-05-27 14:34:50 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 14:34:50 -HTTP METHOD : GET
2019-05-27 14:34:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 14:34:50 -参数 : []
2019-05-27 14:34:50 -耗时 : 0
2019-05-27 14:34:50 -返回值 : /moneyList/moneyWZ
2019-05-27 14:34:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 14:34:51 -HTTP METHOD : GET
2019-05-27 14:34:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 14:34:51 -参数 : [userType]
2019-05-27 14:34:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 14:34:52 -==> Parameters: userType(String)
2019-05-27 14:34:52 -<==      Total: 4
2019-05-27 14:34:52 -耗时 : 116
2019-05-27 14:34:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 14:34:52 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 14:34:52 -HTTP METHOD : GET
2019-05-27 14:34:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 14:34:52 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@12b76960]
2019-05-27 14:34:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 14:34:52 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 14:34:52 -<==      Total: 3
2019-05-27 14:34:52 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 14:34:52 -==> Parameters: 
2019-05-27 14:34:52 -<==      Total: 1
2019-05-27 14:34:52 -耗时 : 462
2019-05-27 14:34:52 -返回值 : com.bootdo.common.utils.PageUtils@386c9780
2019-05-27 15:02:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 409]
2019-05-27 15:06:43 -Starting BootdoApplication on PC-201905091110 with PID 22140 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 15:06:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 15:06:43 -The following profiles are active: dev
2019-05-27 15:06:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Mon May 27 15:06:43 CST 2019]; root of context hierarchy
2019-05-27 15:06:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 15:06:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56874832] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$48e076d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 15:06:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 15:06:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:06:58 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 15:06:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 15:06:58 -Starting service [Tomcat]
2019-05-27 15:06:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 15:06:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 15:06:58 -Initializing Spring embedded WebApplicationContext
2019-05-27 15:06:58 -Root WebApplicationContext: initialization completed in 15252 ms
2019-05-27 15:07:00 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 15:07:00 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 15:07:00 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 15:07:00 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 15:07:00 -Filter xssFilter was not registered (disabled)
2019-05-27 15:07:00 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 15:07:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 15:07:00 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 15:07:00 -Servlet dispatcherServlet mapped to [/]
2019-05-27 15:07:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Mon May 27 15:06:43 CST 2019]; root of context hierarchy
2019-05-27 15:07:07 -Using default implementation for ThreadExecutor
2019-05-27 15:07:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 15:07:07 -Quartz Scheduler v.2.2.1 created.
2019-05-27 15:07:07 -RAMJobStore initialized.
2019-05-27 15:07:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 15:07:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 15:07:07 -Quartz scheduler version: 2.2.1
2019-05-27 15:07:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@455d04d2
2019-05-27 15:07:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 15:07:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 15:07:13 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 15:07:13 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 15:07:13 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 15:07:13 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 15:07:13 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 15:07:13 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 15:07:13 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 15:07:13 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 15:07:13 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 15:07:13 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 15:07:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 15:07:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 15:07:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 15:07:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 15:07:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 15:07:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 15:07:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 15:07:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 15:07:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 15:07:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 15:07:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 15:07:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 15:07:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 15:07:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 15:07:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 15:07:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 15:07:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 15:07:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 15:07:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 15:07:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 15:07:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 15:07:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 15:07:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 15:07:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 15:07:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 15:07:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 15:07:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 15:07:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 15:07:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 15:07:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 15:07:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 15:07:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 15:07:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 15:07:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 15:07:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 15:07:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 15:07:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 15:07:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 15:07:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 15:07:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 15:07:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 15:07:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 15:07:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 15:07:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 15:07:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 15:07:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 15:07:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 15:07:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 15:07:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 15:07:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 15:07:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 15:07:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 15:07:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 15:07:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 15:07:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 15:07:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 15:07:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 15:07:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 15:07:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 15:07:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 15:07:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 15:07:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 15:07:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 15:07:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 15:07:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 15:07:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 15:07:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:07:13 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 15:07:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 15:07:13 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:07:13 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 15:07:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:07:13 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 15:07:13 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 15:07:13 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 15:07:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 15:07:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 15:07:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 15:07:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:07:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Mon May 27 15:06:43 CST 2019]; root of context hierarchy
2019-05-27 15:07:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:07:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:07:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:07:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 15:07:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 15:07:20 -Registering beans for JMX exposure on startup
2019-05-27 15:07:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 15:07:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 15:07:20 -Starting beans in phase 2147483647
2019-05-27 15:07:20 -Context refreshed
2019-05-27 15:07:20 -Found 1 custom documentation plugin(s)
2019-05-27 15:07:20 -Scanning for api listing references
2019-05-27 15:07:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 15:07:21 -Generating unique operation named: removeUsingPOST_1
2019-05-27 15:07:21 -Generating unique operation named: addUsingGET_1
2019-05-27 15:07:21 -Generating unique operation named: editUsingGET_1
2019-05-27 15:07:22 -Generating unique operation named: listUsingGET_1
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_2
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_3
2019-05-27 15:07:22 -Generating unique operation named: saveUsingPOST_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingGET_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPOST_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPUT_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 15:07:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 15:07:22 -Generating unique operation named: addUsingGET_2
2019-05-27 15:07:22 -Generating unique operation named: editUsingGET_2
2019-05-27 15:07:22 -Generating unique operation named: listUsingGET_2
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_4
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_5
2019-05-27 15:07:22 -Generating unique operation named: saveUsingPOST_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPOST_2
2019-05-27 15:07:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 15:07:22 -Generating unique operation named: addUsingGET_3
2019-05-27 15:07:22 -Generating unique operation named: editUsingGET_3
2019-05-27 15:07:22 -Generating unique operation named: listUsingGET_3
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_6
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_7
2019-05-27 15:07:22 -Generating unique operation named: saveUsingPOST_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingGET_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPOST_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPUT_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 15:07:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 15:07:22 -Generating unique operation named: addUsingGET_4
2019-05-27 15:07:22 -Generating unique operation named: editUsingGET_4
2019-05-27 15:07:22 -Generating unique operation named: listUsingGET_4
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_8
2019-05-27 15:07:22 -Generating unique operation named: removeUsingPOST_9
2019-05-27 15:07:22 -Generating unique operation named: saveUsingPOST_4
2019-05-27 15:07:22 -Generating unique operation named: updateUsingGET_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPOST_4
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPUT_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 15:07:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 15:07:22 -Generating unique operation named: ElecUsingGET_1
2019-05-27 15:07:22 -Generating unique operation named: addUsingGET_5
2019-05-27 15:07:23 -Generating unique operation named: editUsingGET_5
2019-05-27 15:07:23 -Generating unique operation named: listUsingGET_5
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_10
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_11
2019-05-27 15:07:23 -Generating unique operation named: saveUsingPOST_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingGET_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPOST_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPUT_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 15:07:23 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 15:07:23 -Generating unique operation named: editUsingGET_6
2019-05-27 15:07:23 -Generating unique operation named: listUsingGET_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPOST_6
2019-05-27 15:07:23 -Generating unique operation named: addUsingGET_6
2019-05-27 15:07:23 -Generating unique operation named: editUsingGET_7
2019-05-27 15:07:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 15:07:23 -Generating unique operation named: listUsingGET_7
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_12
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_13
2019-05-27 15:07:23 -Generating unique operation named: saveUsingPOST_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingGET_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPOST_7
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPUT_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 15:07:23 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 15:07:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 15:07:23 -Generating unique operation named: addUsingGET_7
2019-05-27 15:07:23 -Generating unique operation named: editUsingGET_8
2019-05-27 15:07:23 -Generating unique operation named: listUsingGET_8
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_14
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_15
2019-05-27 15:07:23 -Generating unique operation named: saveUsingPOST_7
2019-05-27 15:07:23 -Generating unique operation named: updateUsingGET_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPOST_8
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPUT_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 15:07:23 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 15:07:23 -Generating unique operation named: addUsingGET_8
2019-05-27 15:07:23 -Generating unique operation named: editUsingGET_9
2019-05-27 15:07:23 -Generating unique operation named: listUsingGET_9
2019-05-27 15:07:23 -Generating unique operation named: removeUsingPOST_16
2019-05-27 15:07:24 -Generating unique operation named: removeUsingPOST_17
2019-05-27 15:07:24 -Generating unique operation named: saveUsingPOST_8
2019-05-27 15:07:24 -Generating unique operation named: updateUsingGET_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingPOST_9
2019-05-27 15:07:24 -Generating unique operation named: updateUsingPUT_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 15:07:24 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 15:07:24 -Generating unique operation named: addUsingGET_9
2019-05-27 15:07:24 -Generating unique operation named: editUsingGET_10
2019-05-27 15:07:24 -Generating unique operation named: infoUsingGET_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingPOST_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingPUT_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 15:07:24 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 15:07:24 -Generating unique operation named: listUsingGET_10
2019-05-27 15:07:24 -Generating unique operation named: removeUsingPOST_18
2019-05-27 15:07:24 -Generating unique operation named: removeUsingPOST_19
2019-05-27 15:07:24 -Generating unique operation named: saveUsingPOST_9
2019-05-27 15:07:24 -Generating unique operation named: updateUsingPOST_10
2019-05-27 15:07:24 -Generating unique operation named: listUsingGET_11
2019-05-27 15:07:24 -Generating unique operation named: removeUsingPOST_20
2019-05-27 15:07:24 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 15:07:25 -Generating unique operation named: addUsingGET_10
2019-05-27 15:07:25 -Generating unique operation named: editUsingGET_11
2019-05-27 15:07:25 -Generating unique operation named: listUsingGET_12
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_21
2019-05-27 15:07:25 -Generating unique operation named: saveUsingPOST_10
2019-05-27 15:07:25 -Generating unique operation named: treeUsingGET_1
2019-05-27 15:07:25 -Generating unique operation named: treeUsingGET_2
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPOST_11
2019-05-27 15:07:25 -Generating unique operation named: addUsingGET_11
2019-05-27 15:07:25 -Generating unique operation named: editUsingGET_12
2019-05-27 15:07:25 -Generating unique operation named: listUsingGET_13
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_22
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_23
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPOST_12
2019-05-27 15:07:25 -Generating unique operation named: addUsingGET_12
2019-05-27 15:07:25 -Generating unique operation named: editUsingGET_13
2019-05-27 15:07:25 -Generating unique operation named: listUsingGET_14
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_24
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_25
2019-05-27 15:07:25 -Generating unique operation named: saveUsingPOST_11
2019-05-27 15:07:25 -Generating unique operation named: updateUsingGET_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPOST_13
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPUT_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 15:07:25 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 15:07:25 -Generating unique operation named: addUsingGET_13
2019-05-27 15:07:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 15:07:25 -Generating unique operation named: editUsingGET_14
2019-05-27 15:07:25 -Generating unique operation named: listUsingGET_15
2019-05-27 15:07:25 -Generating unique operation named: printEditUsingGET_1
2019-05-27 15:07:25 -Generating unique operation named: removeUsingPOST_26
2019-05-27 15:07:25 -Generating unique operation named: saveUsingPOST_12
2019-05-27 15:07:25 -Generating unique operation named: updateUsingGET_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPOST_14
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPUT_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 15:07:25 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 15:07:25 -Generating unique operation named: addUsingGET_14
2019-05-27 15:07:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 15:07:25 -Generating unique operation named: editUsingGET_15
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_16
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_13
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_14
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPOST_15
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_17
2019-05-27 15:07:26 -Generating unique operation named: listUsingHEAD_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingPOST_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingPUT_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingPATCH_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingDELETE_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 15:07:26 -Generating unique operation named: listUsingTRACE_1
2019-05-27 15:07:26 -Generating unique operation named: countDDUsingGET_1
2019-05-27 15:07:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 15:07:26 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 15:07:26 -Generating unique operation named: addUsingGET_15
2019-05-27 15:07:26 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 15:07:26 -Generating unique operation named: editUsingGET_16
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_18
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_27
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_15
2019-05-27 15:07:26 -Generating unique operation named: treeUsingGET_3
2019-05-27 15:07:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPOST_16
2019-05-27 15:07:26 -Generating unique operation named: addUsingGET_16
2019-05-27 15:07:26 -Generating unique operation named: editUsingGET_17
2019-05-27 15:07:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_19
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_28
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_29
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_16
2019-05-27 15:07:26 -Generating unique operation named: updateUsingGET_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPOST_17
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPUT_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 15:07:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 15:07:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 15:07:26 -Generating unique operation named: addUsingGET_17
2019-05-27 15:07:26 -Generating unique operation named: editUsingGET_18
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_20
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_30
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_31
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_17
2019-05-27 15:07:26 -Generating unique operation named: updateUsingGET_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPOST_18
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPUT_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 15:07:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 15:07:26 -Generating unique operation named: addUsingGET_18
2019-05-27 15:07:26 -Generating unique operation named: editUsingGET_19
2019-05-27 15:07:26 -Generating unique operation named: listUsingGET_21
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_32
2019-05-27 15:07:26 -Generating unique operation named: removeUsingPOST_33
2019-05-27 15:07:26 -Generating unique operation named: saveUsingPOST_18
2019-05-27 15:07:26 -Generating unique operation named: updateUsingGET_12
2019-05-27 15:07:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPOST_19
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPUT_12
2019-05-27 15:07:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 15:07:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 15:07:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 15:07:27 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 15:07:27 -Starting Quartz Scheduler now
2019-05-27 15:07:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 15:07:27 -Starting...
2019-05-27 15:07:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 15:07:27 -Started.
2019-05-27 15:07:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 15:07:27 -Using a shared selector for servlet write/read
2019-05-27 15:07:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 15:07:27 -Started BootdoApplication in 47.544 seconds (JVM running for 50.794)
2019-05-27 15:07:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 15:07:28 -==> Parameters: 
2019-05-27 15:07:28 -<==      Total: 1
2019-05-27 15:07:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 15:07:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 15:07:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-27 15:07:38 -Enabling session validation scheduler...
2019-05-27 15:07:38 -请求地址 : http://localhost:8081/login;JSESSIONID=035e907f-b38d-4fe1-82b1-01cd6072f409
2019-05-27 15:07:38 -HTTP METHOD : GET
2019-05-27 15:07:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 15:07:38 -参数 : [{}]
2019-05-27 15:07:38 -耗时 : 7
2019-05-27 15:07:38 -返回值 : login
2019-05-27 15:07:41 -请求地址 : http://localhost:8081/getVerify
2019-05-27 15:07:41 -HTTP METHOD : GET
2019-05-27 15:07:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 15:07:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5932c568, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2110b42]
2019-05-27 15:07:55 -9890
2019-05-27 15:07:56 -耗时 : 15011
2019-05-27 15:07:56 -返回值 : null
2019-05-27 15:08:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 15:08:16 -请求地址 : http://localhost:8081/login
2019-05-27 15:08:16 -HTTP METHOD : POST
2019-05-27 15:08:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 15:08:16 -参数 : [admin, 111111, 9890, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ffc5051]
2019-05-27 15:08:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 15:08:16 -==> Parameters: admin(String)
2019-05-27 15:08:17 -<==      Total: 1
2019-05-27 15:08:17 -耗时 : 445
2019-05-27 15:08:17 -返回值 : {msg=操作成功, code=0}
2019-05-27 15:08:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 15:08:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:08:17 -==> Parameters: 1(Long), admin(String), 登录(String), 446(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 15:08:17.566(Timestamp)
2019-05-27 15:08:17 -请求地址 : http://localhost:8081/index
2019-05-27 15:08:17 -HTTP METHOD : GET
2019-05-27 15:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 15:08:17 -参数 : [{}]
2019-05-27 15:08:17 -<==    Updates: 1
2019-05-27 15:08:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 15:08:18 -==> Parameters: 1(Long)
2019-05-27 15:08:18 -<==      Total: 50
2019-05-27 15:08:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 15:08:18 -==> Parameters: 138(Long)
2019-05-27 15:08:18 -<==      Total: 1
2019-05-27 15:08:18 -耗时 : 800
2019-05-27 15:08:18 -返回值 : index_v1
2019-05-27 15:08:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:08:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 801(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 15:08:18.925(Timestamp)
2019-05-27 15:08:19 -<==    Updates: 1
2019-05-27 15:08:19 -请求地址 : http://localhost:8081/main
2019-05-27 15:08:19 -HTTP METHOD : GET
2019-05-27 15:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 15:08:19 -参数 : []
2019-05-27 15:08:19 -耗时 : 1
2019-05-27 15:08:19 -返回值 : main
2019-05-27 15:08:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 15:08:19 -HTTP METHOD : GET
2019-05-27 15:08:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 15:08:19 -参数 : []
2019-05-27 15:08:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 15:08:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 15:08:19 -<==      Total: 0
2019-05-27 15:08:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 15:08:19 -==> Parameters: 1(Long), 0(String)
2019-05-27 15:08:19 -<==      Total: 1
2019-05-27 15:08:19 -耗时 : 262
2019-05-27 15:08:19 -返回值 : com.bootdo.common.utils.PageUtils@a338810
2019-05-27 15:08:19 -请求地址 : http://localhost:8081/main
2019-05-27 15:08:19 -HTTP METHOD : GET
2019-05-27 15:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 15:08:19 -参数 : []
2019-05-27 15:08:19 -耗时 : 1
2019-05-27 15:08:19 -返回值 : main
2019-05-27 15:08:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 15:08:23 -==> Parameters: 1(Long)
2019-05-27 15:08:23 -<==      Total: 94
2019-05-27 15:08:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 15:08:23 -HTTP METHOD : GET
2019-05-27 15:08:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 15:08:23 -参数 : []
2019-05-27 15:08:23 -耗时 : 1
2019-05-27 15:08:23 -返回值 : /moneyList/moneyWZ
2019-05-27 15:08:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 15:08:24 -HTTP METHOD : GET
2019-05-27 15:08:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 15:08:24 -参数 : [userType]
2019-05-27 15:08:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 15:08:24 -==> Parameters: userType(String)
2019-05-27 15:08:24 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 15:08:24 -HTTP METHOD : GET
2019-05-27 15:08:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 15:08:24 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@1b433200]
2019-05-27 15:08:24 -<==      Total: 4
2019-05-27 15:08:24 -耗时 : 256
2019-05-27 15:08:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 15:08:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 15:08:25 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 15:08:25 -<==      Total: 3
2019-05-27 15:08:25 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 15:08:25 -==> Parameters: 
2019-05-27 15:08:25 -<==      Total: 1
2019-05-27 15:08:25 -耗时 : 1110
2019-05-27 15:08:25 -返回值 : com.bootdo.common.utils.PageUtils@7caf4155
2019-05-27 15:08:46 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 15:08:46 -HTTP METHOD : POST
2019-05-27 15:08:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 15:08:46 -参数 : [[Ljava.lang.Long;@393558de]
2019-05-27 15:08:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? ) 
2019-05-27 15:08:47 -==> Parameters: 9(Long), 11(Long)
2019-05-27 15:08:47 -<==      Total: 2
2019-05-27 15:18:09 -Starting BootdoApplication on PC-201905091110 with PID 3532 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 15:18:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 15:18:09 -The following profiles are active: dev
2019-05-27 15:18:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 15:18:09 CST 2019]; root of context hierarchy
2019-05-27 15:18:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 15:18:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5f51d7f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$51ab069a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 15:18:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 15:18:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 15:18:20 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 15:18:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 15:18:20 -Starting service [Tomcat]
2019-05-27 15:18:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 15:18:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 15:18:21 -Initializing Spring embedded WebApplicationContext
2019-05-27 15:18:21 -Root WebApplicationContext: initialization completed in 11346 ms
2019-05-27 15:18:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 15:18:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 15:18:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 15:18:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 15:18:22 -Filter xssFilter was not registered (disabled)
2019-05-27 15:18:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 15:18:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 15:18:22 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 15:18:22 -Servlet dispatcherServlet mapped to [/]
2019-05-27 15:18:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 15:18:09 CST 2019]; root of context hierarchy
2019-05-27 15:18:32 -Using default implementation for ThreadExecutor
2019-05-27 15:18:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 15:18:32 -Quartz Scheduler v.2.2.1 created.
2019-05-27 15:18:32 -RAMJobStore initialized.
2019-05-27 15:18:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 15:18:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 15:18:32 -Quartz scheduler version: 2.2.1
2019-05-27 15:18:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6a5dd083
2019-05-27 15:18:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 15:18:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 15:18:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 15:18:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 15:18:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 15:18:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 15:18:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 15:18:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 15:18:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 15:18:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 15:18:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 15:18:36 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 15:18:36 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 15:18:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 15:18:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 15:18:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 15:18:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 15:18:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 15:18:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 15:18:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 15:18:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 15:18:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 15:18:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 15:18:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 15:18:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 15:18:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 15:18:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 15:18:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 15:18:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 15:18:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 15:18:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 15:18:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 15:18:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 15:18:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 15:18:36 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 15:18:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 15:18:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 15:18:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 15:18:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 15:18:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 15:18:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 15:18:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 15:18:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 15:18:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 15:18:36 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 15:18:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 15:18:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 15:18:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 15:18:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 15:18:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 15:18:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 15:18:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 15:18:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 15:18:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 15:18:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 15:18:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 15:18:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 15:18:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 15:18:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 15:18:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 15:18:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 15:18:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 15:18:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 15:18:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 15:18:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 15:18:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 15:18:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 15:18:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 15:18:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 15:18:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 15:18:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 15:18:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 15:18:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 15:18:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 15:18:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 15:18:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 15:18:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 15:18:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 15:18:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 15:18:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 15:18:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 15:18:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 15:18:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 15:18:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 15:18:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 15:18:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 15:18:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 15:18:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 15:18:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 15:18:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 15:18:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 15:18:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 15:18:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 15:18:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:18:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 15:18:09 CST 2019]; root of context hierarchy
2019-05-27 15:18:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:18:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:18:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 15:18:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 15:18:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 15:18:44 -Registering beans for JMX exposure on startup
2019-05-27 15:18:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 15:18:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 15:18:44 -Starting beans in phase 2147483647
2019-05-27 15:18:44 -Context refreshed
2019-05-27 15:18:44 -Found 1 custom documentation plugin(s)
2019-05-27 15:18:44 -Scanning for api listing references
2019-05-27 15:18:46 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_1
2019-05-27 15:18:46 -Generating unique operation named: addUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_2
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_3
2019-05-27 15:18:46 -Generating unique operation named: saveUsingPOST_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPUT_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 15:18:46 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 15:18:46 -Generating unique operation named: addUsingGET_2
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_2
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_2
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_4
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_5
2019-05-27 15:18:46 -Generating unique operation named: saveUsingPOST_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_2
2019-05-27 15:18:46 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: addUsingGET_3
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_3
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_3
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_6
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_7
2019-05-27 15:18:46 -Generating unique operation named: saveUsingPOST_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingGET_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPUT_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 15:18:46 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 15:18:46 -Generating unique operation named: addUsingGET_4
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_4
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_4
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_8
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_9
2019-05-27 15:18:46 -Generating unique operation named: saveUsingPOST_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingGET_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPUT_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 15:18:46 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 15:18:46 -Generating unique operation named: ElecUsingGET_1
2019-05-27 15:18:46 -Generating unique operation named: addUsingGET_5
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_5
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_5
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_10
2019-05-27 15:18:46 -Generating unique operation named: removeUsingPOST_11
2019-05-27 15:18:46 -Generating unique operation named: saveUsingPOST_5
2019-05-27 15:18:46 -Generating unique operation named: updateUsingGET_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_5
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPUT_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 15:18:46 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 15:18:46 -Generating unique operation named: editUsingGET_6
2019-05-27 15:18:46 -Generating unique operation named: listUsingGET_6
2019-05-27 15:18:46 -Generating unique operation named: updateUsingPOST_6
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_6
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_7
2019-05-27 15:18:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_7
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_12
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_13
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingGET_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPUT_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 15:18:47 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 15:18:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_7
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_8
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_8
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_14
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_15
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingGET_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPUT_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 15:18:47 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_8
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_9
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_9
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_16
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_17
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingGET_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_9
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPUT_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 15:18:47 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_9
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_10
2019-05-27 15:18:47 -Generating unique operation named: infoUsingGET_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingPOST_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingPUT_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 15:18:47 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_10
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_18
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_19
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_9
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_10
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_11
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_20
2019-05-27 15:18:47 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_10
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_11
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_12
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_21
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_10
2019-05-27 15:18:47 -Generating unique operation named: treeUsingGET_1
2019-05-27 15:18:47 -Generating unique operation named: treeUsingGET_2
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_11
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_11
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_12
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_13
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_22
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_23
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_12
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_12
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_13
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_14
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_24
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_25
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_11
2019-05-27 15:18:47 -Generating unique operation named: updateUsingGET_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_13
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPUT_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 15:18:47 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 15:18:47 -Generating unique operation named: addUsingGET_13
2019-05-27 15:18:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 15:18:47 -Generating unique operation named: editUsingGET_14
2019-05-27 15:18:47 -Generating unique operation named: listUsingGET_15
2019-05-27 15:18:47 -Generating unique operation named: printEditUsingGET_1
2019-05-27 15:18:47 -Generating unique operation named: removeUsingPOST_26
2019-05-27 15:18:47 -Generating unique operation named: saveUsingPOST_12
2019-05-27 15:18:47 -Generating unique operation named: updateUsingGET_9
2019-05-27 15:18:47 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPOST_14
2019-05-27 15:18:47 -Generating unique operation named: updateUsingPUT_9
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 15:18:48 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 15:18:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 15:18:48 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 15:18:48 -Generating unique operation named: addUsingGET_14
2019-05-27 15:18:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 15:18:48 -Generating unique operation named: editUsingGET_15
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_16
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_13
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_14
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPOST_15
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_17
2019-05-27 15:18:48 -Generating unique operation named: listUsingHEAD_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingPOST_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingPUT_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingPATCH_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingDELETE_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 15:18:48 -Generating unique operation named: listUsingTRACE_1
2019-05-27 15:18:48 -Generating unique operation named: countDDUsingGET_1
2019-05-27 15:18:48 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 15:18:48 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 15:18:48 -Generating unique operation named: addUsingGET_15
2019-05-27 15:18:48 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 15:18:48 -Generating unique operation named: editUsingGET_16
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_18
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_27
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_15
2019-05-27 15:18:48 -Generating unique operation named: treeUsingGET_3
2019-05-27 15:18:48 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPOST_16
2019-05-27 15:18:48 -Generating unique operation named: addUsingGET_16
2019-05-27 15:18:48 -Generating unique operation named: editUsingGET_17
2019-05-27 15:18:48 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_19
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_28
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_29
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_16
2019-05-27 15:18:48 -Generating unique operation named: updateUsingGET_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPOST_17
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPUT_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 15:18:48 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 15:18:48 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 15:18:48 -Generating unique operation named: addUsingGET_17
2019-05-27 15:18:48 -Generating unique operation named: editUsingGET_18
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_20
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_30
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_31
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_17
2019-05-27 15:18:48 -Generating unique operation named: updateUsingGET_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPOST_18
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPUT_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 15:18:48 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 15:18:48 -Generating unique operation named: addUsingGET_18
2019-05-27 15:18:48 -Generating unique operation named: editUsingGET_19
2019-05-27 15:18:48 -Generating unique operation named: listUsingGET_21
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_32
2019-05-27 15:18:48 -Generating unique operation named: removeUsingPOST_33
2019-05-27 15:18:48 -Generating unique operation named: saveUsingPOST_18
2019-05-27 15:18:48 -Generating unique operation named: updateUsingGET_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPOST_19
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPUT_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 15:18:48 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 15:18:49 -Starting Quartz Scheduler now
2019-05-27 15:18:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 15:18:49 -Starting...
2019-05-27 15:18:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 15:18:49 -Started.
2019-05-27 15:18:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 15:18:49 -Using a shared selector for servlet write/read
2019-05-27 15:18:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 15:18:49 -Started BootdoApplication in 41.053 seconds (JVM running for 41.858)
2019-05-27 15:18:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 15:18:50 -==> Parameters: 
2019-05-27 15:18:50 -<==      Total: 1
2019-05-27 15:19:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 15:19:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 15:19:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-05-27 15:19:21 -Enabling session validation scheduler...
2019-05-27 15:19:21 -请求地址 : http://localhost:8081/login;JSESSIONID=bee194ca-f0e2-415d-9ead-a02aeb7c9b2a
2019-05-27 15:19:21 -HTTP METHOD : GET
2019-05-27 15:19:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 15:19:21 -参数 : [{}]
2019-05-27 15:19:21 -耗时 : 6
2019-05-27 15:19:21 -返回值 : login
2019-05-27 15:19:23 -请求地址 : http://localhost:8081/login
2019-05-27 15:19:23 -HTTP METHOD : GET
2019-05-27 15:19:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 15:19:23 -参数 : [{}]
2019-05-27 15:19:23 -耗时 : 1
2019-05-27 15:19:23 -返回值 : login
2019-05-27 15:19:24 -请求地址 : http://localhost:8081/getVerify
2019-05-27 15:19:24 -HTTP METHOD : GET
2019-05-27 15:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 15:19:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e25cd82, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10e22036]
2019-05-27 15:19:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 15:19:46 -0736
2019-05-27 15:19:49 -耗时 : 25492
2019-05-27 15:19:49 -返回值 : null
2019-05-27 15:19:55 -请求地址 : http://localhost:8081/login
2019-05-27 15:19:55 -HTTP METHOD : POST
2019-05-27 15:19:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 15:19:55 -参数 : [admin, 111111, 0736, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bd66c01]
2019-05-27 15:19:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 15:19:55 -==> Parameters: admin(String)
2019-05-27 15:19:55 -<==      Total: 1
2019-05-27 15:19:55 -耗时 : 456
2019-05-27 15:19:55 -返回值 : {msg=操作成功, code=0}
2019-05-27 15:19:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 15:19:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:19:55 -==> Parameters: 1(Long), admin(String), 登录(String), 457(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 15:19:55.927(Timestamp)
2019-05-27 15:19:56 -请求地址 : http://localhost:8081/index
2019-05-27 15:19:56 -HTTP METHOD : GET
2019-05-27 15:19:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 15:19:56 -参数 : [{}]
2019-05-27 15:19:56 -<==    Updates: 1
2019-05-27 15:19:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 15:19:56 -==> Parameters: 1(Long)
2019-05-27 15:19:57 -<==      Total: 50
2019-05-27 15:19:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 15:19:57 -==> Parameters: 138(Long)
2019-05-27 15:19:57 -<==      Total: 1
2019-05-27 15:19:57 -耗时 : 1099
2019-05-27 15:19:57 -返回值 : index_v1
2019-05-27 15:19:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:19:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1099(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 15:19:57.621(Timestamp)
2019-05-27 15:19:57 -请求地址 : http://localhost:8081/main
2019-05-27 15:19:57 -HTTP METHOD : GET
2019-05-27 15:19:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 15:19:57 -参数 : []
2019-05-27 15:19:57 -耗时 : 1
2019-05-27 15:19:57 -返回值 : main
2019-05-27 15:19:57 -<==    Updates: 1
2019-05-27 15:19:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 15:19:58 -HTTP METHOD : GET
2019-05-27 15:19:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 15:19:58 -参数 : []
2019-05-27 15:19:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 15:19:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 15:19:58 -<==      Total: 0
2019-05-27 15:19:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 15:19:58 -==> Parameters: 1(Long), 0(String)
2019-05-27 15:19:58 -<==      Total: 1
2019-05-27 15:19:58 -耗时 : 93
2019-05-27 15:19:58 -返回值 : com.bootdo.common.utils.PageUtils@6d303bed
2019-05-27 15:19:58 -请求地址 : http://localhost:8081/main
2019-05-27 15:19:58 -HTTP METHOD : GET
2019-05-27 15:19:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 15:19:58 -参数 : []
2019-05-27 15:19:58 -耗时 : 0
2019-05-27 15:19:58 -返回值 : main
2019-05-27 15:20:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 15:20:03 -==> Parameters: 1(Long)
2019-05-27 15:20:03 -<==      Total: 94
2019-05-27 15:20:03 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 15:20:03 -HTTP METHOD : GET
2019-05-27 15:20:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 15:20:03 -参数 : []
2019-05-27 15:20:03 -耗时 : 0
2019-05-27 15:20:03 -返回值 : /moneyList/moneyWZ
2019-05-27 15:20:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 15:20:04 -HTTP METHOD : GET
2019-05-27 15:20:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 15:20:04 -参数 : [userType]
2019-05-27 15:20:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 15:20:04 -==> Parameters: userType(String)
2019-05-27 15:20:04 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 15:20:04 -HTTP METHOD : GET
2019-05-27 15:20:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 15:20:04 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@43b43fbb]
2019-05-27 15:20:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 15:20:04 -<==      Total: 4
2019-05-27 15:20:04 -耗时 : 178
2019-05-27 15:20:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 15:20:04 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 15:20:04 -<==      Total: 3
2019-05-27 15:20:04 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 15:20:04 -==> Parameters: 
2019-05-27 15:20:04 -<==      Total: 1
2019-05-27 15:20:04 -耗时 : 521
2019-05-27 15:20:04 -返回值 : com.bootdo.common.utils.PageUtils@221d0d83
2019-05-27 15:20:17 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 15:20:17 -HTTP METHOD : POST
2019-05-27 15:20:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 15:20:17 -参数 : [[Ljava.lang.Long;@58ab69cb]
2019-05-27 15:20:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 15:20:17 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 15:20:17 -<==      Total: 3
2019-05-27 15:20:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:17 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 8.00(BigDecimal), 2019-05-27 15:20:17.708(Timestamp), 2019-03(String), 1(Long), 2019-05-27 15:20:17.708(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:18 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 0(String), 0(String), 1(Integer), 0.810(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), -8.00(BigDecimal), -8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 15:20:18.131(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:18 -==> Parameters: W-0011(String), 打发第(String), A(String), 2(String), 9(String), 1.80(BigDecimal), 2019-05-27 15:20:18.395(Timestamp), 2019-03(String), 1(Long), 2019-05-27 15:20:18.395(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:18 -==> Parameters: W-0011(String), 打发第(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.80(BigDecimal), 1.80(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 15:20:18.473(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:18 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 6(String), 0.00(BigDecimal), 2019-05-27 15:20:18.651(Timestamp), 2019-03(String), 1(Long), 2019-05-27 15:20:18.651(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 15:20:18 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 0(String), 0(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 15:20:18.725(Timestamp), 1(Long), null
2019-05-27 15:20:18 -<==    Updates: 1
2019-05-27 15:20:18 -耗时 : 1275
2019-05-27 15:20:18 -返回值 : {msg=操作成功, code=0}
2019-05-27 15:49:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 428]
2019-05-27 16:16:33 -请求地址 : http://localhost:8081/login;JSESSIONID=2e5ddd5c-4218-467f-837b-b0572430482b
2019-05-27 16:16:33 -HTTP METHOD : GET
2019-05-27 16:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 16:16:33 -参数 : [{}]
2019-05-27 16:16:33 -耗时 : 0
2019-05-27 16:16:33 -返回值 : login
2019-05-27 16:16:34 -请求地址 : http://localhost:8081/getVerify
2019-05-27 16:16:34 -HTTP METHOD : GET
2019-05-27 16:16:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 16:16:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@704936dc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36af23ea]
2019-05-27 16:16:34 -0922
2019-05-27 16:16:34 -耗时 : 25
2019-05-27 16:16:34 -返回值 : null
2019-05-27 16:16:38 -请求地址 : http://localhost:8081/login
2019-05-27 16:16:38 -HTTP METHOD : POST
2019-05-27 16:16:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 16:16:38 -参数 : [admin, 111111, 0922, org.apache.shiro.web.servlet.ShiroHttpServletRequest@243efc7e]
2019-05-27 16:16:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 16:16:38 -==> Parameters: admin(String)
2019-05-27 16:16:38 -<==      Total: 1
2019-05-27 16:16:38 -耗时 : 677
2019-05-27 16:16:38 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:16:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:16:38 -==> Parameters: 1(Long), admin(String), 登录(String), 677(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 16:16:38.945(Timestamp)
2019-05-27 16:16:38 -请求地址 : http://localhost:8081/index
2019-05-27 16:16:38 -HTTP METHOD : GET
2019-05-27 16:16:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:16:38 -参数 : [{}]
2019-05-27 16:16:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:16:38 -==> Parameters: 1(Long)
2019-05-27 16:16:39 -<==      Total: 50
2019-05-27 16:16:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:16:39 -==> Parameters: 138(Long)
2019-05-27 16:16:39 -<==      Total: 1
2019-05-27 16:16:39 -耗时 : 997
2019-05-27 16:16:39 -返回值 : index_v1
2019-05-27 16:16:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:16:40 -<==    Updates: 1
2019-05-27 16:16:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 999(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:16:39.969(Timestamp)
2019-05-27 16:16:40 -请求地址 : http://localhost:8081/main
2019-05-27 16:16:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:16:42 -请求地址 : http://localhost:8081/main
2019-05-27 16:16:45 -HTTP METHOD : GET
2019-05-27 16:16:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:16:45 -参数 : []
2019-05-27 16:16:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 16:16:45 -==> Parameters: 1(Long)
2019-05-27 16:16:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:16:45 -HTTP METHOD : GET
2019-05-27 16:16:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:16:45 -参数 : []
2019-05-27 16:16:45 -耗时 : 2876
2019-05-27 16:16:45 -返回值 : main
2019-05-27 16:16:45 -HTTP METHOD : GET
2019-05-27 16:16:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:16:45 -参数 : []
2019-05-27 16:16:45 -耗时 : 5109
2019-05-27 16:16:45 -返回值 : main
2019-05-27 16:16:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:16:46 -<==      Total: 0
2019-05-27 16:16:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:16:46 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:16:46 -<==      Total: 1
2019-05-27 16:16:46 -耗时 : 3853
2019-05-27 16:16:46 -返回值 : com.bootdo.common.utils.PageUtils@54f47996
2019-05-27 16:16:46 -<==    Updates: 1
2019-05-27 16:16:46 -<==      Total: 94
2019-05-27 16:16:46 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:16:46 -HTTP METHOD : GET
2019-05-27 16:16:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:16:46 -参数 : []
2019-05-27 16:16:46 -耗时 : 0
2019-05-27 16:16:46 -返回值 : /moneyList/moneyWZ
2019-05-27 16:16:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:16:51 -HTTP METHOD : GET
2019-05-27 16:16:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:16:51 -参数 : [userType]
2019-05-27 16:16:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:16:51 -==> Parameters: userType(String)
2019-05-27 16:16:51 -<==      Total: 4
2019-05-27 16:16:51 -耗时 : 98
2019-05-27 16:16:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:16:51 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:16:51 -HTTP METHOD : GET
2019-05-27 16:16:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:16:51 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@4ca9901e]
2019-05-27 16:16:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:16:51 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:16:51 -<==      Total: 3
2019-05-27 16:16:51 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:16:51 -==> Parameters: 
2019-05-27 16:16:51 -<==      Total: 1
2019-05-27 16:16:51 -耗时 : 253
2019-05-27 16:16:51 -返回值 : com.bootdo.common.utils.PageUtils@164e5bea
2019-05-27 16:17:02 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 16:17:02 -HTTP METHOD : POST
2019-05-27 16:17:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 16:17:02 -参数 : [[Ljava.lang.Long;@7cfc47fd]
2019-05-27 16:17:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:17:02 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:17:02 -<==      Total: 3
2019-05-27 16:17:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 8.00(BigDecimal), 2019-05-27 16:17:02.219(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:17:02.219(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), -8.00(BigDecimal), -8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:17:02.513(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 9(String), 1.80(BigDecimal), 2019-05-27 16:17:02.613(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:17:02.613(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.80(BigDecimal), -1.80(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:17:02.673(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 6(String), 3.60(BigDecimal), 2019-05-27 16:17:02.712(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:17:02.712(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:17:02 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), -3.60(BigDecimal), -3.60(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:17:02.755(Timestamp), 1(Long), null
2019-05-27 16:17:02 -<==    Updates: 1
2019-05-27 16:17:02 -耗时 : 578
2019-05-27 16:17:02 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:19:21 -Validating all active sessions...
2019-05-27 16:19:21 -Finished session validation.  No sessions were stopped.
2019-05-27 16:19:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 859]
2019-05-27 16:28:04 -Starting BootdoApplication on PC-201905091110 with PID 31524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 16:28:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 16:28:04 -The following profiles are active: dev
2019-05-27 16:28:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a3c96e3: startup date [Mon May 27 16:28:04 CST 2019]; root of context hierarchy
2019-05-27 16:28:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 16:28:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ed4adf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$512ddc97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 16:28:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 16:28:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:28:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 16:28:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 16:28:28 -Starting service [Tomcat]
2019-05-27 16:28:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 16:28:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 16:28:29 -Initializing Spring embedded WebApplicationContext
2019-05-27 16:28:29 -Root WebApplicationContext: initialization completed in 25156 ms
2019-05-27 16:28:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 16:28:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 16:28:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 16:28:31 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 16:28:31 -Filter xssFilter was not registered (disabled)
2019-05-27 16:28:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 16:28:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 16:28:31 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 16:28:31 -Servlet dispatcherServlet mapped to [/]
2019-05-27 16:28:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a3c96e3: startup date [Mon May 27 16:28:04 CST 2019]; root of context hierarchy
2019-05-27 16:28:41 -Using default implementation for ThreadExecutor
2019-05-27 16:28:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 16:28:41 -Quartz Scheduler v.2.2.1 created.
2019-05-27 16:28:41 -RAMJobStore initialized.
2019-05-27 16:28:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 16:28:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 16:28:41 -Quartz scheduler version: 2.2.1
2019-05-27 16:28:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@71687d8f
2019-05-27 16:28:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 16:28:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 16:28:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 16:28:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 16:28:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 16:28:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 16:28:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 16:28:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 16:28:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 16:28:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 16:28:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 16:28:48 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 16:28:48 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 16:28:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 16:28:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 16:28:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 16:28:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 16:28:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 16:28:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 16:28:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 16:28:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 16:28:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 16:28:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 16:28:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 16:28:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 16:28:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 16:28:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 16:28:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 16:28:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 16:28:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 16:28:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 16:28:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 16:28:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 16:28:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 16:28:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 16:28:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 16:28:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 16:28:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 16:28:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 16:28:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 16:28:49 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 16:28:49 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 16:28:49 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 16:28:49 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 16:28:49 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 16:28:49 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 16:28:49 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 16:28:49 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 16:28:49 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 16:28:49 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 16:28:49 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 16:28:49 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 16:28:49 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 16:28:49 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 16:28:49 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 16:28:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 16:28:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 16:28:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 16:28:49 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 16:28:49 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 16:28:49 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 16:28:49 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 16:28:49 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 16:28:49 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 16:28:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 16:28:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 16:28:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 16:28:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 16:28:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 16:28:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 16:28:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 16:28:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 16:28:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 16:28:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 16:28:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 16:28:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 16:28:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 16:28:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 16:28:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 16:28:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 16:28:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 16:28:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 16:28:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 16:28:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 16:28:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 16:28:49 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 16:28:49 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 16:28:49 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 16:28:49 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 16:28:49 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 16:28:49 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 16:28:49 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:28:49 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 16:28:49 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 16:28:49 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 16:28:49 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:28:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:28:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 16:28:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 16:28:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 16:28:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 16:28:50 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 16:28:50 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 16:28:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:28:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a3c96e3: startup date [Mon May 27 16:28:04 CST 2019]; root of context hierarchy
2019-05-27 16:28:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:28:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:28:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:28:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 16:28:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 16:28:58 -Registering beans for JMX exposure on startup
2019-05-27 16:28:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 16:28:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 16:28:58 -Starting beans in phase 2147483647
2019-05-27 16:28:58 -Context refreshed
2019-05-27 16:28:58 -Found 1 custom documentation plugin(s)
2019-05-27 16:28:58 -Scanning for api listing references
2019-05-27 16:29:00 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 16:29:00 -Generating unique operation named: removeUsingPOST_1
2019-05-27 16:29:00 -Generating unique operation named: addUsingGET_1
2019-05-27 16:29:01 -Generating unique operation named: editUsingGET_1
2019-05-27 16:29:01 -Generating unique operation named: listUsingGET_1
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_2
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_3
2019-05-27 16:29:01 -Generating unique operation named: saveUsingPOST_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingGET_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingPOST_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingPUT_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 16:29:01 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 16:29:01 -Generating unique operation named: addUsingGET_2
2019-05-27 16:29:01 -Generating unique operation named: editUsingGET_2
2019-05-27 16:29:01 -Generating unique operation named: listUsingGET_2
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_4
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_5
2019-05-27 16:29:01 -Generating unique operation named: saveUsingPOST_2
2019-05-27 16:29:01 -Generating unique operation named: updateUsingPOST_2
2019-05-27 16:29:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 16:29:01 -Generating unique operation named: addUsingGET_3
2019-05-27 16:29:01 -Generating unique operation named: editUsingGET_3
2019-05-27 16:29:01 -Generating unique operation named: listUsingGET_3
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_6
2019-05-27 16:29:01 -Generating unique operation named: removeUsingPOST_7
2019-05-27 16:29:01 -Generating unique operation named: saveUsingPOST_3
2019-05-27 16:29:01 -Generating unique operation named: updateUsingGET_2
2019-05-27 16:29:01 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 16:29:01 -Generating unique operation named: updateUsingPOST_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPUT_2
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 16:29:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 16:29:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 16:29:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 16:29:02 -Generating unique operation named: addUsingGET_4
2019-05-27 16:29:02 -Generating unique operation named: editUsingGET_4
2019-05-27 16:29:02 -Generating unique operation named: listUsingGET_4
2019-05-27 16:29:02 -Generating unique operation named: removeUsingPOST_8
2019-05-27 16:29:02 -Generating unique operation named: removeUsingPOST_9
2019-05-27 16:29:02 -Generating unique operation named: saveUsingPOST_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingGET_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPOST_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPUT_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 16:29:02 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 16:29:02 -Generating unique operation named: ElecUsingGET_1
2019-05-27 16:29:02 -Generating unique operation named: addUsingGET_5
2019-05-27 16:29:02 -Generating unique operation named: editUsingGET_5
2019-05-27 16:29:02 -Generating unique operation named: listUsingGET_5
2019-05-27 16:29:02 -Generating unique operation named: removeUsingPOST_10
2019-05-27 16:29:02 -Generating unique operation named: removeUsingPOST_11
2019-05-27 16:29:02 -Generating unique operation named: saveUsingPOST_5
2019-05-27 16:29:02 -Generating unique operation named: updateUsingGET_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPOST_5
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPUT_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 16:29:02 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 16:29:03 -Generating unique operation named: editUsingGET_6
2019-05-27 16:29:03 -Generating unique operation named: listUsingGET_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPOST_6
2019-05-27 16:29:03 -Generating unique operation named: addUsingGET_6
2019-05-27 16:29:03 -Generating unique operation named: editUsingGET_7
2019-05-27 16:29:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 16:29:03 -Generating unique operation named: listUsingGET_7
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_12
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_13
2019-05-27 16:29:03 -Generating unique operation named: saveUsingPOST_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingGET_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPOST_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPUT_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 16:29:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 16:29:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 16:29:03 -Generating unique operation named: addUsingGET_7
2019-05-27 16:29:03 -Generating unique operation named: editUsingGET_8
2019-05-27 16:29:03 -Generating unique operation named: listUsingGET_8
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_14
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_15
2019-05-27 16:29:03 -Generating unique operation named: saveUsingPOST_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingGET_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPOST_8
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPUT_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 16:29:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 16:29:03 -Generating unique operation named: addUsingGET_8
2019-05-27 16:29:03 -Generating unique operation named: editUsingGET_9
2019-05-27 16:29:03 -Generating unique operation named: listUsingGET_9
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_16
2019-05-27 16:29:03 -Generating unique operation named: removeUsingPOST_17
2019-05-27 16:29:03 -Generating unique operation named: saveUsingPOST_8
2019-05-27 16:29:03 -Generating unique operation named: updateUsingGET_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPOST_9
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPUT_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 16:29:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 16:29:04 -Generating unique operation named: addUsingGET_9
2019-05-27 16:29:04 -Generating unique operation named: editUsingGET_10
2019-05-27 16:29:04 -Generating unique operation named: infoUsingGET_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingPOST_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingPUT_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 16:29:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_10
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_18
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_19
2019-05-27 16:29:04 -Generating unique operation named: saveUsingPOST_9
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPOST_10
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_11
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_20
2019-05-27 16:29:04 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 16:29:04 -Generating unique operation named: addUsingGET_10
2019-05-27 16:29:04 -Generating unique operation named: editUsingGET_11
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_12
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_21
2019-05-27 16:29:04 -Generating unique operation named: saveUsingPOST_10
2019-05-27 16:29:04 -Generating unique operation named: treeUsingGET_1
2019-05-27 16:29:04 -Generating unique operation named: treeUsingGET_2
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPOST_11
2019-05-27 16:29:04 -Generating unique operation named: addUsingGET_11
2019-05-27 16:29:04 -Generating unique operation named: editUsingGET_12
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_13
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_22
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_23
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPOST_12
2019-05-27 16:29:04 -Generating unique operation named: addUsingGET_12
2019-05-27 16:29:04 -Generating unique operation named: editUsingGET_13
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_14
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_24
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_25
2019-05-27 16:29:04 -Generating unique operation named: saveUsingPOST_11
2019-05-27 16:29:04 -Generating unique operation named: updateUsingGET_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPOST_13
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPUT_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 16:29:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 16:29:04 -Generating unique operation named: addUsingGET_13
2019-05-27 16:29:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 16:29:04 -Generating unique operation named: editUsingGET_14
2019-05-27 16:29:04 -Generating unique operation named: listUsingGET_15
2019-05-27 16:29:04 -Generating unique operation named: printEditUsingGET_1
2019-05-27 16:29:04 -Generating unique operation named: removeUsingPOST_26
2019-05-27 16:29:04 -Generating unique operation named: saveUsingPOST_12
2019-05-27 16:29:04 -Generating unique operation named: updateUsingGET_9
2019-05-27 16:29:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPOST_14
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPUT_9
2019-05-27 16:29:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 16:29:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 16:29:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 16:29:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 16:29:05 -Generating unique operation named: addUsingGET_14
2019-05-27 16:29:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 16:29:05 -Generating unique operation named: editUsingGET_15
2019-05-27 16:29:05 -Generating unique operation named: listUsingGET_16
2019-05-27 16:29:05 -Generating unique operation named: saveUsingPOST_13
2019-05-27 16:29:05 -Generating unique operation named: saveUsingPOST_14
2019-05-27 16:29:05 -Generating unique operation named: updateUsingPOST_15
2019-05-27 16:29:05 -Generating unique operation named: listUsingGET_17
2019-05-27 16:29:05 -Generating unique operation named: listUsingHEAD_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingPOST_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingPUT_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingPATCH_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingDELETE_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 16:29:05 -Generating unique operation named: listUsingTRACE_1
2019-05-27 16:29:05 -Generating unique operation named: countDDUsingGET_1
2019-05-27 16:29:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 16:29:05 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 16:29:05 -Generating unique operation named: addUsingGET_15
2019-05-27 16:29:05 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 16:29:05 -Generating unique operation named: editUsingGET_16
2019-05-27 16:29:05 -Generating unique operation named: listUsingGET_18
2019-05-27 16:29:05 -Generating unique operation named: removeUsingPOST_27
2019-05-27 16:29:05 -Generating unique operation named: saveUsingPOST_15
2019-05-27 16:29:05 -Generating unique operation named: treeUsingGET_3
2019-05-27 16:29:05 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 16:29:05 -Generating unique operation named: updateUsingPOST_16
2019-05-27 16:29:05 -Generating unique operation named: addUsingGET_16
2019-05-27 16:29:05 -Generating unique operation named: editUsingGET_17
2019-05-27 16:29:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 16:29:05 -Generating unique operation named: listUsingGET_19
2019-05-27 16:29:05 -Generating unique operation named: removeUsingPOST_28
2019-05-27 16:29:05 -Generating unique operation named: removeUsingPOST_29
2019-05-27 16:29:05 -Generating unique operation named: saveUsingPOST_16
2019-05-27 16:29:06 -Generating unique operation named: updateUsingGET_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPOST_17
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPUT_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 16:29:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 16:29:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 16:29:06 -Generating unique operation named: addUsingGET_17
2019-05-27 16:29:06 -Generating unique operation named: editUsingGET_18
2019-05-27 16:29:06 -Generating unique operation named: listUsingGET_20
2019-05-27 16:29:06 -Generating unique operation named: removeUsingPOST_30
2019-05-27 16:29:06 -Generating unique operation named: removeUsingPOST_31
2019-05-27 16:29:06 -Generating unique operation named: saveUsingPOST_17
2019-05-27 16:29:06 -Generating unique operation named: updateUsingGET_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPOST_18
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPUT_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 16:29:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 16:29:06 -Generating unique operation named: addUsingGET_18
2019-05-27 16:29:06 -Generating unique operation named: editUsingGET_19
2019-05-27 16:29:06 -Generating unique operation named: listUsingGET_21
2019-05-27 16:29:06 -Generating unique operation named: removeUsingPOST_32
2019-05-27 16:29:06 -Generating unique operation named: removeUsingPOST_33
2019-05-27 16:29:06 -Generating unique operation named: saveUsingPOST_18
2019-05-27 16:29:06 -Generating unique operation named: updateUsingGET_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPOST_19
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPUT_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 16:29:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 16:29:06 -Starting Quartz Scheduler now
2019-05-27 16:29:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 16:29:06 -Starting...
2019-05-27 16:29:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 16:29:06 -Started.
2019-05-27 16:29:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 16:29:07 -Using a shared selector for servlet write/read
2019-05-27 16:29:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 16:29:07 -Started BootdoApplication in 66.354 seconds (JVM running for 69.323)
2019-05-27 16:29:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 16:29:07 -==> Parameters: 
2019-05-27 16:29:08 -<==      Total: 1
2019-05-27 16:29:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 16:29:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 16:29:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2019-05-27 16:29:12 -Enabling session validation scheduler...
2019-05-27 16:29:12 -请求地址 : http://localhost:8081/login;JSESSIONID=ea50f8e6-e028-4267-8a6a-ae9c74dc98c4
2019-05-27 16:29:12 -HTTP METHOD : GET
2019-05-27 16:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 16:29:12 -参数 : [{}]
2019-05-27 16:29:12 -耗时 : 10
2019-05-27 16:29:12 -返回值 : login
2019-05-27 16:29:14 -请求地址 : http://localhost:8081/getVerify
2019-05-27 16:29:14 -HTTP METHOD : GET
2019-05-27 16:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 16:29:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@55b891b9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8694610]
2019-05-27 16:29:20 -5003
2019-05-27 16:29:21 -耗时 : 7278
2019-05-27 16:29:21 -返回值 : null
2019-05-27 16:29:25 -请求地址 : http://localhost:8081/login
2019-05-27 16:29:25 -HTTP METHOD : POST
2019-05-27 16:29:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 16:29:25 -参数 : [admin, 111111, 5003, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4035b4ca]
2019-05-27 16:29:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 16:29:25 -==> Parameters: admin(String)
2019-05-27 16:29:25 -<==      Total: 1
2019-05-27 16:29:25 -耗时 : 301
2019-05-27 16:29:25 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:29:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 16:29:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:29:26 -==> Parameters: 1(Long), admin(String), 登录(String), 301(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 16:29:26.293(Timestamp)
2019-05-27 16:29:26 -<==    Updates: 1
2019-05-27 16:29:26 -请求地址 : http://localhost:8081/index
2019-05-27 16:29:26 -HTTP METHOD : GET
2019-05-27 16:29:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:29:26 -参数 : [{}]
2019-05-27 16:29:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:29:26 -==> Parameters: 1(Long)
2019-05-27 16:29:27 -<==      Total: 50
2019-05-27 16:29:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:29:27 -==> Parameters: 138(Long)
2019-05-27 16:29:27 -<==      Total: 1
2019-05-27 16:29:27 -耗时 : 581
2019-05-27 16:29:27 -返回值 : index_v1
2019-05-27 16:29:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:29:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 581(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:29:27.429(Timestamp)
2019-05-27 16:29:27 -<==    Updates: 1
2019-05-27 16:29:28 -请求地址 : http://localhost:8081/main
2019-05-27 16:29:28 -HTTP METHOD : GET
2019-05-27 16:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:29:28 -参数 : []
2019-05-27 16:29:28 -耗时 : 0
2019-05-27 16:29:28 -返回值 : main
2019-05-27 16:29:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:29:28 -HTTP METHOD : GET
2019-05-27 16:29:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:29:28 -参数 : []
2019-05-27 16:29:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:29:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:29:28 -请求地址 : http://localhost:8081/main
2019-05-27 16:29:28 -HTTP METHOD : GET
2019-05-27 16:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:29:28 -参数 : []
2019-05-27 16:29:28 -耗时 : 0
2019-05-27 16:29:28 -返回值 : main
2019-05-27 16:29:29 -<==      Total: 0
2019-05-27 16:29:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:29:29 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:29:29 -<==      Total: 1
2019-05-27 16:29:29 -耗时 : 357
2019-05-27 16:29:29 -返回值 : com.bootdo.common.utils.PageUtils@3674e6ce
2019-05-27 16:29:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 16:29:44 -==> Parameters: 1(Long)
2019-05-27 16:29:44 -<==      Total: 94
2019-05-27 16:29:44 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:29:44 -HTTP METHOD : GET
2019-05-27 16:29:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:29:44 -参数 : []
2019-05-27 16:29:44 -耗时 : 1
2019-05-27 16:29:44 -返回值 : /moneyList/moneyWZ
2019-05-27 16:29:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:29:45 -HTTP METHOD : GET
2019-05-27 16:29:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:29:45 -参数 : [userType]
2019-05-27 16:29:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:29:45 -==> Parameters: userType(String)
2019-05-27 16:29:45 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:29:45 -HTTP METHOD : GET
2019-05-27 16:29:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:29:45 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@71943bbc]
2019-05-27 16:29:45 -<==      Total: 4
2019-05-27 16:29:45 -耗时 : 234
2019-05-27 16:29:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:29:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:29:45 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:29:45 -<==      Total: 3
2019-05-27 16:29:45 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:29:45 -==> Parameters: 
2019-05-27 16:29:45 -<==      Total: 1
2019-05-27 16:29:45 -耗时 : 280
2019-05-27 16:29:45 -返回值 : com.bootdo.common.utils.PageUtils@f0669e3
2019-05-27 16:29:50 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-27 16:30:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 16:30:37 -HTTP METHOD : POST
2019-05-27 16:30:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 16:30:37 -参数 : [[Ljava.lang.Long;@1740e90c]
2019-05-27 16:30:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:30:37 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:30:37 -<==      Total: 3
2019-05-27 16:30:37 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:30:37 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 8.00(BigDecimal), 2019-05-27 16:30:37.155(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:30:37.155(Timestamp), 1(Long), null
2019-05-27 16:30:37 -<==    Updates: 1
2019-05-27 16:32:29 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:32:29 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:30:37.256(Timestamp), 1(Long), null
2019-05-27 16:32:29 -<==    Updates: 1
2019-05-27 16:34:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:34:02 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:34:02 -<==      Total: 3
2019-05-27 16:34:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:34:02 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 8.00(BigDecimal), 2019-05-27 16:34:02.352(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:34:02.352(Timestamp), 1(Long), null
2019-05-27 16:34:02 -<==    Updates: 1
2019-05-27 16:34:09 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:34:09 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:34:02.436(Timestamp), 1(Long), null
2019-05-27 16:34:09 -<==    Updates: 1
2019-05-27 16:39:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:39:07 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:39:07 -<==      Total: 3
2019-05-27 16:39:07 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:07 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 8.00(BigDecimal), 2019-05-27 16:39:07.515(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:39:07.516(Timestamp), 1(Long), null
2019-05-27 16:39:07 -<==    Updates: 1
2019-05-27 16:39:10 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:10 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:39:07.646(Timestamp), 1(Long), null
2019-05-27 16:39:10 -<==    Updates: 1
2019-05-27 16:39:10 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:39:10 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), (String), 1(String), 1(String), 7(String), 0.810(BigDecimal), 10(String), 20(String), 1(Integer), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:32:51.0(Timestamp), 1(Long), (String), 9(Long)
2019-05-27 16:39:10 -<==    Updates: 1
2019-05-27 16:39:10 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:10 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 9(String), 1.80(BigDecimal), 2019-05-27 16:39:10.723(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:39:10.723(Timestamp), 1(Long), null
2019-05-27 16:39:10 -<==    Updates: 1
2019-05-27 16:39:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:11 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 1.80(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:39:10.824(Timestamp), 1(Long), null
2019-05-27 16:39:11 -<==    Updates: 1
2019-05-27 16:39:11 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:39:11 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 1(String), 1(String), 9(String), 0.465(BigDecimal), 10(String), 30(String), 1(Integer), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:37:47.0(Timestamp), 1(Long), (String), 11(Long)
2019-05-27 16:39:12 -<==    Updates: 1
2019-05-27 16:39:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:12 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 6(String), 3.60(BigDecimal), 2019-05-27 16:39:12.02(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:39:12.02(Timestamp), 1(Long), null
2019-05-27 16:39:12 -<==    Updates: 1
2019-05-27 16:39:13 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:39:13 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 3.60(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:39:12.145(Timestamp), 1(Long), null
2019-05-27 16:39:13 -<==    Updates: 1
2019-05-27 16:39:13 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:39:13 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 15248789963(String), 0(String), 1234567(String), 6(String), 0.465(BigDecimal), 10(String), 50(String), 1(Integer), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:37:44.0(Timestamp), 1(Long), (String), 14(Long)
2019-05-27 16:39:13 -<==    Updates: 1
2019-05-27 16:39:13 -耗时 : 515996
2019-05-27 16:39:13 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:49:00 -Starting BootdoApplication on PC-201905091110 with PID 25980 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 16:49:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 16:49:00 -The following profiles are active: dev
2019-05-27 16:49:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b77a04f: startup date [Mon May 27 16:49:00 CST 2019]; root of context hierarchy
2019-05-27 16:49:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 16:49:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8feb5807] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$824486ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 16:49:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 16:49:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 16:49:16 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 16:49:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 16:49:16 -Starting service [Tomcat]
2019-05-27 16:49:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 16:49:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 16:49:17 -Initializing Spring embedded WebApplicationContext
2019-05-27 16:49:17 -Root WebApplicationContext: initialization completed in 16770 ms
2019-05-27 16:49:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 16:49:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 16:49:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 16:49:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 16:49:19 -Filter xssFilter was not registered (disabled)
2019-05-27 16:49:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 16:49:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 16:49:19 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 16:49:19 -Servlet dispatcherServlet mapped to [/]
2019-05-27 16:49:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b77a04f: startup date [Mon May 27 16:49:00 CST 2019]; root of context hierarchy
2019-05-27 16:49:28 -Using default implementation for ThreadExecutor
2019-05-27 16:49:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 16:49:28 -Quartz Scheduler v.2.2.1 created.
2019-05-27 16:49:28 -RAMJobStore initialized.
2019-05-27 16:49:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 16:49:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 16:49:28 -Quartz scheduler version: 2.2.1
2019-05-27 16:49:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@47d81427
2019-05-27 16:49:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 16:49:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 16:49:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 16:49:39 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 16:49:39 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 16:49:39 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 16:49:39 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 16:49:39 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 16:49:39 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 16:49:39 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 16:49:39 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 16:49:39 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 16:49:39 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 16:49:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 16:49:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 16:49:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 16:49:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 16:49:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 16:49:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 16:49:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 16:49:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 16:49:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 16:49:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 16:49:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 16:49:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 16:49:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 16:49:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 16:49:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 16:49:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 16:49:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 16:49:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 16:49:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 16:49:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 16:49:39 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 16:49:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 16:49:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 16:49:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 16:49:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 16:49:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 16:49:39 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 16:49:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 16:49:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 16:49:39 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 16:49:39 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 16:49:39 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 16:49:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 16:49:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 16:49:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 16:49:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 16:49:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 16:49:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 16:49:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 16:49:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 16:49:39 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 16:49:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 16:49:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 16:49:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 16:49:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 16:49:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 16:49:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 16:49:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 16:49:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 16:49:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 16:49:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 16:49:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 16:49:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 16:49:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 16:49:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 16:49:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 16:49:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 16:49:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 16:49:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 16:49:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 16:49:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 16:49:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 16:49:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 16:49:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 16:49:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 16:49:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 16:49:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 16:49:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 16:49:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 16:49:39 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 16:49:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 16:49:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 16:49:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 16:49:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 16:49:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 16:49:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 16:49:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 16:49:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 16:49:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 16:49:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:49:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b77a04f: startup date [Mon May 27 16:49:00 CST 2019]; root of context hierarchy
2019-05-27 16:49:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:49:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:49:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 16:49:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 16:49:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 16:49:50 -Registering beans for JMX exposure on startup
2019-05-27 16:49:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 16:49:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 16:49:50 -Starting beans in phase 2147483647
2019-05-27 16:49:50 -Context refreshed
2019-05-27 16:49:50 -Found 1 custom documentation plugin(s)
2019-05-27 16:49:50 -Scanning for api listing references
2019-05-27 16:49:51 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 16:49:51 -Generating unique operation named: removeUsingPOST_1
2019-05-27 16:49:52 -Generating unique operation named: addUsingGET_1
2019-05-27 16:49:52 -Generating unique operation named: editUsingGET_1
2019-05-27 16:49:52 -Generating unique operation named: listUsingGET_1
2019-05-27 16:49:52 -Generating unique operation named: removeUsingPOST_2
2019-05-27 16:49:52 -Generating unique operation named: removeUsingPOST_3
2019-05-27 16:49:52 -Generating unique operation named: saveUsingPOST_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingGET_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingPOST_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingPUT_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 16:49:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 16:49:52 -Generating unique operation named: addUsingGET_2
2019-05-27 16:49:52 -Generating unique operation named: editUsingGET_2
2019-05-27 16:49:52 -Generating unique operation named: listUsingGET_2
2019-05-27 16:49:52 -Generating unique operation named: removeUsingPOST_4
2019-05-27 16:49:52 -Generating unique operation named: removeUsingPOST_5
2019-05-27 16:49:52 -Generating unique operation named: saveUsingPOST_2
2019-05-27 16:49:52 -Generating unique operation named: updateUsingPOST_2
2019-05-27 16:49:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 16:49:52 -Generating unique operation named: addUsingGET_3
2019-05-27 16:49:53 -Generating unique operation named: editUsingGET_3
2019-05-27 16:49:53 -Generating unique operation named: listUsingGET_3
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_6
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_7
2019-05-27 16:49:53 -Generating unique operation named: saveUsingPOST_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingGET_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPOST_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPUT_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 16:49:53 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 16:49:53 -Generating unique operation named: addUsingGET_4
2019-05-27 16:49:53 -Generating unique operation named: editUsingGET_4
2019-05-27 16:49:53 -Generating unique operation named: listUsingGET_4
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_8
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_9
2019-05-27 16:49:53 -Generating unique operation named: saveUsingPOST_4
2019-05-27 16:49:53 -Generating unique operation named: updateUsingGET_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPOST_4
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPUT_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 16:49:53 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 16:49:53 -Generating unique operation named: ElecUsingGET_1
2019-05-27 16:49:53 -Generating unique operation named: addUsingGET_5
2019-05-27 16:49:53 -Generating unique operation named: editUsingGET_5
2019-05-27 16:49:53 -Generating unique operation named: listUsingGET_5
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_10
2019-05-27 16:49:53 -Generating unique operation named: removeUsingPOST_11
2019-05-27 16:49:53 -Generating unique operation named: saveUsingPOST_5
2019-05-27 16:49:53 -Generating unique operation named: updateUsingGET_4
2019-05-27 16:49:53 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPOST_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPUT_4
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 16:49:54 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 16:49:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 16:49:54 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 16:49:54 -Generating unique operation named: editUsingGET_6
2019-05-27 16:49:54 -Generating unique operation named: listUsingGET_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPOST_6
2019-05-27 16:49:54 -Generating unique operation named: addUsingGET_6
2019-05-27 16:49:54 -Generating unique operation named: editUsingGET_7
2019-05-27 16:49:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 16:49:54 -Generating unique operation named: listUsingGET_7
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_12
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_13
2019-05-27 16:49:54 -Generating unique operation named: saveUsingPOST_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingGET_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPOST_7
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPUT_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 16:49:54 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 16:49:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 16:49:54 -Generating unique operation named: addUsingGET_7
2019-05-27 16:49:54 -Generating unique operation named: editUsingGET_8
2019-05-27 16:49:54 -Generating unique operation named: listUsingGET_8
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_14
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_15
2019-05-27 16:49:54 -Generating unique operation named: saveUsingPOST_7
2019-05-27 16:49:54 -Generating unique operation named: updateUsingGET_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPOST_8
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPUT_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 16:49:54 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 16:49:54 -Generating unique operation named: addUsingGET_8
2019-05-27 16:49:54 -Generating unique operation named: editUsingGET_9
2019-05-27 16:49:54 -Generating unique operation named: listUsingGET_9
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_16
2019-05-27 16:49:54 -Generating unique operation named: removeUsingPOST_17
2019-05-27 16:49:54 -Generating unique operation named: saveUsingPOST_8
2019-05-27 16:49:54 -Generating unique operation named: updateUsingGET_7
2019-05-27 16:49:54 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 16:49:55 -Generating unique operation named: updateUsingPOST_9
2019-05-27 16:49:55 -Generating unique operation named: updateUsingPUT_7
2019-05-27 16:49:55 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 16:49:55 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 16:49:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 16:49:55 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 16:49:55 -Generating unique operation named: addUsingGET_9
2019-05-27 16:49:55 -Generating unique operation named: editUsingGET_10
2019-05-27 16:49:55 -Generating unique operation named: infoUsingGET_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingPOST_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingPUT_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 16:49:55 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 16:49:55 -Generating unique operation named: listUsingGET_10
2019-05-27 16:49:55 -Generating unique operation named: removeUsingPOST_18
2019-05-27 16:49:55 -Generating unique operation named: removeUsingPOST_19
2019-05-27 16:49:55 -Generating unique operation named: saveUsingPOST_9
2019-05-27 16:49:55 -Generating unique operation named: updateUsingPOST_10
2019-05-27 16:49:55 -Generating unique operation named: listUsingGET_11
2019-05-27 16:49:55 -Generating unique operation named: removeUsingPOST_20
2019-05-27 16:49:55 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 16:49:55 -Generating unique operation named: addUsingGET_10
2019-05-27 16:49:55 -Generating unique operation named: editUsingGET_11
2019-05-27 16:49:55 -Generating unique operation named: listUsingGET_12
2019-05-27 16:49:55 -Generating unique operation named: removeUsingPOST_21
2019-05-27 16:49:55 -Generating unique operation named: saveUsingPOST_10
2019-05-27 16:49:55 -Generating unique operation named: treeUsingGET_1
2019-05-27 16:49:55 -Generating unique operation named: treeUsingGET_2
2019-05-27 16:49:55 -Generating unique operation named: updateUsingPOST_11
2019-05-27 16:49:55 -Generating unique operation named: addUsingGET_11
2019-05-27 16:49:55 -Generating unique operation named: editUsingGET_12
2019-05-27 16:49:56 -Generating unique operation named: listUsingGET_13
2019-05-27 16:49:56 -Generating unique operation named: removeUsingPOST_22
2019-05-27 16:49:56 -Generating unique operation named: removeUsingPOST_23
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPOST_12
2019-05-27 16:49:56 -Generating unique operation named: addUsingGET_12
2019-05-27 16:49:56 -Generating unique operation named: editUsingGET_13
2019-05-27 16:49:56 -Generating unique operation named: listUsingGET_14
2019-05-27 16:49:56 -Generating unique operation named: removeUsingPOST_24
2019-05-27 16:49:56 -Generating unique operation named: removeUsingPOST_25
2019-05-27 16:49:56 -Generating unique operation named: saveUsingPOST_11
2019-05-27 16:49:56 -Generating unique operation named: updateUsingGET_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPOST_13
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPUT_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 16:49:56 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 16:49:56 -Generating unique operation named: addUsingGET_13
2019-05-27 16:49:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 16:49:56 -Generating unique operation named: editUsingGET_14
2019-05-27 16:49:56 -Generating unique operation named: listUsingGET_15
2019-05-27 16:49:56 -Generating unique operation named: printEditUsingGET_1
2019-05-27 16:49:56 -Generating unique operation named: removeUsingPOST_26
2019-05-27 16:49:56 -Generating unique operation named: saveUsingPOST_12
2019-05-27 16:49:56 -Generating unique operation named: updateUsingGET_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPOST_14
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPUT_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 16:49:56 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 16:49:56 -Generating unique operation named: addUsingGET_14
2019-05-27 16:49:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 16:49:56 -Generating unique operation named: editUsingGET_15
2019-05-27 16:49:56 -Generating unique operation named: listUsingGET_16
2019-05-27 16:49:56 -Generating unique operation named: saveUsingPOST_13
2019-05-27 16:49:56 -Generating unique operation named: saveUsingPOST_14
2019-05-27 16:49:56 -Generating unique operation named: updateUsingPOST_15
2019-05-27 16:49:56 -Generating unique operation named: listUsingGET_17
2019-05-27 16:49:56 -Generating unique operation named: listUsingHEAD_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingPOST_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingPUT_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingPATCH_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingDELETE_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 16:49:56 -Generating unique operation named: listUsingTRACE_1
2019-05-27 16:49:56 -Generating unique operation named: countDDUsingGET_1
2019-05-27 16:49:56 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 16:49:57 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 16:49:57 -Generating unique operation named: addUsingGET_15
2019-05-27 16:49:57 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 16:49:57 -Generating unique operation named: editUsingGET_16
2019-05-27 16:49:57 -Generating unique operation named: listUsingGET_18
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_27
2019-05-27 16:49:57 -Generating unique operation named: saveUsingPOST_15
2019-05-27 16:49:57 -Generating unique operation named: treeUsingGET_3
2019-05-27 16:49:57 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPOST_16
2019-05-27 16:49:57 -Generating unique operation named: addUsingGET_16
2019-05-27 16:49:57 -Generating unique operation named: editUsingGET_17
2019-05-27 16:49:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 16:49:57 -Generating unique operation named: listUsingGET_19
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_28
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_29
2019-05-27 16:49:57 -Generating unique operation named: saveUsingPOST_16
2019-05-27 16:49:57 -Generating unique operation named: updateUsingGET_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPOST_17
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPUT_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 16:49:57 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 16:49:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 16:49:57 -Generating unique operation named: addUsingGET_17
2019-05-27 16:49:57 -Generating unique operation named: editUsingGET_18
2019-05-27 16:49:57 -Generating unique operation named: listUsingGET_20
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_30
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_31
2019-05-27 16:49:57 -Generating unique operation named: saveUsingPOST_17
2019-05-27 16:49:57 -Generating unique operation named: updateUsingGET_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPOST_18
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPUT_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 16:49:57 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 16:49:57 -Generating unique operation named: addUsingGET_18
2019-05-27 16:49:57 -Generating unique operation named: editUsingGET_19
2019-05-27 16:49:57 -Generating unique operation named: listUsingGET_21
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_32
2019-05-27 16:49:57 -Generating unique operation named: removeUsingPOST_33
2019-05-27 16:49:57 -Generating unique operation named: saveUsingPOST_18
2019-05-27 16:49:57 -Generating unique operation named: updateUsingGET_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPOST_19
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPUT_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 16:49:57 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 16:49:57 -Starting Quartz Scheduler now
2019-05-27 16:49:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 16:49:57 -Starting...
2019-05-27 16:49:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 16:49:57 -Started.
2019-05-27 16:49:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 16:49:57 -Using a shared selector for servlet write/read
2019-05-27 16:49:58 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 16:49:58 -Started BootdoApplication in 61.459 seconds (JVM running for 64.722)
2019-05-27 16:49:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 16:49:58 -==> Parameters: 
2019-05-27 16:49:58 -<==      Total: 1
2019-05-27 16:50:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 16:50:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 16:50:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-05-27 16:50:04 -Enabling session validation scheduler...
2019-05-27 16:50:04 -请求地址 : http://localhost:8081/login;JSESSIONID=24623517-37f3-4fea-883e-a26419b0a73b
2019-05-27 16:50:04 -HTTP METHOD : GET
2019-05-27 16:50:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 16:50:04 -参数 : [{}]
2019-05-27 16:50:04 -耗时 : 6
2019-05-27 16:50:04 -返回值 : login
2019-05-27 16:50:06 -请求地址 : http://localhost:8081/getVerify
2019-05-27 16:50:06 -HTTP METHOD : GET
2019-05-27 16:50:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 16:50:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a16973a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f14161c]
2019-05-27 16:50:12 -4911
2019-05-27 16:50:12 -耗时 : 6075
2019-05-27 16:50:12 -返回值 : null
2019-05-27 16:50:17 -请求地址 : http://localhost:8081/login
2019-05-27 16:50:17 -HTTP METHOD : POST
2019-05-27 16:50:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 16:50:17 -参数 : [admin, 111111, 4911, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43459272]
2019-05-27 16:50:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 16:50:17 -==> Parameters: admin(String)
2019-05-27 16:50:17 -<==      Total: 1
2019-05-27 16:50:17 -耗时 : 235
2019-05-27 16:50:17 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:50:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 16:50:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:50:18 -==> Parameters: 1(Long), admin(String), 登录(String), 235(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 16:50:18.002(Timestamp)
2019-05-27 16:50:18 -请求地址 : http://localhost:8081/index
2019-05-27 16:50:18 -HTTP METHOD : GET
2019-05-27 16:50:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:50:18 -参数 : [{}]
2019-05-27 16:50:18 -<==    Updates: 1
2019-05-27 16:50:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:50:18 -==> Parameters: 1(Long)
2019-05-27 16:50:18 -<==      Total: 50
2019-05-27 16:50:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:50:18 -==> Parameters: 138(Long)
2019-05-27 16:50:18 -<==      Total: 1
2019-05-27 16:50:18 -耗时 : 420
2019-05-27 16:50:18 -返回值 : index_v1
2019-05-27 16:50:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:50:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 420(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:50:18.837(Timestamp)
2019-05-27 16:50:18 -<==    Updates: 1
2019-05-27 16:50:19 -请求地址 : http://localhost:8081/main
2019-05-27 16:50:19 -HTTP METHOD : GET
2019-05-27 16:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:50:19 -参数 : []
2019-05-27 16:50:19 -耗时 : 0
2019-05-27 16:50:19 -返回值 : main
2019-05-27 16:50:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:50:19 -HTTP METHOD : GET
2019-05-27 16:50:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:50:19 -参数 : []
2019-05-27 16:50:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:50:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:50:19 -<==      Total: 0
2019-05-27 16:50:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:50:19 -请求地址 : http://localhost:8081/main
2019-05-27 16:50:19 -HTTP METHOD : GET
2019-05-27 16:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:50:19 -参数 : []
2019-05-27 16:50:19 -耗时 : 0
2019-05-27 16:50:19 -返回值 : main
2019-05-27 16:50:19 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:50:19 -<==      Total: 1
2019-05-27 16:50:19 -耗时 : 248
2019-05-27 16:50:19 -返回值 : com.bootdo.common.utils.PageUtils@51d4093c
2019-05-27 16:50:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 16:50:24 -==> Parameters: 1(Long)
2019-05-27 16:50:24 -<==      Total: 94
2019-05-27 16:50:24 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:50:24 -HTTP METHOD : GET
2019-05-27 16:50:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:50:24 -参数 : []
2019-05-27 16:50:24 -耗时 : 0
2019-05-27 16:50:24 -返回值 : /moneyList/moneyWZ
2019-05-27 16:50:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:50:25 -HTTP METHOD : GET
2019-05-27 16:50:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:50:25 -参数 : [userType]
2019-05-27 16:50:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:50:25 -==> Parameters: userType(String)
2019-05-27 16:50:25 -<==      Total: 4
2019-05-27 16:50:25 -耗时 : 75
2019-05-27 16:50:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:50:25 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:50:25 -HTTP METHOD : GET
2019-05-27 16:50:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:50:25 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@161e089]
2019-05-27 16:50:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:50:25 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:50:26 -<==      Total: 3
2019-05-27 16:50:26 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:50:26 -==> Parameters: 
2019-05-27 16:50:26 -<==      Total: 1
2019-05-27 16:50:26 -耗时 : 234
2019-05-27 16:50:26 -返回值 : com.bootdo.common.utils.PageUtils@447bfb5f
2019-05-27 16:50:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-27 16:51:34 -请求地址 : http://localhost:8081/index
2019-05-27 16:51:34 -HTTP METHOD : GET
2019-05-27 16:51:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:51:34 -参数 : [{}]
2019-05-27 16:51:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:51:34 -==> Parameters: 1(Long)
2019-05-27 16:51:34 -<==      Total: 50
2019-05-27 16:51:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:51:34 -==> Parameters: 138(Long)
2019-05-27 16:51:34 -<==      Total: 1
2019-05-27 16:51:34 -耗时 : 22
2019-05-27 16:51:34 -返回值 : index_v1
2019-05-27 16:51:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:51:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:51:34.634(Timestamp)
2019-05-27 16:51:34 -<==    Updates: 1
2019-05-27 16:51:34 -请求地址 : http://localhost:8081/main
2019-05-27 16:51:34 -HTTP METHOD : GET
2019-05-27 16:51:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:51:34 -参数 : []
2019-05-27 16:51:34 -耗时 : 0
2019-05-27 16:51:34 -返回值 : main
2019-05-27 16:51:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:51:34 -HTTP METHOD : GET
2019-05-27 16:51:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:51:34 -参数 : []
2019-05-27 16:51:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:51:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:51:34 -<==      Total: 0
2019-05-27 16:51:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:51:34 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:51:34 -<==      Total: 1
2019-05-27 16:51:34 -耗时 : 13
2019-05-27 16:51:34 -返回值 : com.bootdo.common.utils.PageUtils@141f35f4
2019-05-27 16:51:35 -请求地址 : http://localhost:8081/main
2019-05-27 16:51:35 -HTTP METHOD : GET
2019-05-27 16:51:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:51:35 -参数 : []
2019-05-27 16:51:35 -耗时 : 1
2019-05-27 16:51:35 -返回值 : main
2019-05-27 16:51:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:51:37 -HTTP METHOD : GET
2019-05-27 16:51:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:51:37 -参数 : []
2019-05-27 16:51:37 -耗时 : 1
2019-05-27 16:51:37 -返回值 : /moneyList/moneyWZ
2019-05-27 16:51:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:51:37 -HTTP METHOD : GET
2019-05-27 16:51:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:51:37 -参数 : [userType]
2019-05-27 16:51:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:51:37 -==> Parameters: userType(String)
2019-05-27 16:51:37 -<==      Total: 4
2019-05-27 16:51:37 -耗时 : 7
2019-05-27 16:51:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:51:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:51:37 -HTTP METHOD : GET
2019-05-27 16:51:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:51:37 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@5efef006]
2019-05-27 16:51:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:51:37 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:51:37 -<==      Total: 3
2019-05-27 16:51:37 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:51:37 -==> Parameters: 
2019-05-27 16:51:37 -<==      Total: 1
2019-05-27 16:51:37 -耗时 : 16
2019-05-27 16:51:37 -返回值 : com.bootdo.common.utils.PageUtils@6020ef72
2019-05-27 16:51:48 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 16:51:48 -HTTP METHOD : POST
2019-05-27 16:51:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 16:51:48 -参数 : [[Ljava.lang.Long;@ad1ee32]
2019-05-27 16:51:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:51:48 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:51:48 -<==      Total: 3
2019-05-27 16:51:48 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:51:48 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 10.78(BigDecimal), 2019-05-27 16:51:48.292(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:51:48.292(Timestamp), 1(Long), null
2019-05-27 16:51:48 -<==    Updates: 1
2019-05-27 16:53:26 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:53:26 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 10.78(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:51:48.713(Timestamp), 1(Long), null
2019-05-27 16:53:27 -<==    Updates: 1
2019-05-27 16:53:31 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:53:31 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), (String), 1(String), 1(String), 7(String), 0.810(BigDecimal), 10(String), 20(String), 1(Integer), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:32:51.0(Timestamp), 1(Long), (String), 9(Long)
2019-05-27 16:53:31 -<==    Updates: 1
2019-05-27 16:53:44 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:53:44 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 9(String), 20.67(BigDecimal), 2019-05-27 16:53:44.237(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:53:44.237(Timestamp), 1(Long), null
2019-05-27 16:53:44 -<==    Updates: 1
2019-05-27 16:54:10 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:54:10 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 20.67(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:53:44.292(Timestamp), 1(Long), null
2019-05-27 16:54:11 -<==    Updates: 1
2019-05-27 16:54:11 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:54:11 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 1(String), 1(String), 9(String), 0.465(BigDecimal), 10(String), 30(String), 1(Integer), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:37:47.0(Timestamp), 1(Long), (String), 11(Long)
2019-05-27 16:54:11 -<==    Updates: 1
2019-05-27 16:54:11 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:54:11 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 6(String), 30.56(BigDecimal), 2019-05-27 16:54:11.053(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:54:11.053(Timestamp), 1(Long), null
2019-05-27 16:54:11 -<==    Updates: 1
2019-05-27 16:54:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:54:11 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 30.56(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:54:11.138(Timestamp), 1(Long), null
2019-05-27 16:54:11 -<==    Updates: 1
2019-05-27 16:54:11 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:54:11 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 15248789963(String), 0(String), 1234567(String), 6(String), 0.465(BigDecimal), 10(String), 50(String), 1(Integer), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:37:44.0(Timestamp), 1(Long), (String), 14(Long)
2019-05-27 16:54:11 -<==    Updates: 1
2019-05-27 16:54:11 -耗时 : 143016
2019-05-27 16:54:11 -返回值 : {msg=操作成功, code=0}
2019-05-27 16:54:52 -请求地址 : http://localhost:8081/index
2019-05-27 16:54:52 -HTTP METHOD : GET
2019-05-27 16:54:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:54:52 -参数 : [{}]
2019-05-27 16:54:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:54:52 -==> Parameters: 1(Long)
2019-05-27 16:54:52 -<==      Total: 50
2019-05-27 16:54:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:54:52 -==> Parameters: 138(Long)
2019-05-27 16:54:52 -<==      Total: 1
2019-05-27 16:54:52 -耗时 : 46
2019-05-27 16:54:52 -返回值 : index_v1
2019-05-27 16:54:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:54:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 46(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:54:52.578(Timestamp)
2019-05-27 16:54:52 -请求地址 : http://localhost:8081/main
2019-05-27 16:54:52 -HTTP METHOD : GET
2019-05-27 16:54:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:54:52 -参数 : []
2019-05-27 16:54:52 -耗时 : 0
2019-05-27 16:54:52 -返回值 : main
2019-05-27 16:54:52 -<==    Updates: 1
2019-05-27 16:54:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:54:52 -HTTP METHOD : GET
2019-05-27 16:54:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:54:52 -参数 : []
2019-05-27 16:54:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:54:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:54:52 -<==      Total: 0
2019-05-27 16:54:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:54:52 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:54:52 -<==      Total: 1
2019-05-27 16:54:52 -耗时 : 14
2019-05-27 16:54:52 -返回值 : com.bootdo.common.utils.PageUtils@21dd2e3c
2019-05-27 16:54:52 -请求地址 : http://localhost:8081/main
2019-05-27 16:54:52 -HTTP METHOD : GET
2019-05-27 16:54:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:54:52 -参数 : []
2019-05-27 16:54:52 -耗时 : 1
2019-05-27 16:54:52 -返回值 : main
2019-05-27 16:54:54 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:54:54 -HTTP METHOD : GET
2019-05-27 16:54:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:54:54 -参数 : []
2019-05-27 16:54:54 -耗时 : 2
2019-05-27 16:54:54 -返回值 : /moneyList/moneyWZ
2019-05-27 16:54:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:54:55 -HTTP METHOD : GET
2019-05-27 16:54:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:54:55 -参数 : [userType]
2019-05-27 16:54:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:54:55 -==> Parameters: userType(String)
2019-05-27 16:54:55 -<==      Total: 4
2019-05-27 16:54:55 -耗时 : 6
2019-05-27 16:54:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:54:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:54:55 -HTTP METHOD : GET
2019-05-27 16:54:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:54:55 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@7ab33481]
2019-05-27 16:54:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:54:55 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:54:55 -<==      Total: 3
2019-05-27 16:54:55 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:54:55 -==> Parameters: 
2019-05-27 16:54:55 -<==      Total: 1
2019-05-27 16:54:55 -耗时 : 49
2019-05-27 16:54:55 -返回值 : com.bootdo.common.utils.PageUtils@b457a1d
2019-05-27 16:56:22 -请求地址 : http://localhost:8081/index
2019-05-27 16:56:22 -HTTP METHOD : GET
2019-05-27 16:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 16:56:22 -参数 : [{}]
2019-05-27 16:56:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 16:56:22 -==> Parameters: 1(Long)
2019-05-27 16:56:22 -<==      Total: 50
2019-05-27 16:56:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 16:56:22 -==> Parameters: 138(Long)
2019-05-27 16:56:22 -<==      Total: 1
2019-05-27 16:56:22 -耗时 : 29
2019-05-27 16:56:22 -返回值 : index_v1
2019-05-27 16:56:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 16:56:22.521(Timestamp)
2019-05-27 16:56:22 -请求地址 : http://localhost:8081/main
2019-05-27 16:56:22 -HTTP METHOD : GET
2019-05-27 16:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:56:22 -参数 : []
2019-05-27 16:56:22 -耗时 : 0
2019-05-27 16:56:22 -返回值 : main
2019-05-27 16:56:22 -<==    Updates: 1
2019-05-27 16:56:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 16:56:23 -HTTP METHOD : GET
2019-05-27 16:56:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 16:56:23 -参数 : []
2019-05-27 16:56:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 16:56:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 16:56:23 -<==      Total: 0
2019-05-27 16:56:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 16:56:23 -==> Parameters: 1(Long), 0(String)
2019-05-27 16:56:23 -<==      Total: 1
2019-05-27 16:56:23 -耗时 : 8
2019-05-27 16:56:23 -返回值 : com.bootdo.common.utils.PageUtils@5f316ab9
2019-05-27 16:56:23 -请求地址 : http://localhost:8081/main
2019-05-27 16:56:23 -HTTP METHOD : GET
2019-05-27 16:56:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 16:56:23 -参数 : []
2019-05-27 16:56:23 -耗时 : 1
2019-05-27 16:56:23 -返回值 : main
2019-05-27 16:56:34 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 16:56:34 -HTTP METHOD : GET
2019-05-27 16:56:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 16:56:34 -参数 : []
2019-05-27 16:56:34 -耗时 : 1
2019-05-27 16:56:34 -返回值 : /moneyList/moneyWZ
2019-05-27 16:56:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 16:56:35 -HTTP METHOD : GET
2019-05-27 16:56:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 16:56:35 -参数 : [userType]
2019-05-27 16:56:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 16:56:35 -==> Parameters: userType(String)
2019-05-27 16:56:35 -<==      Total: 4
2019-05-27 16:56:35 -耗时 : 8
2019-05-27 16:56:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 16:56:35 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 16:56:35 -HTTP METHOD : GET
2019-05-27 16:56:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 16:56:35 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@6796e1fc]
2019-05-27 16:56:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 16:56:35 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 16:56:35 -<==      Total: 3
2019-05-27 16:56:35 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 16:56:35 -==> Parameters: 
2019-05-27 16:56:35 -<==      Total: 1
2019-05-27 16:56:35 -耗时 : 9
2019-05-27 16:56:35 -返回值 : com.bootdo.common.utils.PageUtils@3c7c56d7
2019-05-27 16:56:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-27 16:56:40 -HTTP METHOD : POST
2019-05-27 16:56:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-27 16:56:40 -参数 : [[Ljava.lang.Long;@a70200d]
2019-05-27 16:56:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-27 16:56:40 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-27 16:56:40 -<==      Total: 3
2019-05-27 16:56:40 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:40 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), 1.23(BigDecimal), 2019-05-27 16:56:40.909(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:56:40.909(Timestamp), 1(Long), null
2019-05-27 16:56:40 -<==    Updates: 1
2019-05-27 16:56:40 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:40 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 10(String), 10(String), 1(Integer), 0.810(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 1.23(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:56:40.97(Timestamp), 1(Long), null
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:56:41 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), (String), 1(String), 1(String), 7(String), 0.810(BigDecimal), 10(String), 20(String), 1(Integer), 1.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:32:51.0(Timestamp), 1(Long), (String), 9(Long)
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:41 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 9(String), 1.34(BigDecimal), 2019-05-27 16:56:41.045(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:56:41.045(Timestamp), 1(Long), null
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:41 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 1.34(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:56:41.069(Timestamp), 1(Long), null
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:56:41 -==> Parameters: W-0011(String), 打发第(String), C(String), 2(String), 1(String), 1(String), 9(String), 0.465(BigDecimal), 10(String), 30(String), 1(Integer), 1.00(BigDecimal), 1.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:37:47.0(Timestamp), 1(Long), (String), 11(Long)
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:41 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 6(String), 1.33(BigDecimal), 2019-05-27 16:56:41.202(Timestamp), 2019-03(String), 1(Long), 2019-05-27 16:56:41.202(Timestamp), 1(Long), null
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 16:56:41 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 10(String), 10(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 1.33(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-27 16:56:41.257(Timestamp), 1(Long), null
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `elec_price` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-27 16:56:41 -==> Parameters: WS-0001(String), 四大护法(String), D(String), 2(String), 15248789963(String), 0(String), 1234567(String), 6(String), 0.465(BigDecimal), 10(String), 50(String), 1(Integer), 0.00(BigDecimal), 0.00(BigDecimal), 0(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:37:44.0(Timestamp), 1(Long), (String), 14(Long)
2019-05-27 16:56:41 -<==    Updates: 1
2019-05-27 16:56:41 -耗时 : 537
2019-05-27 16:56:41 -返回值 : {msg=操作成功, code=0}
2019-05-27 17:20:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-05-27 17:33:37 -Starting BootdoApplication on PC-201905091110 with PID 7032 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 17:33:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 17:33:37 -The following profiles are active: dev
2019-05-27 17:33:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:33:37 CST 2019]; root of context hierarchy
2019-05-27 17:33:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 17:33:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae562c15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a0af5abc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 17:33:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 17:33:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:33:47 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 17:33:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 17:33:47 -Starting service [Tomcat]
2019-05-27 17:33:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 17:33:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 17:33:47 -Initializing Spring embedded WebApplicationContext
2019-05-27 17:33:47 -Root WebApplicationContext: initialization completed in 9732 ms
2019-05-27 17:33:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 17:33:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 17:33:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 17:33:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 17:33:48 -Filter xssFilter was not registered (disabled)
2019-05-27 17:33:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 17:33:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 17:33:48 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 17:33:48 -Servlet dispatcherServlet mapped to [/]
2019-05-27 17:33:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:33:37 CST 2019]; root of context hierarchy
2019-05-27 17:33:53 -Using default implementation for ThreadExecutor
2019-05-27 17:33:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 17:33:53 -Quartz Scheduler v.2.2.1 created.
2019-05-27 17:33:53 -RAMJobStore initialized.
2019-05-27 17:33:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 17:33:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 17:33:53 -Quartz scheduler version: 2.2.1
2019-05-27 17:33:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@64c25a62
2019-05-27 17:33:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 17:33:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 17:34:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 17:34:03 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 17:34:03 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 17:34:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 17:34:03 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 17:34:03 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 17:34:03 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 17:34:03 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 17:34:03 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 17:34:03 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 17:34:03 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 17:34:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 17:34:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 17:34:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 17:34:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 17:34:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 17:34:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 17:34:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:34:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:34:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 17:34:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 17:34:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 17:34:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 17:34:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 17:34:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 17:34:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 17:34:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 17:34:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 17:34:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 17:34:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 17:34:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:34:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 17:34:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 17:34:03 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:34:03 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:34:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 17:34:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 17:34:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 17:34:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:34:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:34:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 17:34:03 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:34:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 17:34:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 17:34:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 17:34:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:34:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 17:34:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 17:34:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 17:34:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 17:34:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 17:34:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 17:34:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 17:34:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 17:34:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 17:34:04 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 17:34:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 17:34:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 17:34:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 17:34:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 17:34:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 17:34:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 17:34:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 17:34:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 17:34:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 17:34:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 17:34:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 17:34:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 17:34:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 17:34:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 17:34:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 17:34:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 17:34:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 17:34:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 17:34:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:34:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:34:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 17:34:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 17:34:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 17:34:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 17:34:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 17:34:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 17:34:04 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:34:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 17:34:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:34:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:34:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 17:34:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 17:34:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:34:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:34:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 17:34:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 17:34:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 17:34:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 17:34:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 17:34:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 17:34:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:34:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:33:37 CST 2019]; root of context hierarchy
2019-05-27 17:34:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:34:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:34:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:34:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 17:34:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 17:34:08 -Registering beans for JMX exposure on startup
2019-05-27 17:34:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 17:34:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 17:34:08 -Starting beans in phase 2147483647
2019-05-27 17:34:08 -Context refreshed
2019-05-27 17:34:08 -Found 1 custom documentation plugin(s)
2019-05-27 17:34:08 -Scanning for api listing references
2019-05-27 17:34:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 17:34:08 -Generating unique operation named: removeUsingPOST_1
2019-05-27 17:34:08 -Generating unique operation named: addUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_2
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_3
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_2
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_2
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_2
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_4
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_5
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_2
2019-05-27 17:34:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_3
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_3
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_3
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_6
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_7
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_4
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_4
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_4
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_8
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_9
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 17:34:09 -Generating unique operation named: ElecUsingGET_1
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_5
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_5
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_5
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_10
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_11
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_6
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_6
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_6
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_7
2019-05-27 17:34:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_7
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_12
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_13
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_7
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 17:34:09 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_7
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_8
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_8
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_14
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_15
2019-05-27 17:34:09 -Generating unique operation named: saveUsingPOST_7
2019-05-27 17:34:09 -Generating unique operation named: updateUsingGET_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPOST_8
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPUT_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 17:34:09 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 17:34:09 -Generating unique operation named: addUsingGET_8
2019-05-27 17:34:09 -Generating unique operation named: editUsingGET_9
2019-05-27 17:34:09 -Generating unique operation named: listUsingGET_9
2019-05-27 17:34:09 -Generating unique operation named: removeUsingPOST_16
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_17
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingGET_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPUT_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 17:34:10 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_9
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_10
2019-05-27 17:34:10 -Generating unique operation named: infoUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingPOST_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingPUT_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 17:34:10 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_10
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_18
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_19
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_10
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_11
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_20
2019-05-27 17:34:10 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_10
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_11
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_12
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_21
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_10
2019-05-27 17:34:10 -Generating unique operation named: treeUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: treeUsingGET_2
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_11
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_11
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_12
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_13
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_22
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_23
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_12
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_12
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_13
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_14
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_24
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_25
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_11
2019-05-27 17:34:10 -Generating unique operation named: updateUsingGET_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_13
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPUT_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 17:34:10 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_13
2019-05-27 17:34:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_14
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_15
2019-05-27 17:34:10 -Generating unique operation named: printEditUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: removeUsingPOST_26
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_12
2019-05-27 17:34:10 -Generating unique operation named: updateUsingGET_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_14
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPUT_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 17:34:10 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 17:34:10 -Generating unique operation named: addUsingGET_14
2019-05-27 17:34:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 17:34:10 -Generating unique operation named: editUsingGET_15
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_16
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_13
2019-05-27 17:34:10 -Generating unique operation named: saveUsingPOST_14
2019-05-27 17:34:10 -Generating unique operation named: updateUsingPOST_15
2019-05-27 17:34:10 -Generating unique operation named: listUsingGET_17
2019-05-27 17:34:10 -Generating unique operation named: listUsingHEAD_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingPOST_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingPUT_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingPATCH_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingDELETE_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 17:34:10 -Generating unique operation named: listUsingTRACE_1
2019-05-27 17:34:10 -Generating unique operation named: countDDUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 17:34:10 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 17:34:11 -Generating unique operation named: addUsingGET_15
2019-05-27 17:34:11 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 17:34:11 -Generating unique operation named: editUsingGET_16
2019-05-27 17:34:11 -Generating unique operation named: listUsingGET_18
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_27
2019-05-27 17:34:11 -Generating unique operation named: saveUsingPOST_15
2019-05-27 17:34:11 -Generating unique operation named: treeUsingGET_3
2019-05-27 17:34:11 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPOST_16
2019-05-27 17:34:11 -Generating unique operation named: addUsingGET_16
2019-05-27 17:34:11 -Generating unique operation named: editUsingGET_17
2019-05-27 17:34:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 17:34:11 -Generating unique operation named: listUsingGET_19
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_28
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_29
2019-05-27 17:34:11 -Generating unique operation named: saveUsingPOST_16
2019-05-27 17:34:11 -Generating unique operation named: updateUsingGET_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPOST_17
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPUT_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 17:34:11 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 17:34:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 17:34:11 -Generating unique operation named: addUsingGET_17
2019-05-27 17:34:11 -Generating unique operation named: editUsingGET_18
2019-05-27 17:34:11 -Generating unique operation named: listUsingGET_20
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_30
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_31
2019-05-27 17:34:11 -Generating unique operation named: saveUsingPOST_17
2019-05-27 17:34:11 -Generating unique operation named: updateUsingGET_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPOST_18
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPUT_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 17:34:11 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 17:34:11 -Generating unique operation named: addUsingGET_18
2019-05-27 17:34:11 -Generating unique operation named: editUsingGET_19
2019-05-27 17:34:11 -Generating unique operation named: listUsingGET_21
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_32
2019-05-27 17:34:11 -Generating unique operation named: removeUsingPOST_33
2019-05-27 17:34:11 -Generating unique operation named: saveUsingPOST_18
2019-05-27 17:34:11 -Generating unique operation named: updateUsingGET_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPOST_19
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPUT_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 17:34:11 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 17:34:11 -Starting Quartz Scheduler now
2019-05-27 17:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 17:34:11 -Starting...
2019-05-27 17:34:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 17:34:11 -Started.
2019-05-27 17:34:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 17:34:11 -Using a shared selector for servlet write/read
2019-05-27 17:34:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 17:34:11 -Started BootdoApplication in 34.988 seconds (JVM running for 35.833)
2019-05-27 17:34:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 17:34:12 -==> Parameters: 
2019-05-27 17:34:12 -<==      Total: 1
2019-05-27 17:35:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 17:36:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 17:36:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 17:36:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-27 17:36:47 -Enabling session validation scheduler...
2019-05-27 17:36:47 -请求地址 : http://localhost:8081/login;JSESSIONID=a37c2d2c-2f41-4db7-90c0-c1211eb07675
2019-05-27 17:36:47 -HTTP METHOD : GET
2019-05-27 17:36:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 17:36:47 -参数 : [{}]
2019-05-27 17:36:47 -耗时 : 6
2019-05-27 17:36:47 -返回值 : login
2019-05-27 17:36:49 -请求地址 : http://localhost:8081/getVerify
2019-05-27 17:36:49 -HTTP METHOD : GET
2019-05-27 17:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 17:36:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f18a97a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@379ace18]
2019-05-27 17:36:59 -8841
2019-05-27 17:36:59 -耗时 : 10395
2019-05-27 17:36:59 -返回值 : null
2019-05-27 17:37:04 -请求地址 : http://localhost:8081/login
2019-05-27 17:37:04 -HTTP METHOD : POST
2019-05-27 17:37:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 17:37:04 -参数 : [admin, 111111, 8841, org.apache.shiro.web.servlet.ShiroHttpServletRequest@633dbc5d]
2019-05-27 17:37:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 17:37:04 -==> Parameters: admin(String)
2019-05-27 17:37:05 -<==      Total: 1
2019-05-27 17:37:05 -耗时 : 205
2019-05-27 17:37:05 -返回值 : {msg=操作成功, code=0}
2019-05-27 17:37:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 17:37:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:37:05 -==> Parameters: 1(Long), admin(String), 登录(String), 206(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 17:37:05.185(Timestamp)
2019-05-27 17:37:05 -请求地址 : http://localhost:8081/index
2019-05-27 17:37:05 -HTTP METHOD : GET
2019-05-27 17:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 17:37:05 -参数 : [{}]
2019-05-27 17:37:05 -<==    Updates: 1
2019-05-27 17:37:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 17:37:05 -==> Parameters: 1(Long)
2019-05-27 17:37:05 -<==      Total: 50
2019-05-27 17:37:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 17:37:05 -==> Parameters: 138(Long)
2019-05-27 17:37:05 -<==      Total: 1
2019-05-27 17:37:05 -耗时 : 462
2019-05-27 17:37:05 -返回值 : index_v1
2019-05-27 17:37:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:37:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 462(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 17:37:05.789(Timestamp)
2019-05-27 17:37:05 -<==    Updates: 1
2019-05-27 17:37:05 -请求地址 : http://localhost:8081/main
2019-05-27 17:37:05 -HTTP METHOD : GET
2019-05-27 17:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:37:05 -参数 : []
2019-05-27 17:37:05 -耗时 : 0
2019-05-27 17:37:05 -返回值 : main
2019-05-27 17:37:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 17:37:06 -HTTP METHOD : GET
2019-05-27 17:37:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 17:37:06 -参数 : []
2019-05-27 17:37:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 17:37:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 17:37:06 -请求地址 : http://localhost:8081/main
2019-05-27 17:37:06 -HTTP METHOD : GET
2019-05-27 17:37:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:37:06 -参数 : []
2019-05-27 17:37:06 -耗时 : 1
2019-05-27 17:37:06 -返回值 : main
2019-05-27 17:37:06 -<==      Total: 0
2019-05-27 17:37:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 17:37:06 -==> Parameters: 1(Long), 0(String)
2019-05-27 17:37:06 -<==      Total: 1
2019-05-27 17:37:06 -耗时 : 171
2019-05-27 17:37:06 -返回值 : com.bootdo.common.utils.PageUtils@47c0dedd
2019-05-27 17:37:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 17:37:12 -==> Parameters: 1(Long)
2019-05-27 17:37:12 -<==      Total: 94
2019-05-27 17:37:12 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-27 17:37:12 -HTTP METHOD : GET
2019-05-27 17:37:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-27 17:37:12 -参数 : []
2019-05-27 17:37:12 -耗时 : 0
2019-05-27 17:37:12 -返回值 : /moneyList/moneyWZ
2019-05-27 17:37:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:37:12 -HTTP METHOD : GET
2019-05-27 17:37:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:37:12 -参数 : [userType]
2019-05-27 17:37:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:37:12 -==> Parameters: userType(String)
2019-05-27 17:37:12 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-27 17:37:12 -HTTP METHOD : GET
2019-05-27 17:37:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-27 17:37:12 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@389799a1]
2019-05-27 17:37:12 -<==      Total: 4
2019-05-27 17:37:12 -耗时 : 92
2019-05-27 17:37:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:37:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-27 17:37:12 -==> Parameters: 0(Integer), 100(Integer)
2019-05-27 17:37:12 -<==      Total: 3
2019-05-27 17:37:12 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-27 17:37:12 -==> Parameters: 
2019-05-27 17:37:12 -<==      Total: 1
2019-05-27 17:37:12 -耗时 : 166
2019-05-27 17:37:12 -返回值 : com.bootdo.common.utils.PageUtils@39415579
2019-05-27 17:37:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 17:37:16 -HTTP METHOD : GET
2019-05-27 17:37:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 17:37:16 -参数 : []
2019-05-27 17:37:16 -耗时 : 11
2019-05-27 17:37:16 -返回值 : charts/tableElecYY
2019-05-27 17:37:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:37:17 -HTTP METHOD : GET
2019-05-27 17:37:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:37:17 -参数 : [userType]
2019-05-27 17:37:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:37:17 -==> Parameters: userType(String)
2019-05-27 17:37:17 -<==      Total: 4
2019-05-27 17:37:17 -耗时 : 8
2019-05-27 17:37:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:37:18 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 17:37:18 -HTTP METHOD : GET
2019-05-27 17:37:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:37:18 -参数 : []
2019-05-27 17:37:18 -耗时 : 11
2019-05-27 17:37:18 -返回值 : charts/tableHeatYY
2019-05-27 17:37:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:37:19 -HTTP METHOD : GET
2019-05-27 17:37:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:37:19 -参数 : [userType]
2019-05-27 17:37:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:37:19 -==> Parameters: userType(String)
2019-05-27 17:37:19 -<==      Total: 4
2019-05-27 17:37:19 -耗时 : 5
2019-05-27 17:37:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:37:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 17:37:20 -HTTP METHOD : GET
2019-05-27 17:37:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 17:37:20 -参数 : []
2019-05-27 17:37:20 -耗时 : 0
2019-05-27 17:37:20 -返回值 : system/dept/deptTree
2019-05-27 17:37:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 17:37:20 -HTTP METHOD : GET
2019-05-27 17:37:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 17:37:20 -参数 : []
2019-05-27 17:37:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 17:37:20 -==> Parameters: 
2019-05-27 17:37:20 -<==      Total: 3
2019-05-27 17:37:20 -耗时 : 16
2019-05-27 17:37:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 17:37:25 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:37:25 -HTTP METHOD : POST
2019-05-27 17:37:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:37:25 -参数 : [com.bootdo.heat.vo.HeatVo@7af0debe, com.bootdo.moneyLog.vo.HeatLogVo@1dc137f2]
2019-05-27 17:37:25 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:37:25 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:37:25 -<==      Total: 1
2019-05-27 17:37:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:37:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal(String), null, 2019-05-27 17:37:25.556(Timestamp)
2019-05-27 17:37:25 -java.lang.Integer cannot be cast to java.math.BigDecimal
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal
	at com.sun.proxy.$Proxy106.HeatAreaYY(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.HeatAreaYY(HeatServiceImpl.java:143)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:68)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$9b835b5.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 17:37:25 -<==    Updates: 1
2019-05-27 17:37:26 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:37:26 -HTTP METHOD : POST
2019-05-27 17:37:26 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:37:26 -参数 : [com.bootdo.heat.vo.HeatVo@670d97ea, com.bootdo.moneyLog.vo.HeatLogVo@3086290f]
2019-05-27 17:37:26 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:37:26 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:37:26 -<==      Total: 1
2019-05-27 17:37:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:37:26 -java.lang.Integer cannot be cast to java.math.BigDecimal
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal
	at com.sun.proxy.$Proxy106.HeatAreaYY(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.HeatAreaYY(HeatServiceImpl.java:143)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:68)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$9b835b5.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 17:37:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal(String), null, 2019-05-27 17:37:26.82(Timestamp)
2019-05-27 17:37:26 -<==    Updates: 1
2019-05-27 17:37:27 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:37:27 -HTTP METHOD : POST
2019-05-27 17:37:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:37:27 -参数 : [com.bootdo.heat.vo.HeatVo@538505e2, com.bootdo.moneyLog.vo.HeatLogVo@2adad9eb]
2019-05-27 17:37:27 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:37:27 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:37:27 -<==      Total: 1
2019-05-27 17:37:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:37:27 -java.lang.Integer cannot be cast to java.math.BigDecimal
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal
	at com.sun.proxy.$Proxy106.HeatAreaYY(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.HeatAreaYY(HeatServiceImpl.java:143)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:68)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$9b835b5.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 17:37:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.ClassCastException: java.lang.Integer cannot be cast to java.math.BigDecimal(String), null, 2019-05-27 17:37:27.615(Timestamp)
2019-05-27 17:37:27 -<==    Updates: 1
2019-05-27 17:42:36 -请求地址 : http://localhost:8081/index
2019-05-27 17:42:36 -HTTP METHOD : GET
2019-05-27 17:42:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 17:42:36 -参数 : [{}]
2019-05-27 17:42:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 17:42:36 -==> Parameters: 1(Long)
2019-05-27 17:42:36 -<==      Total: 50
2019-05-27 17:42:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 17:42:36 -==> Parameters: 138(Long)
2019-05-27 17:42:36 -<==      Total: 1
2019-05-27 17:42:36 -耗时 : 37
2019-05-27 17:42:36 -返回值 : index_v1
2019-05-27 17:42:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:42:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 17:42:36.345(Timestamp)
2019-05-27 17:42:36 -<==    Updates: 1
2019-05-27 17:42:36 -请求地址 : http://localhost:8081/main
2019-05-27 17:42:36 -HTTP METHOD : GET
2019-05-27 17:42:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:42:36 -参数 : []
2019-05-27 17:42:36 -耗时 : 0
2019-05-27 17:42:36 -返回值 : main
2019-05-27 17:42:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 17:42:36 -HTTP METHOD : GET
2019-05-27 17:42:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 17:42:36 -参数 : []
2019-05-27 17:42:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 17:42:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 17:42:36 -<==      Total: 0
2019-05-27 17:42:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 17:42:36 -==> Parameters: 1(Long), 0(String)
2019-05-27 17:42:36 -<==      Total: 1
2019-05-27 17:42:36 -耗时 : 23
2019-05-27 17:42:36 -返回值 : com.bootdo.common.utils.PageUtils@423e12d8
2019-05-27 17:42:36 -请求地址 : http://localhost:8081/main
2019-05-27 17:42:36 -HTTP METHOD : GET
2019-05-27 17:42:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:42:36 -参数 : []
2019-05-27 17:42:36 -耗时 : 1
2019-05-27 17:42:36 -返回值 : main
2019-05-27 17:43:28 -Starting BootdoApplication on PC-201905091110 with PID 23040 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 17:43:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 17:43:28 -The following profiles are active: dev
2019-05-27 17:43:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:43:28 CST 2019]; root of context hierarchy
2019-05-27 17:43:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 17:43:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd9bea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fe32ed50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 17:43:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 17:43:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:43:37 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 17:43:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 17:43:37 -Starting service [Tomcat]
2019-05-27 17:43:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 17:43:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 17:43:37 -Initializing Spring embedded WebApplicationContext
2019-05-27 17:43:37 -Root WebApplicationContext: initialization completed in 8890 ms
2019-05-27 17:43:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 17:43:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 17:43:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 17:43:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 17:43:38 -Filter xssFilter was not registered (disabled)
2019-05-27 17:43:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 17:43:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 17:43:38 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 17:43:38 -Servlet dispatcherServlet mapped to [/]
2019-05-27 17:43:39 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
2019-05-27 17:43:40 -Stopping service [Tomcat]
2019-05-27 17:43:40 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-27 17:43:40 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3eae0fd9.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3eae0fd9$$FastClassBySpringCGLIB$$ac93e6f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3eae0fd9.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'import java.math.BigDecimal'.  Cause: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: import java.math.BigDecimal
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2019-05-27 17:45:22 -Starting BootdoApplication on PC-201905091110 with PID 14236 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 17:45:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 17:45:22 -The following profiles are active: dev
2019-05-27 17:45:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:45:23 CST 2019]; root of context hierarchy
2019-05-27 17:45:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 17:45:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b25719b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a4b04860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 17:45:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 17:45:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:45:31 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 17:45:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 17:45:31 -Starting service [Tomcat]
2019-05-27 17:45:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 17:45:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 17:45:31 -Initializing Spring embedded WebApplicationContext
2019-05-27 17:45:31 -Root WebApplicationContext: initialization completed in 8829 ms
2019-05-27 17:45:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 17:45:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 17:45:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 17:45:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 17:45:32 -Filter xssFilter was not registered (disabled)
2019-05-27 17:45:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 17:45:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 17:45:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 17:45:32 -Servlet dispatcherServlet mapped to [/]
2019-05-27 17:45:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:45:23 CST 2019]; root of context hierarchy
2019-05-27 17:45:36 -Using default implementation for ThreadExecutor
2019-05-27 17:45:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 17:45:36 -Quartz Scheduler v.2.2.1 created.
2019-05-27 17:45:36 -RAMJobStore initialized.
2019-05-27 17:45:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 17:45:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 17:45:36 -Quartz scheduler version: 2.2.1
2019-05-27 17:45:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@610fbe1c
2019-05-27 17:45:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 17:45:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 17:45:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 17:45:40 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 17:45:40 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 17:45:40 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 17:45:40 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 17:45:40 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 17:45:40 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 17:45:40 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 17:45:40 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 17:45:40 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 17:45:40 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:45:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 17:45:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 17:45:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 17:45:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 17:45:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 17:45:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 17:45:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 17:45:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:45:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 17:45:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:45:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 17:45:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 17:45:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 17:45:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 17:45:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 17:45:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 17:45:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 17:45:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 17:45:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 17:45:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 17:45:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:45:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 17:45:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 17:45:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:45:40 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:45:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 17:45:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 17:45:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 17:45:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:45:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:45:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 17:45:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:45:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 17:45:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 17:45:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:45:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 17:45:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 17:45:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 17:45:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 17:45:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 17:45:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 17:45:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 17:45:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 17:45:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 17:45:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 17:45:40 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 17:45:40 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 17:45:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 17:45:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 17:45:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 17:45:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 17:45:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 17:45:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 17:45:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 17:45:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 17:45:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 17:45:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 17:45:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 17:45:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 17:45:40 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 17:45:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 17:45:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 17:45:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 17:45:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 17:45:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 17:45:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 17:45:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 17:45:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:45:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 17:45:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:45:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 17:45:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:45:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 17:45:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 17:45:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 17:45:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 17:45:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 17:45:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 17:45:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 17:45:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:45:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 17:45:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:45:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 17:45:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:45:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:45:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 17:45:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:45:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 17:45:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 17:45:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 17:45:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 17:45:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 17:45:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 17:45:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:45:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 17:45:23 CST 2019]; root of context hierarchy
2019-05-27 17:45:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:45:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:45:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:45:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 17:45:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 17:45:45 -Registering beans for JMX exposure on startup
2019-05-27 17:45:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 17:45:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 17:45:45 -Starting beans in phase 2147483647
2019-05-27 17:45:45 -Context refreshed
2019-05-27 17:45:45 -Found 1 custom documentation plugin(s)
2019-05-27 17:45:45 -Scanning for api listing references
2019-05-27 17:45:46 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 17:45:46 -Generating unique operation named: removeUsingPOST_1
2019-05-27 17:45:46 -Generating unique operation named: addUsingGET_1
2019-05-27 17:45:46 -Generating unique operation named: editUsingGET_1
2019-05-27 17:45:46 -Generating unique operation named: listUsingGET_1
2019-05-27 17:45:46 -Generating unique operation named: removeUsingPOST_2
2019-05-27 17:45:46 -Generating unique operation named: removeUsingPOST_3
2019-05-27 17:45:46 -Generating unique operation named: saveUsingPOST_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingGET_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingPOST_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingPUT_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 17:45:46 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 17:45:46 -Generating unique operation named: addUsingGET_2
2019-05-27 17:45:46 -Generating unique operation named: editUsingGET_2
2019-05-27 17:45:46 -Generating unique operation named: listUsingGET_2
2019-05-27 17:45:46 -Generating unique operation named: removeUsingPOST_4
2019-05-27 17:45:46 -Generating unique operation named: removeUsingPOST_5
2019-05-27 17:45:46 -Generating unique operation named: saveUsingPOST_2
2019-05-27 17:45:46 -Generating unique operation named: updateUsingPOST_2
2019-05-27 17:45:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_3
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_3
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_3
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_6
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_7
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_4
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_4
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_4
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_8
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_9
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 17:45:47 -Generating unique operation named: ElecUsingGET_1
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_5
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_5
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_5
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_10
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_11
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_6
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_6
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_6
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_7
2019-05-27 17:45:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_7
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_12
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_13
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 17:45:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_7
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_8
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_8
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_14
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_15
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_8
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_8
2019-05-27 17:45:47 -Generating unique operation named: editUsingGET_9
2019-05-27 17:45:47 -Generating unique operation named: listUsingGET_9
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_16
2019-05-27 17:45:47 -Generating unique operation named: removeUsingPOST_17
2019-05-27 17:45:47 -Generating unique operation named: saveUsingPOST_8
2019-05-27 17:45:47 -Generating unique operation named: updateUsingGET_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPOST_9
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPUT_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 17:45:47 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 17:45:47 -Generating unique operation named: addUsingGET_9
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_10
2019-05-27 17:45:48 -Generating unique operation named: infoUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingPOST_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingPUT_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 17:45:48 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_10
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_18
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_19
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_10
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_11
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_20
2019-05-27 17:45:48 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_10
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_11
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_12
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_21
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_10
2019-05-27 17:45:48 -Generating unique operation named: treeUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: treeUsingGET_2
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_11
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_11
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_12
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_13
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_22
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_23
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_12
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_12
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_13
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_14
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_24
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_25
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_11
2019-05-27 17:45:48 -Generating unique operation named: updateUsingGET_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_13
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPUT_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 17:45:48 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_13
2019-05-27 17:45:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_14
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_15
2019-05-27 17:45:48 -Generating unique operation named: printEditUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: removeUsingPOST_26
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_12
2019-05-27 17:45:48 -Generating unique operation named: updateUsingGET_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_14
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPUT_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 17:45:48 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_14
2019-05-27 17:45:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_15
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_16
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_13
2019-05-27 17:45:48 -Generating unique operation named: saveUsingPOST_14
2019-05-27 17:45:48 -Generating unique operation named: updateUsingPOST_15
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_17
2019-05-27 17:45:48 -Generating unique operation named: listUsingHEAD_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingPOST_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingPUT_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingPATCH_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingDELETE_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 17:45:48 -Generating unique operation named: listUsingTRACE_1
2019-05-27 17:45:48 -Generating unique operation named: countDDUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 17:45:48 -Generating unique operation named: addUsingGET_15
2019-05-27 17:45:48 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 17:45:48 -Generating unique operation named: editUsingGET_16
2019-05-27 17:45:48 -Generating unique operation named: listUsingGET_18
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_27
2019-05-27 17:45:49 -Generating unique operation named: saveUsingPOST_15
2019-05-27 17:45:49 -Generating unique operation named: treeUsingGET_3
2019-05-27 17:45:49 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPOST_16
2019-05-27 17:45:49 -Generating unique operation named: addUsingGET_16
2019-05-27 17:45:49 -Generating unique operation named: editUsingGET_17
2019-05-27 17:45:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 17:45:49 -Generating unique operation named: listUsingGET_19
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_28
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_29
2019-05-27 17:45:49 -Generating unique operation named: saveUsingPOST_16
2019-05-27 17:45:49 -Generating unique operation named: updateUsingGET_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPOST_17
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPUT_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 17:45:49 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 17:45:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 17:45:49 -Generating unique operation named: addUsingGET_17
2019-05-27 17:45:49 -Generating unique operation named: editUsingGET_18
2019-05-27 17:45:49 -Generating unique operation named: listUsingGET_20
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_30
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_31
2019-05-27 17:45:49 -Generating unique operation named: saveUsingPOST_17
2019-05-27 17:45:49 -Generating unique operation named: updateUsingGET_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPOST_18
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPUT_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 17:45:49 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 17:45:49 -Generating unique operation named: addUsingGET_18
2019-05-27 17:45:49 -Generating unique operation named: editUsingGET_19
2019-05-27 17:45:49 -Generating unique operation named: listUsingGET_21
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_32
2019-05-27 17:45:49 -Generating unique operation named: removeUsingPOST_33
2019-05-27 17:45:49 -Generating unique operation named: saveUsingPOST_18
2019-05-27 17:45:49 -Generating unique operation named: updateUsingGET_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPOST_19
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPUT_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 17:45:49 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 17:45:49 -Starting Quartz Scheduler now
2019-05-27 17:45:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 17:45:49 -Starting...
2019-05-27 17:45:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 17:45:49 -Started.
2019-05-27 17:45:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 17:45:49 -Using a shared selector for servlet write/read
2019-05-27 17:45:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 17:45:49 -Started BootdoApplication in 27.758 seconds (JVM running for 28.541)
2019-05-27 17:45:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 17:45:49 -==> Parameters: 
2019-05-27 17:45:50 -<==      Total: 1
2019-05-27 17:46:41 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 17:47:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 17:47:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 17:47:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 146 ms
2019-05-27 17:47:29 -Enabling session validation scheduler...
2019-05-27 17:47:29 -请求地址 : http://localhost:8081/login;JSESSIONID=82de59b4-f6a2-4533-adc1-a7ab749af18d
2019-05-27 17:47:29 -HTTP METHOD : GET
2019-05-27 17:47:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 17:47:29 -参数 : [{}]
2019-05-27 17:47:29 -耗时 : 5
2019-05-27 17:47:29 -返回值 : login
2019-05-27 17:47:31 -请求地址 : http://localhost:8081/getVerify
2019-05-27 17:47:31 -HTTP METHOD : GET
2019-05-27 17:47:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 17:47:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@205fd9e7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7159ee26]
2019-05-27 17:47:37 -1016
2019-05-27 17:47:37 -耗时 : 6619
2019-05-27 17:47:37 -返回值 : null
2019-05-27 17:47:42 -请求地址 : http://localhost:8081/login
2019-05-27 17:47:42 -HTTP METHOD : POST
2019-05-27 17:47:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 17:47:42 -参数 : [admin, 111111, 1016, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b4ac67b]
2019-05-27 17:47:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 17:47:42 -==> Parameters: admin(String)
2019-05-27 17:47:42 -<==      Total: 1
2019-05-27 17:47:42 -耗时 : 211
2019-05-27 17:47:42 -返回值 : {msg=操作成功, code=0}
2019-05-27 17:47:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 17:47:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:47:42 -==> Parameters: 1(Long), admin(String), 登录(String), 211(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 17:47:42.366(Timestamp)
2019-05-27 17:47:42 -请求地址 : http://localhost:8081/index
2019-05-27 17:47:42 -HTTP METHOD : GET
2019-05-27 17:47:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 17:47:42 -参数 : [{}]
2019-05-27 17:47:42 -<==    Updates: 1
2019-05-27 17:47:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 17:47:42 -==> Parameters: 1(Long)
2019-05-27 17:47:42 -<==      Total: 50
2019-05-27 17:47:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 17:47:42 -==> Parameters: 138(Long)
2019-05-27 17:47:42 -<==      Total: 1
2019-05-27 17:47:42 -耗时 : 464
2019-05-27 17:47:42 -返回值 : index_v1
2019-05-27 17:47:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:47:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 465(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 17:47:43.095(Timestamp)
2019-05-27 17:47:43 -<==    Updates: 1
2019-05-27 17:47:43 -请求地址 : http://localhost:8081/main
2019-05-27 17:47:43 -HTTP METHOD : GET
2019-05-27 17:47:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:47:43 -参数 : []
2019-05-27 17:47:43 -耗时 : 0
2019-05-27 17:47:43 -返回值 : main
2019-05-27 17:47:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 17:47:43 -HTTP METHOD : GET
2019-05-27 17:47:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 17:47:43 -参数 : []
2019-05-27 17:47:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 17:47:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 17:47:43 -<==      Total: 0
2019-05-27 17:47:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 17:47:43 -==> Parameters: 1(Long), 0(String)
2019-05-27 17:47:43 -<==      Total: 1
2019-05-27 17:47:43 -耗时 : 81
2019-05-27 17:47:43 -返回值 : com.bootdo.common.utils.PageUtils@5a44e2a5
2019-05-27 17:47:43 -请求地址 : http://localhost:8081/main
2019-05-27 17:47:43 -HTTP METHOD : GET
2019-05-27 17:47:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:47:43 -参数 : []
2019-05-27 17:47:43 -耗时 : 0
2019-05-27 17:47:43 -返回值 : main
2019-05-27 17:47:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 17:47:50 -==> Parameters: 1(Long)
2019-05-27 17:47:50 -<==      Total: 94
2019-05-27 17:47:50 -请求地址 : http://localhost:8081/charts/countYY
2019-05-27 17:47:50 -HTTP METHOD : GET
2019-05-27 17:47:50 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-27 17:47:50 -参数 : []
2019-05-27 17:47:50 -耗时 : 0
2019-05-27 17:47:50 -返回值 : charts/countYY
2019-05-27 17:47:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:47:51 -HTTP METHOD : GET
2019-05-27 17:47:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:47:51 -参数 : [userType]
2019-05-27 17:47:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:47:51 -==> Parameters: userType(String)
2019-05-27 17:47:51 -<==      Total: 4
2019-05-27 17:47:51 -耗时 : 130
2019-05-27 17:47:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:47:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 17:47:54 -HTTP METHOD : GET
2019-05-27 17:47:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 17:47:54 -参数 : []
2019-05-27 17:47:54 -耗时 : 16
2019-05-27 17:47:54 -返回值 : charts/tableElecYY
2019-05-27 17:47:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:47:55 -HTTP METHOD : GET
2019-05-27 17:47:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:47:55 -参数 : [userType]
2019-05-27 17:47:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:47:55 -==> Parameters: userType(String)
2019-05-27 17:47:55 -<==      Total: 4
2019-05-27 17:47:55 -耗时 : 7
2019-05-27 17:47:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:47:56 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 17:47:56 -HTTP METHOD : GET
2019-05-27 17:47:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:47:56 -参数 : []
2019-05-27 17:47:56 -耗时 : 11
2019-05-27 17:47:56 -返回值 : charts/tableHeatYY
2019-05-27 17:47:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:47:57 -HTTP METHOD : GET
2019-05-27 17:47:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:47:57 -参数 : [userType]
2019-05-27 17:47:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:47:57 -==> Parameters: userType(String)
2019-05-27 17:47:57 -<==      Total: 4
2019-05-27 17:47:57 -耗时 : 7
2019-05-27 17:47:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:48:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 17:48:00 -HTTP METHOD : GET
2019-05-27 17:48:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 17:48:00 -参数 : []
2019-05-27 17:48:00 -耗时 : 0
2019-05-27 17:48:00 -返回值 : system/dept/deptTree
2019-05-27 17:48:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 17:48:01 -HTTP METHOD : GET
2019-05-27 17:48:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 17:48:01 -参数 : []
2019-05-27 17:48:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 17:48:01 -==> Parameters: 
2019-05-27 17:48:01 -<==      Total: 3
2019-05-27 17:48:01 -耗时 : 16
2019-05-27 17:48:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 17:48:02 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:48:02 -HTTP METHOD : POST
2019-05-27 17:48:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:48:02 -参数 : [com.bootdo.heat.vo.HeatVo@2902fe8e, com.bootdo.moneyLog.vo.HeatLogVo@121a38ea]
2019-05-27 17:48:02 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:02 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:48:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:48:03 -<==      Total: 1
2019-05-27 17:48:03 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 17:48:03 -==> Parameters: 
2019-05-27 17:48:03 -<==      Total: 2
2019-05-27 17:48:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:48:03 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.NullPointerException(String), null, 2019-05-27 17:48:03.843(Timestamp)
2019-05-27 17:48:03 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:568)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$a51eb0f8.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 17:48:03 -<==    Updates: 1
2019-05-27 17:56:15 -Starting BootdoApplication on PC-201905091110 with PID 7920 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 17:56:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 17:56:15 -The following profiles are active: dev
2019-05-27 17:56:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 17:56:15 CST 2019]; root of context hierarchy
2019-05-27 17:56:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 17:56:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3efd362] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e6490209] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 17:56:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 17:56:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 17:56:23 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 17:56:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 17:56:24 -Starting service [Tomcat]
2019-05-27 17:56:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 17:56:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 17:56:24 -Initializing Spring embedded WebApplicationContext
2019-05-27 17:56:24 -Root WebApplicationContext: initialization completed in 9153 ms
2019-05-27 17:56:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 17:56:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 17:56:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 17:56:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 17:56:25 -Filter xssFilter was not registered (disabled)
2019-05-27 17:56:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 17:56:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 17:56:25 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 17:56:25 -Servlet dispatcherServlet mapped to [/]
2019-05-27 17:56:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 17:56:15 CST 2019]; root of context hierarchy
2019-05-27 17:56:30 -Using default implementation for ThreadExecutor
2019-05-27 17:56:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 17:56:30 -Quartz Scheduler v.2.2.1 created.
2019-05-27 17:56:30 -RAMJobStore initialized.
2019-05-27 17:56:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 17:56:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 17:56:30 -Quartz scheduler version: 2.2.1
2019-05-27 17:56:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1515f782
2019-05-27 17:56:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 17:56:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 17:56:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 17:56:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 17:56:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 17:56:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 17:56:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 17:56:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 17:56:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 17:56:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 17:56:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 17:56:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 17:56:36 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 17:56:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 17:56:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 17:56:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 17:56:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 17:56:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 17:56:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:56:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 17:56:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 17:56:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 17:56:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 17:56:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 17:56:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 17:56:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 17:56:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 17:56:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 17:56:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 17:56:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 17:56:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 17:56:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 17:56:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 17:56:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 17:56:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 17:56:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 17:56:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 17:56:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 17:56:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 17:56:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 17:56:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:56:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 17:56:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 17:56:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 17:56:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 17:56:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 17:56:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 17:56:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 17:56:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 17:56:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 17:56:36 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 17:56:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 17:56:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 17:56:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 17:56:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 17:56:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 17:56:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 17:56:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 17:56:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 17:56:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 17:56:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 17:56:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 17:56:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 17:56:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 17:56:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 17:56:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 17:56:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 17:56:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 17:56:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 17:56:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:56:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 17:56:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 17:56:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 17:56:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 17:56:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 17:56:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 17:56:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 17:56:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 17:56:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 17:56:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 17:56:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 17:56:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 17:56:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 17:56:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 17:56:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 17:56:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 17:56:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 17:56:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 17:56:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:56:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 17:56:15 CST 2019]; root of context hierarchy
2019-05-27 17:56:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:56:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:56:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 17:56:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 17:56:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 17:56:40 -Registering beans for JMX exposure on startup
2019-05-27 17:56:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 17:56:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 17:56:40 -Starting beans in phase 2147483647
2019-05-27 17:56:40 -Context refreshed
2019-05-27 17:56:41 -Found 1 custom documentation plugin(s)
2019-05-27 17:56:41 -Scanning for api listing references
2019-05-27 17:56:41 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 17:56:41 -Generating unique operation named: removeUsingPOST_1
2019-05-27 17:56:41 -Generating unique operation named: addUsingGET_1
2019-05-27 17:56:41 -Generating unique operation named: editUsingGET_1
2019-05-27 17:56:41 -Generating unique operation named: listUsingGET_1
2019-05-27 17:56:41 -Generating unique operation named: removeUsingPOST_2
2019-05-27 17:56:41 -Generating unique operation named: removeUsingPOST_3
2019-05-27 17:56:41 -Generating unique operation named: saveUsingPOST_1
2019-05-27 17:56:41 -Generating unique operation named: updateUsingGET_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_2
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_2
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_2
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_4
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_5
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_2
2019-05-27 17:56:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_3
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_3
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_3
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_6
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_7
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_4
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_4
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_4
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_8
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_9
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 17:56:42 -Generating unique operation named: ElecUsingGET_1
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_5
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_5
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_5
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_10
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_11
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_6
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_6
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_6
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_7
2019-05-27 17:56:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_7
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_12
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_13
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_7
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 17:56:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_7
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_8
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_8
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_14
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_15
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_7
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_8
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 17:56:42 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 17:56:42 -Generating unique operation named: addUsingGET_8
2019-05-27 17:56:42 -Generating unique operation named: editUsingGET_9
2019-05-27 17:56:42 -Generating unique operation named: listUsingGET_9
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_16
2019-05-27 17:56:42 -Generating unique operation named: removeUsingPOST_17
2019-05-27 17:56:42 -Generating unique operation named: saveUsingPOST_8
2019-05-27 17:56:42 -Generating unique operation named: updateUsingGET_7
2019-05-27 17:56:42 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPOST_9
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPUT_7
2019-05-27 17:56:42 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 17:56:43 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 17:56:43 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 17:56:43 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_9
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_10
2019-05-27 17:56:43 -Generating unique operation named: infoUsingGET_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingPOST_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingPUT_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 17:56:43 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_10
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_18
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_19
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_10
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_11
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_20
2019-05-27 17:56:43 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_10
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_11
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_12
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_21
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_10
2019-05-27 17:56:43 -Generating unique operation named: treeUsingGET_1
2019-05-27 17:56:43 -Generating unique operation named: treeUsingGET_2
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_11
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_11
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_12
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_13
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_22
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_23
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_12
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_12
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_13
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_14
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_24
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_25
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_11
2019-05-27 17:56:43 -Generating unique operation named: updateUsingGET_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_13
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPUT_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 17:56:43 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_13
2019-05-27 17:56:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_14
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_15
2019-05-27 17:56:43 -Generating unique operation named: printEditUsingGET_1
2019-05-27 17:56:43 -Generating unique operation named: removeUsingPOST_26
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_12
2019-05-27 17:56:43 -Generating unique operation named: updateUsingGET_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_14
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPUT_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 17:56:43 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 17:56:43 -Generating unique operation named: addUsingGET_14
2019-05-27 17:56:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 17:56:43 -Generating unique operation named: editUsingGET_15
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_16
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_13
2019-05-27 17:56:43 -Generating unique operation named: saveUsingPOST_14
2019-05-27 17:56:43 -Generating unique operation named: updateUsingPOST_15
2019-05-27 17:56:43 -Generating unique operation named: listUsingGET_17
2019-05-27 17:56:43 -Generating unique operation named: listUsingHEAD_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingPOST_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingPUT_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingPATCH_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingDELETE_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 17:56:44 -Generating unique operation named: listUsingTRACE_1
2019-05-27 17:56:44 -Generating unique operation named: countDDUsingGET_1
2019-05-27 17:56:44 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 17:56:44 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 17:56:44 -Generating unique operation named: addUsingGET_15
2019-05-27 17:56:44 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 17:56:44 -Generating unique operation named: editUsingGET_16
2019-05-27 17:56:44 -Generating unique operation named: listUsingGET_18
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_27
2019-05-27 17:56:44 -Generating unique operation named: saveUsingPOST_15
2019-05-27 17:56:44 -Generating unique operation named: treeUsingGET_3
2019-05-27 17:56:44 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPOST_16
2019-05-27 17:56:44 -Generating unique operation named: addUsingGET_16
2019-05-27 17:56:44 -Generating unique operation named: editUsingGET_17
2019-05-27 17:56:44 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 17:56:44 -Generating unique operation named: listUsingGET_19
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_28
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_29
2019-05-27 17:56:44 -Generating unique operation named: saveUsingPOST_16
2019-05-27 17:56:44 -Generating unique operation named: updateUsingGET_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPOST_17
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPUT_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 17:56:44 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 17:56:44 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 17:56:44 -Generating unique operation named: addUsingGET_17
2019-05-27 17:56:44 -Generating unique operation named: editUsingGET_18
2019-05-27 17:56:44 -Generating unique operation named: listUsingGET_20
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_30
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_31
2019-05-27 17:56:44 -Generating unique operation named: saveUsingPOST_17
2019-05-27 17:56:44 -Generating unique operation named: updateUsingGET_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPOST_18
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPUT_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 17:56:44 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 17:56:44 -Generating unique operation named: addUsingGET_18
2019-05-27 17:56:44 -Generating unique operation named: editUsingGET_19
2019-05-27 17:56:44 -Generating unique operation named: listUsingGET_21
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_32
2019-05-27 17:56:44 -Generating unique operation named: removeUsingPOST_33
2019-05-27 17:56:44 -Generating unique operation named: saveUsingPOST_18
2019-05-27 17:56:44 -Generating unique operation named: updateUsingGET_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPOST_19
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPUT_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 17:56:44 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 17:56:44 -Starting Quartz Scheduler now
2019-05-27 17:56:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 17:56:44 -Starting...
2019-05-27 17:56:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 17:56:44 -Started.
2019-05-27 17:56:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 17:56:44 -Using a shared selector for servlet write/read
2019-05-27 17:56:45 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 17:56:45 -Started BootdoApplication in 31.054 seconds (JVM running for 31.783)
2019-05-27 17:56:45 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 17:56:45 -==> Parameters: 
2019-05-27 17:56:45 -<==      Total: 1
2019-05-27 17:57:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 17:57:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 17:57:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 107 ms
2019-05-27 17:57:21 -Enabling session validation scheduler...
2019-05-27 17:57:21 -请求地址 : http://localhost:8081/login;JSESSIONID=10d601ad-484c-4345-a1d7-e5e3f8c6f121
2019-05-27 17:57:21 -HTTP METHOD : GET
2019-05-27 17:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 17:57:21 -参数 : [{}]
2019-05-27 17:57:21 -耗时 : 6
2019-05-27 17:57:21 -返回值 : login
2019-05-27 17:57:23 -请求地址 : http://localhost:8081/getVerify
2019-05-27 17:57:23 -HTTP METHOD : GET
2019-05-27 17:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 17:57:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f3b63a0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a39ee23]
2019-05-27 17:57:29 -4065
2019-05-27 17:57:29 -耗时 : 6337
2019-05-27 17:57:29 -返回值 : null
2019-05-27 17:57:33 -请求地址 : http://localhost:8081/login
2019-05-27 17:57:33 -HTTP METHOD : POST
2019-05-27 17:57:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 17:57:33 -参数 : [admin, 111111, 4065, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a871167]
2019-05-27 17:57:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 17:57:33 -==> Parameters: admin(String)
2019-05-27 17:57:33 -<==      Total: 1
2019-05-27 17:57:33 -耗时 : 249
2019-05-27 17:57:33 -返回值 : {msg=操作成功, code=0}
2019-05-27 17:57:33 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 17:57:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:57:33 -==> Parameters: 1(Long), admin(String), 登录(String), 249(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 17:57:33.431(Timestamp)
2019-05-27 17:57:33 -<==    Updates: 1
2019-05-27 17:57:33 -请求地址 : http://localhost:8081/index
2019-05-27 17:57:33 -HTTP METHOD : GET
2019-05-27 17:57:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 17:57:33 -参数 : [{}]
2019-05-27 17:57:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 17:57:33 -==> Parameters: 1(Long)
2019-05-27 17:57:33 -<==      Total: 50
2019-05-27 17:57:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 17:57:33 -==> Parameters: 138(Long)
2019-05-27 17:57:33 -<==      Total: 1
2019-05-27 17:57:33 -耗时 : 243
2019-05-27 17:57:33 -返回值 : index_v1
2019-05-27 17:57:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 17:57:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 243(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 17:57:33.996(Timestamp)
2019-05-27 17:57:34 -<==    Updates: 1
2019-05-27 17:57:34 -请求地址 : http://localhost:8081/main
2019-05-27 17:57:34 -HTTP METHOD : GET
2019-05-27 17:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:57:34 -参数 : []
2019-05-27 17:57:34 -耗时 : 0
2019-05-27 17:57:34 -返回值 : main
2019-05-27 17:57:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 17:57:34 -HTTP METHOD : GET
2019-05-27 17:57:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 17:57:34 -参数 : []
2019-05-27 17:57:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 17:57:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 17:57:34 -<==      Total: 0
2019-05-27 17:57:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 17:57:34 -==> Parameters: 1(Long), 0(String)
2019-05-27 17:57:34 -<==      Total: 1
2019-05-27 17:57:34 -耗时 : 65
2019-05-27 17:57:34 -返回值 : com.bootdo.common.utils.PageUtils@3673f698
2019-05-27 17:57:34 -请求地址 : http://localhost:8081/main
2019-05-27 17:57:34 -HTTP METHOD : GET
2019-05-27 17:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 17:57:34 -参数 : []
2019-05-27 17:57:34 -耗时 : 1
2019-05-27 17:57:34 -返回值 : main
2019-05-27 17:57:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-05-27 17:57:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 17:57:41 -==> Parameters: 1(Long)
2019-05-27 17:57:41 -<==      Total: 94
2019-05-27 17:57:41 -请求地址 : http://localhost:8081/charts/countYY
2019-05-27 17:57:41 -HTTP METHOD : GET
2019-05-27 17:57:41 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-27 17:57:41 -参数 : []
2019-05-27 17:57:41 -耗时 : 0
2019-05-27 17:57:41 -返回值 : charts/countYY
2019-05-27 17:57:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:57:42 -HTTP METHOD : GET
2019-05-27 17:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:57:42 -参数 : [userType]
2019-05-27 17:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:57:42 -==> Parameters: userType(String)
2019-05-27 17:57:42 -<==      Total: 4
2019-05-27 17:57:42 -耗时 : 99
2019-05-27 17:57:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:57:44 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 17:57:44 -HTTP METHOD : GET
2019-05-27 17:57:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 17:57:44 -参数 : []
2019-05-27 17:57:44 -耗时 : 17
2019-05-27 17:57:44 -返回值 : charts/tableElecYY
2019-05-27 17:57:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:57:45 -HTTP METHOD : GET
2019-05-27 17:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:57:45 -参数 : [userType]
2019-05-27 17:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:57:45 -==> Parameters: userType(String)
2019-05-27 17:57:45 -<==      Total: 4
2019-05-27 17:57:45 -耗时 : 8
2019-05-27 17:57:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:57:46 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 17:57:46 -HTTP METHOD : GET
2019-05-27 17:57:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:57:46 -参数 : []
2019-05-27 17:57:46 -耗时 : 15
2019-05-27 17:57:46 -返回值 : charts/tableHeatYY
2019-05-27 17:57:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 17:57:46 -HTTP METHOD : GET
2019-05-27 17:57:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 17:57:46 -参数 : [userType]
2019-05-27 17:57:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 17:57:46 -==> Parameters: userType(String)
2019-05-27 17:57:46 -<==      Total: 4
2019-05-27 17:57:46 -耗时 : 6
2019-05-27 17:57:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 17:57:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 17:57:49 -HTTP METHOD : GET
2019-05-27 17:57:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 17:57:49 -参数 : []
2019-05-27 17:57:49 -耗时 : 0
2019-05-27 17:57:49 -返回值 : system/dept/deptTree
2019-05-27 17:57:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 17:57:49 -HTTP METHOD : GET
2019-05-27 17:57:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 17:57:49 -参数 : []
2019-05-27 17:57:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 17:57:49 -==> Parameters: 
2019-05-27 17:57:49 -<==      Total: 3
2019-05-27 17:57:49 -耗时 : 106
2019-05-27 17:57:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 17:57:51 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:57:51 -HTTP METHOD : POST
2019-05-27 17:57:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:57:51 -参数 : [com.bootdo.heat.vo.HeatVo@1858356, com.bootdo.moneyLog.vo.HeatLogVo@605dbada]
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:57:51 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:57:51 -<==      Total: 1
2019-05-27 17:57:51 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 17:57:51 -==> Parameters: 
2019-05-27 17:57:52 -<==      Total: 2
2019-05-27 17:57:52 -耗时 : 672
2019-05-27 17:57:52 -返回值 : {STotalyuOld=0.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=0.00, SHeatCostYYCount=4, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=0, TotalCostyu=410.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=2, TotalPreyuOld=0.00, TotalOwehuNew=1, TotalCosthu=14, STotalhuOld=0, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=2, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=1, GSTotalyuOld=0.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=0.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=0, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=0.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=2, GSPreHeatCountYYNew=1, TotalPrehuNew=6, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=0, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=0, GSHeatCostYYSum=2.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=0.00, GMTotalyuNew=0.00, TotalOwehuOld=0, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=0.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=7, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=4.00, GSPreHeatSumYYOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-05-27 17:59:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 17:59:32 -HTTP METHOD : GET
2019-05-27 17:59:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 17:59:32 -参数 : []
2019-05-27 17:59:32 -耗时 : 1
2019-05-27 17:59:32 -返回值 : system/dept/deptTree
2019-05-27 17:59:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 17:59:32 -HTTP METHOD : GET
2019-05-27 17:59:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 17:59:32 -参数 : []
2019-05-27 17:59:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 17:59:32 -==> Parameters: 
2019-05-27 17:59:33 -<==      Total: 3
2019-05-27 17:59:33 -耗时 : 98
2019-05-27 17:59:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 17:59:34 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:59:34 -HTTP METHOD : POST
2019-05-27 17:59:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:59:34 -参数 : [com.bootdo.heat.vo.HeatVo@6e0e0ae7, com.bootdo.moneyLog.vo.HeatLogVo@65034bec]
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:34 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-27 17:59:34 -<==      Total: 1
2019-05-27 17:59:34 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 17:59:34 -==> Parameters: 
2019-05-27 17:59:34 -<==      Total: 2
2019-05-27 17:59:34 -耗时 : 236
2019-05-27 17:59:34 -返回值 : {STotalyuOld=0.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=3, MHeatCostYYSum=1.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=0.00, SHeatCostYYCount=0, GMHeatCostYYCount=0, GMOweHeatSumYYNew=0.00, GSTotalhuOld=0, TotalCostyu=1.00, MHeatPrice=3.50, SHeatPrice=4.80, SPreHeatCountYYNew=0, TotalPreyuOld=0.00, TotalOwehuNew=0, TotalCosthu=1, STotalhuOld=0, MOweHeatSumYYNew=0.00, GSOweHeatSumYYOld=0.00, TotalLogyu=0.00, STotalhuNew=0, MTotalyuOld=0.00, MHeatLogYYCount=0, GSTotalhuNew=0, GSTotalyuOld=0.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=0.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=0, MTotalyuNew=0.00, GSTotalyuNew=0.00, MOweHeatCountYYOld=0, MHeatLogYYSum=0.00, TotalLoghu=0, GMHeatAreaYY=0.00, MOweHeatCountYYNew=0, TotalOweyuOld=0.00, MPreHeatCountYYOld=0, MHeatCostYYCount=1, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=0.00, SHeatLogYYCount=0, SOweHeatSumYYOld=0.00, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=0, TotalOweyuNew=0.00, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=0, GSHeatCostYYSum=0.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=0.00, SHeatAreaYY=0.00, GMTotalyuNew=0.00, TotalOwehuOld=0, PriceTotal=8.30, GSHeatLogYYSum=20.00, AreaTotalYY=0.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=0, TotalAllhuNew=0, TotalAllyuNew=0.00, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=0.00, GSPreHeatSumYYOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-05-27 17:59:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 17:59:38 -HTTP METHOD : GET
2019-05-27 17:59:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 17:59:38 -参数 : []
2019-05-27 17:59:38 -耗时 : 0
2019-05-27 17:59:38 -返回值 : system/dept/deptTree
2019-05-27 17:59:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 17:59:39 -HTTP METHOD : GET
2019-05-27 17:59:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 17:59:39 -参数 : []
2019-05-27 17:59:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 17:59:39 -==> Parameters: 
2019-05-27 17:59:39 -<==      Total: 3
2019-05-27 17:59:39 -耗时 : 3
2019-05-27 17:59:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 17:59:40 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 17:59:40 -HTTP METHOD : POST
2019-05-27 17:59:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 17:59:40 -参数 : [com.bootdo.heat.vo.HeatVo@11de8a88, com.bootdo.moneyLog.vo.HeatLogVo@201a1c6a]
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 17:59:40 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 17:59:40 -<==      Total: 1
2019-05-27 17:59:40 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 17:59:40 -==> Parameters: 
2019-05-27 17:59:40 -<==      Total: 2
2019-05-27 17:59:40 -耗时 : 127
2019-05-27 17:59:40 -返回值 : {STotalyuOld=0.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=0.00, SHeatCostYYCount=4, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=0, TotalCostyu=410.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=2, TotalPreyuOld=0.00, TotalOwehuNew=1, TotalCosthu=14, STotalhuOld=0, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=2, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=1, GSTotalyuOld=0.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=0.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=0, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=0.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=2, GSPreHeatCountYYNew=1, TotalPrehuNew=6, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=0, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=0, GSHeatCostYYSum=2.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=0.00, GMTotalyuNew=0.00, TotalOwehuOld=0, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=0.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=7, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=4.00, GSPreHeatSumYYOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-05-27 18:03:28 -Starting BootdoApplication on PC-201905091110 with PID 26088 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 18:03:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 18:03:28 -The following profiles are active: dev
2019-05-27 18:03:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:03:29 CST 2019]; root of context hierarchy
2019-05-27 18:03:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 18:03:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6351eb3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$55ab19e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 18:03:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 18:03:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:03:40 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 18:03:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 18:03:40 -Starting service [Tomcat]
2019-05-27 18:03:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 18:03:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 18:03:41 -Initializing Spring embedded WebApplicationContext
2019-05-27 18:03:41 -Root WebApplicationContext: initialization completed in 12054 ms
2019-05-27 18:03:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 18:03:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 18:03:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 18:03:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 18:03:42 -Filter xssFilter was not registered (disabled)
2019-05-27 18:03:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 18:03:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 18:03:42 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 18:03:42 -Servlet dispatcherServlet mapped to [/]
2019-05-27 18:03:49 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:03:29 CST 2019]; root of context hierarchy
2019-05-27 18:03:50 -Using default implementation for ThreadExecutor
2019-05-27 18:03:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 18:03:50 -Quartz Scheduler v.2.2.1 created.
2019-05-27 18:03:50 -RAMJobStore initialized.
2019-05-27 18:03:50 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 18:03:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 18:03:50 -Quartz scheduler version: 2.2.1
2019-05-27 18:03:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@11399548
2019-05-27 18:03:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 18:03:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 18:03:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 18:03:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 18:03:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 18:03:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 18:03:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 18:03:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 18:03:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 18:03:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 18:03:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 18:03:56 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 18:03:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:03:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 18:03:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 18:03:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 18:03:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 18:03:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 18:03:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 18:03:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 18:03:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 18:03:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 18:03:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 18:03:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:03:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 18:03:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 18:03:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:03:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 18:03:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 18:03:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 18:03:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 18:03:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 18:03:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 18:03:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 18:03:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 18:03:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 18:03:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 18:03:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 18:03:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 18:03:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 18:03:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 18:03:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 18:03:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 18:03:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 18:03:57 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 18:03:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 18:03:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 18:03:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:03:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:03:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 18:03:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 18:03:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 18:03:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 18:03:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:03:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 18:03:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 18:03:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 18:03:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 18:03:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 18:03:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 18:03:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 18:03:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 18:03:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 18:03:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 18:03:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 18:03:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 18:03:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 18:03:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 18:03:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 18:03:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 18:03:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 18:03:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 18:03:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 18:03:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 18:03:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 18:03:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 18:03:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 18:03:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 18:03:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 18:03:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 18:03:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 18:03:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 18:03:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:03:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 18:03:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:03:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 18:03:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 18:03:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 18:03:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 18:03:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 18:03:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 18:03:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:03:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:03:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:03:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 18:03:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 18:03:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:03:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 18:03:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 18:03:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 18:03:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 18:03:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 18:03:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 18:03:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:04:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:03:29 CST 2019]; root of context hierarchy
2019-05-27 18:04:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:04:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:04:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:04:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 18:04:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 18:04:04 -Registering beans for JMX exposure on startup
2019-05-27 18:04:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 18:04:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 18:04:04 -Starting beans in phase 2147483647
2019-05-27 18:04:04 -Context refreshed
2019-05-27 18:04:04 -Found 1 custom documentation plugin(s)
2019-05-27 18:04:04 -Scanning for api listing references
2019-05-27 18:04:05 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_1
2019-05-27 18:04:05 -Generating unique operation named: addUsingGET_1
2019-05-27 18:04:05 -Generating unique operation named: editUsingGET_1
2019-05-27 18:04:05 -Generating unique operation named: listUsingGET_1
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_2
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_3
2019-05-27 18:04:05 -Generating unique operation named: saveUsingPOST_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingGET_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPOST_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPUT_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 18:04:05 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 18:04:05 -Generating unique operation named: addUsingGET_2
2019-05-27 18:04:05 -Generating unique operation named: editUsingGET_2
2019-05-27 18:04:05 -Generating unique operation named: listUsingGET_2
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_4
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_5
2019-05-27 18:04:05 -Generating unique operation named: saveUsingPOST_2
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPOST_2
2019-05-27 18:04:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 18:04:05 -Generating unique operation named: addUsingGET_3
2019-05-27 18:04:05 -Generating unique operation named: editUsingGET_3
2019-05-27 18:04:05 -Generating unique operation named: listUsingGET_3
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_6
2019-05-27 18:04:05 -Generating unique operation named: removeUsingPOST_7
2019-05-27 18:04:05 -Generating unique operation named: saveUsingPOST_3
2019-05-27 18:04:05 -Generating unique operation named: updateUsingGET_2
2019-05-27 18:04:05 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPOST_3
2019-05-27 18:04:05 -Generating unique operation named: updateUsingPUT_2
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 18:04:06 -Generating unique operation named: addUsingGET_4
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_4
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_4
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_8
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_9
2019-05-27 18:04:06 -Generating unique operation named: saveUsingPOST_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingGET_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPUT_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 18:04:06 -Generating unique operation named: ElecUsingGET_1
2019-05-27 18:04:06 -Generating unique operation named: addUsingGET_5
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_5
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_5
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_10
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_11
2019-05-27 18:04:06 -Generating unique operation named: saveUsingPOST_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingGET_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPUT_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_6
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_6
2019-05-27 18:04:06 -Generating unique operation named: addUsingGET_6
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_7
2019-05-27 18:04:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_7
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_12
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_13
2019-05-27 18:04:06 -Generating unique operation named: saveUsingPOST_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingGET_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPUT_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 18:04:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 18:04:06 -Generating unique operation named: addUsingGET_7
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_8
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_8
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_14
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_15
2019-05-27 18:04:06 -Generating unique operation named: saveUsingPOST_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingGET_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_8
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPUT_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 18:04:06 -Generating unique operation named: addUsingGET_8
2019-05-27 18:04:06 -Generating unique operation named: editUsingGET_9
2019-05-27 18:04:06 -Generating unique operation named: listUsingGET_9
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_16
2019-05-27 18:04:06 -Generating unique operation named: removeUsingPOST_17
2019-05-27 18:04:06 -Generating unique operation named: saveUsingPOST_8
2019-05-27 18:04:06 -Generating unique operation named: updateUsingGET_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPOST_9
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPUT_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 18:04:06 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_9
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_10
2019-05-27 18:04:07 -Generating unique operation named: infoUsingGET_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingPOST_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingPUT_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 18:04:07 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_10
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_18
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_19
2019-05-27 18:04:07 -Generating unique operation named: saveUsingPOST_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPOST_10
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_11
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_20
2019-05-27 18:04:07 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_10
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_11
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_12
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_21
2019-05-27 18:04:07 -Generating unique operation named: saveUsingPOST_10
2019-05-27 18:04:07 -Generating unique operation named: treeUsingGET_1
2019-05-27 18:04:07 -Generating unique operation named: treeUsingGET_2
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPOST_11
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_11
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_12
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_13
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_22
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_23
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPOST_12
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_12
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_13
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_14
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_24
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_25
2019-05-27 18:04:07 -Generating unique operation named: saveUsingPOST_11
2019-05-27 18:04:07 -Generating unique operation named: updateUsingGET_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPOST_13
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPUT_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 18:04:07 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_13
2019-05-27 18:04:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_14
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_15
2019-05-27 18:04:07 -Generating unique operation named: printEditUsingGET_1
2019-05-27 18:04:07 -Generating unique operation named: removeUsingPOST_26
2019-05-27 18:04:07 -Generating unique operation named: saveUsingPOST_12
2019-05-27 18:04:07 -Generating unique operation named: updateUsingGET_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPOST_14
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPUT_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 18:04:07 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 18:04:07 -Generating unique operation named: addUsingGET_14
2019-05-27 18:04:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 18:04:07 -Generating unique operation named: editUsingGET_15
2019-05-27 18:04:07 -Generating unique operation named: listUsingGET_16
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_13
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_14
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPOST_15
2019-05-27 18:04:08 -Generating unique operation named: listUsingGET_17
2019-05-27 18:04:08 -Generating unique operation named: listUsingHEAD_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingPOST_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingPUT_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingPATCH_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingDELETE_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 18:04:08 -Generating unique operation named: listUsingTRACE_1
2019-05-27 18:04:08 -Generating unique operation named: countDDUsingGET_1
2019-05-27 18:04:08 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 18:04:08 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 18:04:08 -Generating unique operation named: addUsingGET_15
2019-05-27 18:04:08 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 18:04:08 -Generating unique operation named: editUsingGET_16
2019-05-27 18:04:08 -Generating unique operation named: listUsingGET_18
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_27
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_15
2019-05-27 18:04:08 -Generating unique operation named: treeUsingGET_3
2019-05-27 18:04:08 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPOST_16
2019-05-27 18:04:08 -Generating unique operation named: addUsingGET_16
2019-05-27 18:04:08 -Generating unique operation named: editUsingGET_17
2019-05-27 18:04:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 18:04:08 -Generating unique operation named: listUsingGET_19
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_28
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_29
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_16
2019-05-27 18:04:08 -Generating unique operation named: updateUsingGET_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPOST_17
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPUT_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 18:04:08 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 18:04:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 18:04:08 -Generating unique operation named: addUsingGET_17
2019-05-27 18:04:08 -Generating unique operation named: editUsingGET_18
2019-05-27 18:04:08 -Generating unique operation named: listUsingGET_20
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_30
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_31
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_17
2019-05-27 18:04:08 -Generating unique operation named: updateUsingGET_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPOST_18
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPUT_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 18:04:08 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 18:04:08 -Generating unique operation named: addUsingGET_18
2019-05-27 18:04:08 -Generating unique operation named: editUsingGET_19
2019-05-27 18:04:08 -Generating unique operation named: listUsingGET_21
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_32
2019-05-27 18:04:08 -Generating unique operation named: removeUsingPOST_33
2019-05-27 18:04:08 -Generating unique operation named: saveUsingPOST_18
2019-05-27 18:04:08 -Generating unique operation named: updateUsingGET_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPOST_19
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPUT_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 18:04:08 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 18:04:08 -Starting Quartz Scheduler now
2019-05-27 18:04:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 18:04:08 -Starting...
2019-05-27 18:04:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 18:04:08 -Started.
2019-05-27 18:04:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 18:04:08 -Using a shared selector for servlet write/read
2019-05-27 18:04:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 18:04:08 -Started BootdoApplication in 41.127 seconds (JVM running for 41.972)
2019-05-27 18:04:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 18:04:09 -==> Parameters: 
2019-05-27 18:04:09 -<==      Total: 1
2019-05-27 18:04:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 18:04:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 18:04:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-05-27 18:04:30 -Enabling session validation scheduler...
2019-05-27 18:04:30 -请求地址 : http://localhost:8081/login;JSESSIONID=62d1a073-3b1e-4728-895e-d11f373217c3
2019-05-27 18:04:30 -HTTP METHOD : GET
2019-05-27 18:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 18:04:30 -参数 : [{}]
2019-05-27 18:04:30 -耗时 : 9
2019-05-27 18:04:30 -返回值 : login
2019-05-27 18:04:32 -请求地址 : http://localhost:8081/getVerify
2019-05-27 18:04:32 -HTTP METHOD : GET
2019-05-27 18:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 18:04:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@45b1d32c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@418e4f42]
2019-05-27 18:04:34 -1787
2019-05-27 18:04:35 -耗时 : 2897
2019-05-27 18:04:35 -返回值 : null
2019-05-27 18:04:38 -请求地址 : http://localhost:8081/login
2019-05-27 18:04:38 -HTTP METHOD : POST
2019-05-27 18:04:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 18:04:38 -参数 : [admin, 111111, 1787, org.apache.shiro.web.servlet.ShiroHttpServletRequest@b318269]
2019-05-27 18:04:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 18:04:38 -==> Parameters: admin(String)
2019-05-27 18:04:38 -<==      Total: 1
2019-05-27 18:04:38 -耗时 : 278
2019-05-27 18:04:38 -返回值 : {msg=操作成功, code=0}
2019-05-27 18:04:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 18:04:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:04:38 -==> Parameters: 1(Long), admin(String), 登录(String), 278(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 18:04:38.759(Timestamp)
2019-05-27 18:04:38 -请求地址 : http://localhost:8081/index
2019-05-27 18:04:38 -HTTP METHOD : GET
2019-05-27 18:04:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:04:38 -参数 : [{}]
2019-05-27 18:04:38 -<==    Updates: 1
2019-05-27 18:04:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:04:39 -==> Parameters: 1(Long)
2019-05-27 18:04:39 -<==      Total: 50
2019-05-27 18:04:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:04:39 -==> Parameters: 138(Long)
2019-05-27 18:04:39 -<==      Total: 1
2019-05-27 18:04:39 -耗时 : 638
2019-05-27 18:04:39 -返回值 : index_v1
2019-05-27 18:04:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:04:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 638(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:04:39.545(Timestamp)
2019-05-27 18:04:39 -<==    Updates: 1
2019-05-27 18:04:39 -请求地址 : http://localhost:8081/main
2019-05-27 18:04:39 -HTTP METHOD : GET
2019-05-27 18:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:04:39 -参数 : []
2019-05-27 18:04:39 -耗时 : 0
2019-05-27 18:04:39 -返回值 : main
2019-05-27 18:04:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:04:40 -HTTP METHOD : GET
2019-05-27 18:04:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:04:40 -参数 : []
2019-05-27 18:04:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:04:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:04:40 -<==      Total: 0
2019-05-27 18:04:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:04:40 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:04:40 -<==      Total: 1
2019-05-27 18:04:40 -耗时 : 184
2019-05-27 18:04:40 -返回值 : com.bootdo.common.utils.PageUtils@61d0dfc5
2019-05-27 18:04:40 -请求地址 : http://localhost:8081/main
2019-05-27 18:04:40 -HTTP METHOD : GET
2019-05-27 18:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:04:40 -参数 : []
2019-05-27 18:04:40 -耗时 : 1
2019-05-27 18:04:40 -返回值 : main
2019-05-27 18:04:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 18:04:48 -==> Parameters: 1(Long)
2019-05-27 18:04:48 -<==      Total: 94
2019-05-27 18:04:48 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:04:48 -HTTP METHOD : GET
2019-05-27 18:04:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:04:48 -参数 : []
2019-05-27 18:04:48 -耗时 : 22
2019-05-27 18:04:48 -返回值 : charts/tableElecYY
2019-05-27 18:04:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:04:49 -HTTP METHOD : GET
2019-05-27 18:04:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:04:49 -参数 : [userType]
2019-05-27 18:04:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:04:49 -==> Parameters: userType(String)
2019-05-27 18:04:49 -<==      Total: 4
2019-05-27 18:04:49 -耗时 : 36
2019-05-27 18:04:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:04:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:04:51 -HTTP METHOD : GET
2019-05-27 18:04:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:04:51 -参数 : []
2019-05-27 18:04:51 -耗时 : 8
2019-05-27 18:04:51 -返回值 : charts/tableHeatYY
2019-05-27 18:04:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:04:51 -HTTP METHOD : GET
2019-05-27 18:04:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:04:51 -参数 : [userType]
2019-05-27 18:04:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:04:51 -==> Parameters: userType(String)
2019-05-27 18:04:51 -<==      Total: 4
2019-05-27 18:04:51 -耗时 : 6
2019-05-27 18:04:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:04:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:04:53 -HTTP METHOD : GET
2019-05-27 18:04:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:04:53 -参数 : []
2019-05-27 18:04:53 -耗时 : 0
2019-05-27 18:04:53 -返回值 : system/dept/deptTree
2019-05-27 18:04:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:04:53 -HTTP METHOD : GET
2019-05-27 18:04:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:04:53 -参数 : []
2019-05-27 18:04:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:04:53 -==> Parameters: 
2019-05-27 18:04:54 -<==      Total: 3
2019-05-27 18:04:54 -耗时 : 47
2019-05-27 18:04:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:04:55 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:04:55 -HTTP METHOD : POST
2019-05-27 18:04:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:04:55 -参数 : [com.bootdo.heat.vo.HeatVo@617df786, com.bootdo.moneyLog.vo.HeatLogVo@714c56e2]
2019-05-27 18:04:55 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:55 -<==      Total: 1
2019-05-27 18:04:55 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:04:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:04:56 -<==      Total: 1
2019-05-27 18:04:56 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 18:04:56 -==> Parameters: 
2019-05-27 18:04:56 -<==      Total: 2
2019-05-27 18:04:56 -耗时 : 469
2019-05-27 18:04:56 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=1.00, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=2.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-27 18:04:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-27 18:07:35 -请求地址 : http://localhost:8081/index
2019-05-27 18:07:35 -HTTP METHOD : GET
2019-05-27 18:07:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:07:35 -参数 : [{}]
2019-05-27 18:07:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:07:35 -==> Parameters: 1(Long)
2019-05-27 18:07:35 -<==      Total: 50
2019-05-27 18:07:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:07:35 -==> Parameters: 138(Long)
2019-05-27 18:07:35 -<==      Total: 1
2019-05-27 18:07:35 -耗时 : 58
2019-05-27 18:07:35 -返回值 : index_v1
2019-05-27 18:07:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:07:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 58(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:07:35.323(Timestamp)
2019-05-27 18:07:35 -<==    Updates: 1
2019-05-27 18:07:35 -请求地址 : http://localhost:8081/main
2019-05-27 18:07:35 -HTTP METHOD : GET
2019-05-27 18:07:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:07:35 -参数 : []
2019-05-27 18:07:35 -耗时 : 1
2019-05-27 18:07:35 -返回值 : main
2019-05-27 18:07:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:07:35 -HTTP METHOD : GET
2019-05-27 18:07:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:07:35 -参数 : []
2019-05-27 18:07:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:07:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:07:35 -<==      Total: 0
2019-05-27 18:07:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:07:35 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:07:35 -<==      Total: 1
2019-05-27 18:07:35 -耗时 : 34
2019-05-27 18:07:35 -返回值 : com.bootdo.common.utils.PageUtils@5d15ca86
2019-05-27 18:07:35 -请求地址 : http://localhost:8081/main
2019-05-27 18:07:35 -HTTP METHOD : GET
2019-05-27 18:07:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:07:35 -参数 : []
2019-05-27 18:07:35 -耗时 : 0
2019-05-27 18:07:35 -返回值 : main
2019-05-27 18:07:42 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:07:42 -HTTP METHOD : GET
2019-05-27 18:07:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:07:42 -参数 : []
2019-05-27 18:07:42 -耗时 : 0
2019-05-27 18:07:42 -返回值 : charts/tableElecYY
2019-05-27 18:07:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:07:42 -HTTP METHOD : GET
2019-05-27 18:07:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:07:42 -参数 : [userType]
2019-05-27 18:07:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:07:42 -==> Parameters: userType(String)
2019-05-27 18:07:42 -<==      Total: 4
2019-05-27 18:07:42 -耗时 : 5
2019-05-27 18:07:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:07:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:07:44 -HTTP METHOD : GET
2019-05-27 18:07:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:07:44 -参数 : []
2019-05-27 18:07:44 -耗时 : 1
2019-05-27 18:07:44 -返回值 : charts/tableHeatYY
2019-05-27 18:07:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:07:44 -HTTP METHOD : GET
2019-05-27 18:07:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:07:44 -参数 : [userType]
2019-05-27 18:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:07:44 -==> Parameters: userType(String)
2019-05-27 18:07:44 -<==      Total: 4
2019-05-27 18:07:44 -耗时 : 8
2019-05-27 18:07:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:07:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:07:44 -HTTP METHOD : GET
2019-05-27 18:07:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:07:44 -参数 : []
2019-05-27 18:07:44 -耗时 : 0
2019-05-27 18:07:44 -返回值 : system/dept/deptTree
2019-05-27 18:07:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:07:45 -HTTP METHOD : GET
2019-05-27 18:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:07:45 -参数 : []
2019-05-27 18:07:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:07:45 -==> Parameters: 
2019-05-27 18:07:45 -<==      Total: 3
2019-05-27 18:07:45 -耗时 : 4
2019-05-27 18:07:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:07:49 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:07:49 -HTTP METHOD : POST
2019-05-27 18:07:49 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:07:49 -参数 : [com.bootdo.heat.vo.HeatVo@389ed654, com.bootdo.moneyLog.vo.HeatLogVo@43d1edd5]
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:07:49 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:07:49 -<==      Total: 1
2019-05-27 18:07:49 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 18:07:49 -==> Parameters: 
2019-05-27 18:07:49 -<==      Total: 2
2019-05-27 18:07:49 -耗时 : 142
2019-05-27 18:07:49 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=1.00, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=2.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-27 18:08:48 -请求地址 : http://localhost:8081/index
2019-05-27 18:08:48 -HTTP METHOD : GET
2019-05-27 18:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:08:48 -参数 : [{}]
2019-05-27 18:08:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:08:48 -==> Parameters: 1(Long)
2019-05-27 18:08:48 -<==      Total: 50
2019-05-27 18:08:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:08:48 -==> Parameters: 138(Long)
2019-05-27 18:08:48 -<==      Total: 1
2019-05-27 18:08:48 -耗时 : 112
2019-05-27 18:08:48 -返回值 : index_v1
2019-05-27 18:08:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:08:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 112(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:08:48.155(Timestamp)
2019-05-27 18:08:48 -<==    Updates: 1
2019-05-27 18:08:48 -请求地址 : http://localhost:8081/main
2019-05-27 18:08:48 -HTTP METHOD : GET
2019-05-27 18:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:08:48 -参数 : []
2019-05-27 18:08:48 -耗时 : 0
2019-05-27 18:08:48 -返回值 : main
2019-05-27 18:08:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:08:48 -HTTP METHOD : GET
2019-05-27 18:08:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:08:48 -参数 : []
2019-05-27 18:08:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:08:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:08:48 -<==      Total: 0
2019-05-27 18:08:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:08:48 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:08:48 -<==      Total: 1
2019-05-27 18:08:48 -耗时 : 7
2019-05-27 18:08:48 -返回值 : com.bootdo.common.utils.PageUtils@7ae3f75
2019-05-27 18:08:48 -请求地址 : http://localhost:8081/main
2019-05-27 18:08:48 -HTTP METHOD : GET
2019-05-27 18:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:08:48 -参数 : []
2019-05-27 18:08:48 -耗时 : 0
2019-05-27 18:08:48 -返回值 : main
2019-05-27 18:08:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:08:52 -HTTP METHOD : GET
2019-05-27 18:08:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:08:52 -参数 : []
2019-05-27 18:08:52 -耗时 : 0
2019-05-27 18:08:52 -返回值 : charts/tableElecYY
2019-05-27 18:08:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:08:52 -HTTP METHOD : GET
2019-05-27 18:08:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:08:52 -参数 : [userType]
2019-05-27 18:08:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:08:52 -==> Parameters: userType(String)
2019-05-27 18:08:52 -<==      Total: 4
2019-05-27 18:08:52 -耗时 : 8
2019-05-27 18:08:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:08:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:08:53 -HTTP METHOD : GET
2019-05-27 18:08:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:08:53 -参数 : []
2019-05-27 18:08:53 -耗时 : 0
2019-05-27 18:08:53 -返回值 : charts/tableHeatYY
2019-05-27 18:08:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:08:54 -HTTP METHOD : GET
2019-05-27 18:08:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:08:54 -参数 : [userType]
2019-05-27 18:08:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:08:54 -==> Parameters: userType(String)
2019-05-27 18:08:54 -<==      Total: 4
2019-05-27 18:08:54 -耗时 : 4
2019-05-27 18:08:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:08:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:08:57 -HTTP METHOD : GET
2019-05-27 18:08:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:08:57 -参数 : []
2019-05-27 18:08:57 -耗时 : 0
2019-05-27 18:08:57 -返回值 : system/dept/deptTree
2019-05-27 18:08:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:08:58 -HTTP METHOD : GET
2019-05-27 18:08:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:08:58 -参数 : []
2019-05-27 18:08:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:08:58 -==> Parameters: 
2019-05-27 18:08:58 -<==      Total: 3
2019-05-27 18:08:58 -耗时 : 5
2019-05-27 18:08:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:08:59 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:08:59 -HTTP METHOD : POST
2019-05-27 18:08:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:08:59 -参数 : [com.bootdo.heat.vo.HeatVo@33779c7f, com.bootdo.moneyLog.vo.HeatLogVo@595354ea]
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:08:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:08:59 -<==      Total: 1
2019-05-27 18:08:59 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 18:08:59 -==> Parameters: 
2019-05-27 18:08:59 -<==      Total: 2
2019-05-27 18:08:59 -耗时 : 128
2019-05-27 18:08:59 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=1.00, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=2.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-27 18:09:29 -请求地址 : http://localhost:8081/login;JSESSIONID=820ec412-6406-464d-8eb1-8b4b3e632365
2019-05-27 18:09:29 -HTTP METHOD : GET
2019-05-27 18:09:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 18:09:29 -参数 : [{}]
2019-05-27 18:09:29 -耗时 : 1
2019-05-27 18:09:29 -返回值 : login
2019-05-27 18:09:30 -请求地址 : http://localhost:8081/getVerify
2019-05-27 18:09:30 -HTTP METHOD : GET
2019-05-27 18:09:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 18:09:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@29a3d9a9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@791002e6]
2019-05-27 18:09:30 -9347
2019-05-27 18:09:30 -耗时 : 14
2019-05-27 18:09:30 -返回值 : null
2019-05-27 18:09:30 -请求地址 : http://localhost:8081/login
2019-05-27 18:09:30 -HTTP METHOD : GET
2019-05-27 18:09:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 18:09:30 -参数 : [{}]
2019-05-27 18:09:30 -耗时 : 0
2019-05-27 18:09:30 -返回值 : login
2019-05-27 18:09:34 -请求地址 : http://localhost:8081/login
2019-05-27 18:09:34 -HTTP METHOD : POST
2019-05-27 18:09:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 18:09:34 -参数 : [admin, 111111, 9347, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cfcc518]
2019-05-27 18:09:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 18:09:34 -==> Parameters: admin(String)
2019-05-27 18:09:34 -<==      Total: 1
2019-05-27 18:09:34 -耗时 : 5
2019-05-27 18:09:34 -返回值 : {msg=操作成功, code=0}
2019-05-27 18:09:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:09:34 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 18:09:34.098(Timestamp)
2019-05-27 18:09:34 -<==    Updates: 1
2019-05-27 18:09:34 -请求地址 : http://localhost:8081/index
2019-05-27 18:09:34 -HTTP METHOD : GET
2019-05-27 18:09:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:09:34 -参数 : [{}]
2019-05-27 18:09:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:09:34 -==> Parameters: 1(Long)
2019-05-27 18:09:34 -<==      Total: 50
2019-05-27 18:09:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:09:34 -==> Parameters: 138(Long)
2019-05-27 18:09:34 -<==      Total: 1
2019-05-27 18:09:34 -耗时 : 23
2019-05-27 18:09:34 -返回值 : index_v1
2019-05-27 18:09:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:09:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:09:34.432(Timestamp)
2019-05-27 18:09:34 -<==    Updates: 1
2019-05-27 18:09:34 -请求地址 : http://localhost:8081/main
2019-05-27 18:09:34 -HTTP METHOD : GET
2019-05-27 18:09:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:09:34 -参数 : []
2019-05-27 18:09:34 -耗时 : 1
2019-05-27 18:09:34 -返回值 : main
2019-05-27 18:09:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:09:34 -HTTP METHOD : GET
2019-05-27 18:09:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:09:34 -参数 : []
2019-05-27 18:09:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:09:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:09:34 -<==      Total: 0
2019-05-27 18:09:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:09:34 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:09:34 -<==      Total: 1
2019-05-27 18:09:34 -耗时 : 6
2019-05-27 18:09:34 -返回值 : com.bootdo.common.utils.PageUtils@423d5ac3
2019-05-27 18:09:35 -请求地址 : http://localhost:8081/main
2019-05-27 18:09:35 -HTTP METHOD : GET
2019-05-27 18:09:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:09:35 -参数 : []
2019-05-27 18:09:35 -耗时 : 1
2019-05-27 18:09:35 -返回值 : main
2019-05-27 18:10:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 18:10:47 -==> Parameters: 1(Long)
2019-05-27 18:10:47 -<==      Total: 94
2019-05-27 18:10:47 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:10:47 -HTTP METHOD : GET
2019-05-27 18:10:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:10:47 -参数 : []
2019-05-27 18:10:47 -耗时 : 1
2019-05-27 18:10:47 -返回值 : charts/tableElecYY
2019-05-27 18:10:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:10:48 -HTTP METHOD : GET
2019-05-27 18:10:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:10:48 -参数 : [userType]
2019-05-27 18:10:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:10:48 -==> Parameters: userType(String)
2019-05-27 18:10:48 -<==      Total: 4
2019-05-27 18:10:48 -耗时 : 4
2019-05-27 18:10:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:10:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:10:55 -HTTP METHOD : GET
2019-05-27 18:10:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:10:55 -参数 : []
2019-05-27 18:10:55 -耗时 : 0
2019-05-27 18:10:55 -返回值 : charts/tableHeatYY
2019-05-27 18:10:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:10:55 -HTTP METHOD : GET
2019-05-27 18:10:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:10:55 -参数 : [userType]
2019-05-27 18:10:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:10:55 -==> Parameters: userType(String)
2019-05-27 18:10:55 -<==      Total: 4
2019-05-27 18:10:55 -耗时 : 3
2019-05-27 18:10:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:11:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:11:14 -HTTP METHOD : GET
2019-05-27 18:11:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:11:14 -参数 : []
2019-05-27 18:11:14 -耗时 : 1
2019-05-27 18:11:14 -返回值 : system/dept/deptTree
2019-05-27 18:11:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:11:14 -HTTP METHOD : GET
2019-05-27 18:11:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:11:14 -参数 : []
2019-05-27 18:11:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:11:14 -==> Parameters: 
2019-05-27 18:11:14 -<==      Total: 3
2019-05-27 18:11:14 -耗时 : 2
2019-05-27 18:11:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:11:16 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:11:16 -HTTP METHOD : POST
2019-05-27 18:11:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:11:16 -参数 : [com.bootdo.heat.vo.HeatVo@1ab39e4f, com.bootdo.moneyLog.vo.HeatLogVo@10066889]
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:11:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:11:16 -<==      Total: 1
2019-05-27 18:11:16 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 18:11:16 -==> Parameters: 
2019-05-27 18:11:16 -<==      Total: 2
2019-05-27 18:11:16 -耗时 : 115
2019-05-27 18:11:16 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=1.00, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=2.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-27 18:20:17 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-27 18:20:17 -HTTP METHOD : GET
2019-05-27 18:20:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-27 18:20:17 -参数 : []
2019-05-27 18:20:17 -耗时 : 8
2019-05-27 18:20:17 -返回值 : charts/tableWaterYY
2019-05-27 18:20:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:17 -HTTP METHOD : GET
2019-05-27 18:20:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:17 -参数 : [userType]
2019-05-27 18:20:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:17 -==> Parameters: userType(String)
2019-05-27 18:20:17 -<==      Total: 4
2019-05-27 18:20:17 -耗时 : 7
2019-05-27 18:20:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:17 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:20:17 -HTTP METHOD : GET
2019-05-27 18:20:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:20:17 -参数 : []
2019-05-27 18:20:17 -耗时 : 0
2019-05-27 18:20:17 -返回值 : charts/tableHeatYY
2019-05-27 18:20:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:18 -HTTP METHOD : GET
2019-05-27 18:20:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:18 -参数 : [userType]
2019-05-27 18:20:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:18 -==> Parameters: userType(String)
2019-05-27 18:20:18 -<==      Total: 4
2019-05-27 18:20:18 -耗时 : 5
2019-05-27 18:20:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:18 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:20:18 -HTTP METHOD : GET
2019-05-27 18:20:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:20:18 -参数 : []
2019-05-27 18:20:18 -耗时 : 0
2019-05-27 18:20:18 -返回值 : charts/tableElecYY
2019-05-27 18:20:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:18 -HTTP METHOD : GET
2019-05-27 18:20:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:18 -参数 : [userType]
2019-05-27 18:20:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:18 -==> Parameters: userType(String)
2019-05-27 18:20:18 -<==      Total: 4
2019-05-27 18:20:18 -耗时 : 4
2019-05-27 18:20:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:19 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:20:19 -HTTP METHOD : GET
2019-05-27 18:20:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:20:19 -参数 : []
2019-05-27 18:20:19 -耗时 : 0
2019-05-27 18:20:19 -返回值 : charts/tableHeatYY
2019-05-27 18:20:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:19 -HTTP METHOD : GET
2019-05-27 18:20:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:19 -参数 : [userType]
2019-05-27 18:20:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:19 -==> Parameters: userType(String)
2019-05-27 18:20:19 -<==      Total: 4
2019-05-27 18:20:19 -耗时 : 4
2019-05-27 18:20:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:19 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-27 18:20:19 -HTTP METHOD : GET
2019-05-27 18:20:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-27 18:20:19 -参数 : []
2019-05-27 18:20:19 -耗时 : 1
2019-05-27 18:20:19 -返回值 : charts/tableWaterYY
2019-05-27 18:20:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:19 -HTTP METHOD : GET
2019-05-27 18:20:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:19 -参数 : [userType]
2019-05-27 18:20:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:19 -==> Parameters: userType(String)
2019-05-27 18:20:19 -<==      Total: 4
2019-05-27 18:20:19 -耗时 : 9
2019-05-27 18:20:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:20 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:20:20 -HTTP METHOD : GET
2019-05-27 18:20:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:20:20 -参数 : []
2019-05-27 18:20:20 -耗时 : 0
2019-05-27 18:20:20 -返回值 : charts/tableHeatYY
2019-05-27 18:20:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:20 -HTTP METHOD : GET
2019-05-27 18:20:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:20 -参数 : [userType]
2019-05-27 18:20:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:20 -==> Parameters: userType(String)
2019-05-27 18:20:20 -<==      Total: 4
2019-05-27 18:20:20 -耗时 : 4
2019-05-27 18:20:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:20 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:20:20 -HTTP METHOD : GET
2019-05-27 18:20:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:20:20 -参数 : []
2019-05-27 18:20:20 -耗时 : 1
2019-05-27 18:20:20 -返回值 : charts/tableElecYY
2019-05-27 18:20:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:21 -HTTP METHOD : GET
2019-05-27 18:20:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:21 -参数 : [userType]
2019-05-27 18:20:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:21 -==> Parameters: userType(String)
2019-05-27 18:20:21 -<==      Total: 4
2019-05-27 18:20:21 -耗时 : 3
2019-05-27 18:20:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:21 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:20:21 -HTTP METHOD : GET
2019-05-27 18:20:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:20:21 -参数 : []
2019-05-27 18:20:21 -耗时 : 0
2019-05-27 18:20:21 -返回值 : charts/tableHeatYY
2019-05-27 18:20:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:21 -HTTP METHOD : GET
2019-05-27 18:20:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:21 -参数 : [userType]
2019-05-27 18:20:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:21 -==> Parameters: userType(String)
2019-05-27 18:20:21 -<==      Total: 4
2019-05-27 18:20:21 -耗时 : 5
2019-05-27 18:20:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:22 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-27 18:20:22 -HTTP METHOD : GET
2019-05-27 18:20:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-27 18:20:22 -参数 : []
2019-05-27 18:20:22 -耗时 : 0
2019-05-27 18:20:22 -返回值 : charts/tableWaterYY
2019-05-27 18:20:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:22 -HTTP METHOD : GET
2019-05-27 18:20:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:22 -参数 : [userType]
2019-05-27 18:20:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:22 -==> Parameters: userType(String)
2019-05-27 18:20:22 -<==      Total: 4
2019-05-27 18:20:22 -耗时 : 4
2019-05-27 18:20:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:22 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:20:22 -HTTP METHOD : GET
2019-05-27 18:20:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:20:22 -参数 : []
2019-05-27 18:20:22 -耗时 : 0
2019-05-27 18:20:22 -返回值 : charts/tableHeatYY
2019-05-27 18:20:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:22 -HTTP METHOD : GET
2019-05-27 18:20:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:22 -参数 : [userType]
2019-05-27 18:20:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:22 -==> Parameters: userType(String)
2019-05-27 18:20:22 -<==      Total: 4
2019-05-27 18:20:22 -耗时 : 3
2019-05-27 18:20:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:20:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:20:23 -HTTP METHOD : GET
2019-05-27 18:20:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:20:23 -参数 : []
2019-05-27 18:20:23 -耗时 : 1
2019-05-27 18:20:23 -返回值 : charts/tableElecYY
2019-05-27 18:20:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:20:23 -HTTP METHOD : GET
2019-05-27 18:20:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:20:23 -参数 : [userType]
2019-05-27 18:20:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:20:23 -==> Parameters: userType(String)
2019-05-27 18:20:23 -<==      Total: 4
2019-05-27 18:20:23 -耗时 : 4
2019-05-27 18:20:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:22:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 18:22:29 -==> Parameters: 1(Long)
2019-05-27 18:22:29 -<==      Total: 94
2019-05-27 18:22:29 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:22:29 -HTTP METHOD : GET
2019-05-27 18:22:29 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:22:29 -参数 : []
2019-05-27 18:22:29 -耗时 : 0
2019-05-27 18:22:29 -返回值 : charts/tableHeatYY
2019-05-27 18:22:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:22:30 -HTTP METHOD : GET
2019-05-27 18:22:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:22:30 -参数 : [userType]
2019-05-27 18:22:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:22:30 -==> Parameters: userType(String)
2019-05-27 18:22:30 -<==      Total: 4
2019-05-27 18:22:30 -耗时 : 3
2019-05-27 18:22:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:24:24 -Starting BootdoApplication on PC-201905091110 with PID 22956 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 18:24:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 18:24:24 -The following profiles are active: dev
2019-05-27 18:24:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:24:24 CST 2019]; root of context hierarchy
2019-05-27 18:24:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 18:24:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae562c15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a0af5abc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 18:24:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 18:24:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:24:34 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 18:24:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 18:24:34 -Starting service [Tomcat]
2019-05-27 18:24:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 18:24:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 18:24:34 -Initializing Spring embedded WebApplicationContext
2019-05-27 18:24:34 -Root WebApplicationContext: initialization completed in 9844 ms
2019-05-27 18:24:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 18:24:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 18:24:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 18:24:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 18:24:35 -Filter xssFilter was not registered (disabled)
2019-05-27 18:24:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 18:24:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 18:24:35 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 18:24:35 -Servlet dispatcherServlet mapped to [/]
2019-05-27 18:24:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:24:24 CST 2019]; root of context hierarchy
2019-05-27 18:24:40 -Using default implementation for ThreadExecutor
2019-05-27 18:24:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 18:24:40 -Quartz Scheduler v.2.2.1 created.
2019-05-27 18:24:40 -RAMJobStore initialized.
2019-05-27 18:24:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 18:24:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 18:24:40 -Quartz scheduler version: 2.2.1
2019-05-27 18:24:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@64c25a62
2019-05-27 18:24:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 18:24:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 18:24:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 18:24:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 18:24:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 18:24:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 18:24:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 18:24:44 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 18:24:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 18:24:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 18:24:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 18:24:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 18:24:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 18:24:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 18:24:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 18:24:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 18:24:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 18:24:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 18:24:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 18:24:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:24:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 18:24:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:24:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 18:24:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 18:24:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 18:24:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 18:24:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 18:24:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 18:24:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 18:24:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 18:24:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 18:24:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 18:24:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 18:24:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 18:24:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 18:24:44 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:24:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:24:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 18:24:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 18:24:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 18:24:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 18:24:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 18:24:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 18:24:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 18:24:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:44 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 18:24:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 18:24:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 18:24:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 18:24:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 18:24:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 18:24:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 18:24:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 18:24:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 18:24:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 18:24:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 18:24:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:45 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 18:24:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 18:24:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 18:24:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 18:24:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 18:24:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 18:24:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 18:24:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 18:24:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 18:24:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 18:24:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 18:24:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 18:24:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 18:24:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 18:24:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 18:24:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 18:24:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 18:24:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 18:24:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:24:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:24:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 18:24:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 18:24:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 18:24:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 18:24:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 18:24:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 18:24:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 18:24:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:45 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 18:24:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:24:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:24:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:24:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 18:24:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 18:24:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:24:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 18:24:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 18:24:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 18:24:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 18:24:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 18:24:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 18:24:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:24:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 18:24:24 CST 2019]; root of context hierarchy
2019-05-27 18:24:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:24:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:24:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:24:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 18:24:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 18:24:55 -Registering beans for JMX exposure on startup
2019-05-27 18:24:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 18:24:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 18:24:55 -Starting beans in phase 2147483647
2019-05-27 18:24:55 -Context refreshed
2019-05-27 18:24:55 -Found 1 custom documentation plugin(s)
2019-05-27 18:24:55 -Scanning for api listing references
2019-05-27 18:24:56 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 18:24:56 -Generating unique operation named: removeUsingPOST_1
2019-05-27 18:24:56 -Generating unique operation named: addUsingGET_1
2019-05-27 18:24:56 -Generating unique operation named: editUsingGET_1
2019-05-27 18:24:56 -Generating unique operation named: listUsingGET_1
2019-05-27 18:24:56 -Generating unique operation named: removeUsingPOST_2
2019-05-27 18:24:56 -Generating unique operation named: removeUsingPOST_3
2019-05-27 18:24:56 -Generating unique operation named: saveUsingPOST_1
2019-05-27 18:24:56 -Generating unique operation named: updateUsingGET_1
2019-05-27 18:24:56 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 18:24:56 -Generating unique operation named: updateUsingPOST_1
2019-05-27 18:24:56 -Generating unique operation named: updateUsingPUT_1
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 18:24:57 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 18:24:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 18:24:57 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 18:24:57 -Generating unique operation named: addUsingGET_2
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_2
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_2
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_4
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_5
2019-05-27 18:24:57 -Generating unique operation named: saveUsingPOST_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_2
2019-05-27 18:24:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 18:24:57 -Generating unique operation named: addUsingGET_3
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_3
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_3
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_6
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_7
2019-05-27 18:24:57 -Generating unique operation named: saveUsingPOST_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingGET_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPUT_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 18:24:57 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 18:24:57 -Generating unique operation named: addUsingGET_4
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_4
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_4
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_8
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_9
2019-05-27 18:24:57 -Generating unique operation named: saveUsingPOST_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingGET_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPUT_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 18:24:57 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 18:24:57 -Generating unique operation named: ElecUsingGET_1
2019-05-27 18:24:57 -Generating unique operation named: addUsingGET_5
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_5
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_5
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_10
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_11
2019-05-27 18:24:57 -Generating unique operation named: saveUsingPOST_5
2019-05-27 18:24:57 -Generating unique operation named: updateUsingGET_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_5
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPUT_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 18:24:57 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_6
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_6
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_6
2019-05-27 18:24:57 -Generating unique operation named: addUsingGET_6
2019-05-27 18:24:57 -Generating unique operation named: editUsingGET_7
2019-05-27 18:24:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 18:24:57 -Generating unique operation named: listUsingGET_7
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_12
2019-05-27 18:24:57 -Generating unique operation named: removeUsingPOST_13
2019-05-27 18:24:57 -Generating unique operation named: saveUsingPOST_6
2019-05-27 18:24:57 -Generating unique operation named: updateUsingGET_5
2019-05-27 18:24:57 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPOST_7
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPUT_5
2019-05-27 18:24:57 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 18:24:58 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 18:24:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 18:24:58 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 18:24:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 18:24:58 -Generating unique operation named: addUsingGET_7
2019-05-27 18:24:58 -Generating unique operation named: editUsingGET_8
2019-05-27 18:24:58 -Generating unique operation named: listUsingGET_8
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_14
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_15
2019-05-27 18:24:58 -Generating unique operation named: saveUsingPOST_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingGET_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPOST_8
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPUT_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 18:24:58 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 18:24:58 -Generating unique operation named: addUsingGET_8
2019-05-27 18:24:58 -Generating unique operation named: editUsingGET_9
2019-05-27 18:24:58 -Generating unique operation named: listUsingGET_9
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_16
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_17
2019-05-27 18:24:58 -Generating unique operation named: saveUsingPOST_8
2019-05-27 18:24:58 -Generating unique operation named: updateUsingGET_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPOST_9
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPUT_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 18:24:58 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 18:24:58 -Generating unique operation named: addUsingGET_9
2019-05-27 18:24:58 -Generating unique operation named: editUsingGET_10
2019-05-27 18:24:58 -Generating unique operation named: infoUsingGET_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingPOST_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingPUT_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 18:24:58 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 18:24:58 -Generating unique operation named: listUsingGET_10
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_18
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_19
2019-05-27 18:24:58 -Generating unique operation named: saveUsingPOST_9
2019-05-27 18:24:58 -Generating unique operation named: updateUsingPOST_10
2019-05-27 18:24:58 -Generating unique operation named: listUsingGET_11
2019-05-27 18:24:58 -Generating unique operation named: removeUsingPOST_20
2019-05-27 18:24:58 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 18:24:58 -Generating unique operation named: addUsingGET_10
2019-05-27 18:24:58 -Generating unique operation named: editUsingGET_11
2019-05-27 18:24:58 -Generating unique operation named: listUsingGET_12
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_21
2019-05-27 18:24:59 -Generating unique operation named: saveUsingPOST_10
2019-05-27 18:24:59 -Generating unique operation named: treeUsingGET_1
2019-05-27 18:24:59 -Generating unique operation named: treeUsingGET_2
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPOST_11
2019-05-27 18:24:59 -Generating unique operation named: addUsingGET_11
2019-05-27 18:24:59 -Generating unique operation named: editUsingGET_12
2019-05-27 18:24:59 -Generating unique operation named: listUsingGET_13
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_22
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_23
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPOST_12
2019-05-27 18:24:59 -Generating unique operation named: addUsingGET_12
2019-05-27 18:24:59 -Generating unique operation named: editUsingGET_13
2019-05-27 18:24:59 -Generating unique operation named: listUsingGET_14
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_24
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_25
2019-05-27 18:24:59 -Generating unique operation named: saveUsingPOST_11
2019-05-27 18:24:59 -Generating unique operation named: updateUsingGET_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPOST_13
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPUT_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 18:24:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 18:24:59 -Generating unique operation named: addUsingGET_13
2019-05-27 18:24:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 18:24:59 -Generating unique operation named: editUsingGET_14
2019-05-27 18:24:59 -Generating unique operation named: listUsingGET_15
2019-05-27 18:24:59 -Generating unique operation named: printEditUsingGET_1
2019-05-27 18:24:59 -Generating unique operation named: removeUsingPOST_26
2019-05-27 18:24:59 -Generating unique operation named: saveUsingPOST_12
2019-05-27 18:24:59 -Generating unique operation named: updateUsingGET_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPOST_14
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPUT_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 18:24:59 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 18:24:59 -Generating unique operation named: addUsingGET_14
2019-05-27 18:24:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 18:24:59 -Generating unique operation named: editUsingGET_15
2019-05-27 18:24:59 -Generating unique operation named: listUsingGET_16
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_13
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_14
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPOST_15
2019-05-27 18:25:00 -Generating unique operation named: listUsingGET_17
2019-05-27 18:25:00 -Generating unique operation named: listUsingHEAD_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingPOST_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingPUT_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingPATCH_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingDELETE_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 18:25:00 -Generating unique operation named: listUsingTRACE_1
2019-05-27 18:25:00 -Generating unique operation named: countDDUsingGET_1
2019-05-27 18:25:00 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 18:25:00 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 18:25:00 -Generating unique operation named: addUsingGET_15
2019-05-27 18:25:00 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 18:25:00 -Generating unique operation named: editUsingGET_16
2019-05-27 18:25:00 -Generating unique operation named: listUsingGET_18
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_27
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_15
2019-05-27 18:25:00 -Generating unique operation named: treeUsingGET_3
2019-05-27 18:25:00 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPOST_16
2019-05-27 18:25:00 -Generating unique operation named: addUsingGET_16
2019-05-27 18:25:00 -Generating unique operation named: editUsingGET_17
2019-05-27 18:25:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 18:25:00 -Generating unique operation named: listUsingGET_19
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_28
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_29
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_16
2019-05-27 18:25:00 -Generating unique operation named: updateUsingGET_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPOST_17
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPUT_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 18:25:00 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 18:25:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 18:25:00 -Generating unique operation named: addUsingGET_17
2019-05-27 18:25:00 -Generating unique operation named: editUsingGET_18
2019-05-27 18:25:00 -Generating unique operation named: listUsingGET_20
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_30
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_31
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_17
2019-05-27 18:25:00 -Generating unique operation named: updateUsingGET_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPOST_18
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPUT_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 18:25:00 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 18:25:00 -Generating unique operation named: addUsingGET_18
2019-05-27 18:25:00 -Generating unique operation named: editUsingGET_19
2019-05-27 18:25:00 -Generating unique operation named: listUsingGET_21
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_32
2019-05-27 18:25:00 -Generating unique operation named: removeUsingPOST_33
2019-05-27 18:25:00 -Generating unique operation named: saveUsingPOST_18
2019-05-27 18:25:00 -Generating unique operation named: updateUsingGET_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPOST_19
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPUT_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 18:25:00 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 18:25:00 -Starting Quartz Scheduler now
2019-05-27 18:25:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 18:25:00 -Starting...
2019-05-27 18:25:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 18:25:00 -Started.
2019-05-27 18:25:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 18:25:00 -Using a shared selector for servlet write/read
2019-05-27 18:25:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 18:25:01 -Started BootdoApplication in 38.242 seconds (JVM running for 39.599)
2019-05-27 18:25:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 18:25:02 -==> Parameters: 
2019-05-27 18:25:02 -<==      Total: 1
2019-05-27 18:25:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 18:25:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 18:25:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-05-27 18:25:31 -Enabling session validation scheduler...
2019-05-27 18:25:31 -请求地址 : http://localhost:8081/login;JSESSIONID=bd7917e3-5d4c-4dc4-aedd-e941b3039ba2
2019-05-27 18:25:31 -HTTP METHOD : GET
2019-05-27 18:25:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 18:25:31 -参数 : [{}]
2019-05-27 18:25:31 -耗时 : 3
2019-05-27 18:25:31 -返回值 : login
2019-05-27 18:25:33 -请求地址 : http://localhost:8081/getVerify
2019-05-27 18:25:33 -HTTP METHOD : GET
2019-05-27 18:25:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 18:25:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b26fbc1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@22a49d5e]
2019-05-27 18:25:38 -7184
2019-05-27 18:25:38 -耗时 : 5450
2019-05-27 18:25:38 -返回值 : null
2019-05-27 18:25:43 -请求地址 : http://localhost:8081/login
2019-05-27 18:25:43 -HTTP METHOD : POST
2019-05-27 18:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 18:25:43 -参数 : [admin, 111111, 7184, org.apache.shiro.web.servlet.ShiroHttpServletRequest@12d21285]
2019-05-27 18:25:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 18:25:43 -==> Parameters: admin(String)
2019-05-27 18:25:43 -<==      Total: 1
2019-05-27 18:25:43 -耗时 : 172
2019-05-27 18:25:43 -返回值 : {msg=操作成功, code=0}
2019-05-27 18:25:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 18:25:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:25:43 -==> Parameters: 1(Long), admin(String), 登录(String), 172(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 18:25:43.605(Timestamp)
2019-05-27 18:25:43 -请求地址 : http://localhost:8081/index
2019-05-27 18:25:43 -HTTP METHOD : GET
2019-05-27 18:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:25:43 -参数 : [{}]
2019-05-27 18:25:43 -<==    Updates: 1
2019-05-27 18:25:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:25:44 -==> Parameters: 1(Long)
2019-05-27 18:25:44 -<==      Total: 50
2019-05-27 18:25:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:25:44 -==> Parameters: 138(Long)
2019-05-27 18:25:44 -<==      Total: 1
2019-05-27 18:25:44 -耗时 : 392
2019-05-27 18:25:44 -返回值 : index_v1
2019-05-27 18:25:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:25:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 392(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:25:44.173(Timestamp)
2019-05-27 18:25:44 -<==    Updates: 1
2019-05-27 18:25:44 -请求地址 : http://localhost:8081/main
2019-05-27 18:25:44 -HTTP METHOD : GET
2019-05-27 18:25:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:25:44 -参数 : []
2019-05-27 18:25:44 -耗时 : 1
2019-05-27 18:25:44 -返回值 : main
2019-05-27 18:25:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:25:44 -HTTP METHOD : GET
2019-05-27 18:25:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:25:44 -参数 : []
2019-05-27 18:25:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:25:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:25:44 -<==      Total: 0
2019-05-27 18:25:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:25:44 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:25:44 -<==      Total: 1
2019-05-27 18:25:44 -耗时 : 39
2019-05-27 18:25:44 -返回值 : com.bootdo.common.utils.PageUtils@45c315dd
2019-05-27 18:25:44 -请求地址 : http://localhost:8081/main
2019-05-27 18:25:44 -HTTP METHOD : GET
2019-05-27 18:25:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:25:44 -参数 : []
2019-05-27 18:25:44 -耗时 : 0
2019-05-27 18:25:44 -返回值 : main
2019-05-27 18:25:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-27 18:25:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 18:25:51 -==> Parameters: 1(Long)
2019-05-27 18:25:51 -<==      Total: 94
2019-05-27 18:25:51 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:25:51 -HTTP METHOD : GET
2019-05-27 18:25:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:25:51 -参数 : []
2019-05-27 18:25:51 -耗时 : 12
2019-05-27 18:25:51 -返回值 : charts/tableElecYY
2019-05-27 18:25:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:25:53 -HTTP METHOD : GET
2019-05-27 18:25:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:25:53 -参数 : [userType]
2019-05-27 18:25:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:25:53 -==> Parameters: userType(String)
2019-05-27 18:25:53 -<==      Total: 4
2019-05-27 18:25:53 -耗时 : 85
2019-05-27 18:25:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:25:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:25:53 -HTTP METHOD : GET
2019-05-27 18:25:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:25:53 -参数 : []
2019-05-27 18:25:53 -耗时 : 12
2019-05-27 18:25:53 -返回值 : charts/tableHeatYY
2019-05-27 18:25:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:25:53 -HTTP METHOD : GET
2019-05-27 18:25:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:25:53 -参数 : [userType]
2019-05-27 18:25:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:25:53 -==> Parameters: userType(String)
2019-05-27 18:25:53 -<==      Total: 4
2019-05-27 18:25:53 -耗时 : 5
2019-05-27 18:25:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:25:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:25:56 -HTTP METHOD : GET
2019-05-27 18:25:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:25:56 -参数 : []
2019-05-27 18:25:56 -耗时 : 1
2019-05-27 18:25:56 -返回值 : system/dept/deptTree
2019-05-27 18:25:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:25:56 -HTTP METHOD : GET
2019-05-27 18:25:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:25:56 -参数 : []
2019-05-27 18:25:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:25:56 -==> Parameters: 
2019-05-27 18:25:56 -<==      Total: 3
2019-05-27 18:25:56 -耗时 : 69
2019-05-27 18:25:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:26:00 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:26:00 -HTTP METHOD : POST
2019-05-27 18:26:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:26:00 -参数 : [com.bootdo.heat.vo.HeatVo@16f3f3e8, com.bootdo.moneyLog.vo.HeatLogVo@76a0276b]
2019-05-27 18:26:00 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-27 18:26:01 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-27 18:26:01 -<==      Total: 1
2019-05-27 18:26:01 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-27 18:26:01 -==> Parameters: 
2019-05-27 18:26:01 -<==      Total: 2
2019-05-27 18:26:01 -耗时 : 591
2019-05-27 18:26:01 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=0.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=0.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=1.00, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=2.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-27 18:27:13 -Starting BootdoApplication on PC-201905091110 with PID 10664 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 18:27:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 18:27:13 -The following profiles are active: dev
2019-05-27 18:27:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Mon May 27 18:27:14 CST 2019]; root of context hierarchy
2019-05-27 18:27:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 18:27:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e163cdc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$806f6b83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 18:27:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 18:27:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 18:27:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 18:27:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 18:27:28 -Starting service [Tomcat]
2019-05-27 18:27:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 18:27:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 18:27:29 -Initializing Spring embedded WebApplicationContext
2019-05-27 18:27:29 -Root WebApplicationContext: initialization completed in 15261 ms
2019-05-27 18:27:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 18:27:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 18:27:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 18:27:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 18:27:30 -Filter xssFilter was not registered (disabled)
2019-05-27 18:27:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 18:27:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 18:27:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 18:27:30 -Servlet dispatcherServlet mapped to [/]
2019-05-27 18:27:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Mon May 27 18:27:14 CST 2019]; root of context hierarchy
2019-05-27 18:27:36 -Using default implementation for ThreadExecutor
2019-05-27 18:27:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 18:27:37 -Quartz Scheduler v.2.2.1 created.
2019-05-27 18:27:37 -RAMJobStore initialized.
2019-05-27 18:27:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 18:27:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 18:27:37 -Quartz scheduler version: 2.2.1
2019-05-27 18:27:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@10ba9780
2019-05-27 18:27:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 18:27:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 18:27:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 18:27:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 18:27:42 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 18:27:42 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 18:27:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 18:27:42 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 18:27:42 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 18:27:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 18:27:42 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 18:27:42 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 18:27:42 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 18:27:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 18:27:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 18:27:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 18:27:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 18:27:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 18:27:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:27:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 18:27:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 18:27:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 18:27:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 18:27:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 18:27:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 18:27:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 18:27:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 18:27:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 18:27:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 18:27:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 18:27:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 18:27:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 18:27:43 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 18:27:43 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 18:27:43 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 18:27:43 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 18:27:43 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:27:43 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 18:27:43 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 18:27:43 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 18:27:43 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 18:27:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 18:27:43 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 18:27:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 18:27:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 18:27:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 18:27:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 18:27:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 18:27:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 18:27:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 18:27:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 18:27:43 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 18:27:43 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 18:27:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 18:27:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 18:27:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 18:27:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 18:27:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 18:27:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 18:27:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 18:27:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 18:27:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 18:27:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 18:27:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 18:27:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 18:27:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 18:27:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 18:27:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 18:27:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 18:27:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 18:27:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:27:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 18:27:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 18:27:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 18:27:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 18:27:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 18:27:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 18:27:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 18:27:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 18:27:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 18:27:43 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 18:27:43 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 18:27:43 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 18:27:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 18:27:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 18:27:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 18:27:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 18:27:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 18:27:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 18:27:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 18:27:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 18:27:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:27:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Mon May 27 18:27:14 CST 2019]; root of context hierarchy
2019-05-27 18:27:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:27:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:27:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 18:27:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 18:27:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 18:27:50 -Registering beans for JMX exposure on startup
2019-05-27 18:27:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 18:27:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 18:27:50 -Starting beans in phase 2147483647
2019-05-27 18:27:50 -Context refreshed
2019-05-27 18:27:50 -Found 1 custom documentation plugin(s)
2019-05-27 18:27:50 -Scanning for api listing references
2019-05-27 18:27:51 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 18:27:51 -Generating unique operation named: removeUsingPOST_1
2019-05-27 18:27:51 -Generating unique operation named: addUsingGET_1
2019-05-27 18:27:51 -Generating unique operation named: editUsingGET_1
2019-05-27 18:27:51 -Generating unique operation named: listUsingGET_1
2019-05-27 18:27:51 -Generating unique operation named: removeUsingPOST_2
2019-05-27 18:27:51 -Generating unique operation named: removeUsingPOST_3
2019-05-27 18:27:51 -Generating unique operation named: saveUsingPOST_1
2019-05-27 18:27:51 -Generating unique operation named: updateUsingGET_1
2019-05-27 18:27:51 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 18:27:51 -Generating unique operation named: updateUsingPOST_1
2019-05-27 18:27:51 -Generating unique operation named: updateUsingPUT_1
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 18:27:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 18:27:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 18:27:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 18:27:52 -Generating unique operation named: addUsingGET_2
2019-05-27 18:27:52 -Generating unique operation named: editUsingGET_2
2019-05-27 18:27:52 -Generating unique operation named: listUsingGET_2
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_4
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_5
2019-05-27 18:27:52 -Generating unique operation named: saveUsingPOST_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPOST_2
2019-05-27 18:27:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 18:27:52 -Generating unique operation named: addUsingGET_3
2019-05-27 18:27:52 -Generating unique operation named: editUsingGET_3
2019-05-27 18:27:52 -Generating unique operation named: listUsingGET_3
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_6
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_7
2019-05-27 18:27:52 -Generating unique operation named: saveUsingPOST_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingGET_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPOST_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPUT_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 18:27:52 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 18:27:52 -Generating unique operation named: addUsingGET_4
2019-05-27 18:27:52 -Generating unique operation named: editUsingGET_4
2019-05-27 18:27:52 -Generating unique operation named: listUsingGET_4
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_8
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_9
2019-05-27 18:27:52 -Generating unique operation named: saveUsingPOST_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingGET_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPOST_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPUT_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 18:27:52 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 18:27:52 -Generating unique operation named: ElecUsingGET_1
2019-05-27 18:27:52 -Generating unique operation named: addUsingGET_5
2019-05-27 18:27:52 -Generating unique operation named: editUsingGET_5
2019-05-27 18:27:52 -Generating unique operation named: listUsingGET_5
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_10
2019-05-27 18:27:52 -Generating unique operation named: removeUsingPOST_11
2019-05-27 18:27:52 -Generating unique operation named: saveUsingPOST_5
2019-05-27 18:27:52 -Generating unique operation named: updateUsingGET_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPOST_5
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPUT_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 18:27:52 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 18:27:53 -Generating unique operation named: editUsingGET_6
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPOST_6
2019-05-27 18:27:53 -Generating unique operation named: addUsingGET_6
2019-05-27 18:27:53 -Generating unique operation named: editUsingGET_7
2019-05-27 18:27:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_7
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_12
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_13
2019-05-27 18:27:53 -Generating unique operation named: saveUsingPOST_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingGET_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPOST_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPUT_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 18:27:53 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 18:27:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 18:27:53 -Generating unique operation named: addUsingGET_7
2019-05-27 18:27:53 -Generating unique operation named: editUsingGET_8
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_8
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_14
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_15
2019-05-27 18:27:53 -Generating unique operation named: saveUsingPOST_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingGET_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPOST_8
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPUT_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 18:27:53 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 18:27:53 -Generating unique operation named: addUsingGET_8
2019-05-27 18:27:53 -Generating unique operation named: editUsingGET_9
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_9
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_16
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_17
2019-05-27 18:27:53 -Generating unique operation named: saveUsingPOST_8
2019-05-27 18:27:53 -Generating unique operation named: updateUsingGET_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPOST_9
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPUT_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 18:27:53 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 18:27:53 -Generating unique operation named: addUsingGET_9
2019-05-27 18:27:53 -Generating unique operation named: editUsingGET_10
2019-05-27 18:27:53 -Generating unique operation named: infoUsingGET_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingPOST_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingPUT_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 18:27:53 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_10
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_18
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_19
2019-05-27 18:27:53 -Generating unique operation named: saveUsingPOST_9
2019-05-27 18:27:53 -Generating unique operation named: updateUsingPOST_10
2019-05-27 18:27:53 -Generating unique operation named: listUsingGET_11
2019-05-27 18:27:53 -Generating unique operation named: removeUsingPOST_20
2019-05-27 18:27:53 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_10
2019-05-27 18:27:54 -Generating unique operation named: editUsingGET_11
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_12
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_21
2019-05-27 18:27:54 -Generating unique operation named: saveUsingPOST_10
2019-05-27 18:27:54 -Generating unique operation named: treeUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: treeUsingGET_2
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPOST_11
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_11
2019-05-27 18:27:54 -Generating unique operation named: editUsingGET_12
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_13
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_22
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_23
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPOST_12
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_12
2019-05-27 18:27:54 -Generating unique operation named: editUsingGET_13
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_14
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_24
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_25
2019-05-27 18:27:54 -Generating unique operation named: saveUsingPOST_11
2019-05-27 18:27:54 -Generating unique operation named: updateUsingGET_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPOST_13
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPUT_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 18:27:54 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_13
2019-05-27 18:27:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 18:27:54 -Generating unique operation named: editUsingGET_14
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_15
2019-05-27 18:27:54 -Generating unique operation named: printEditUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: removeUsingPOST_26
2019-05-27 18:27:54 -Generating unique operation named: saveUsingPOST_12
2019-05-27 18:27:54 -Generating unique operation named: updateUsingGET_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPOST_14
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPUT_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 18:27:54 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_14
2019-05-27 18:27:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 18:27:54 -Generating unique operation named: editUsingGET_15
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_16
2019-05-27 18:27:54 -Generating unique operation named: saveUsingPOST_13
2019-05-27 18:27:54 -Generating unique operation named: saveUsingPOST_14
2019-05-27 18:27:54 -Generating unique operation named: updateUsingPOST_15
2019-05-27 18:27:54 -Generating unique operation named: listUsingGET_17
2019-05-27 18:27:54 -Generating unique operation named: listUsingHEAD_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingPOST_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingPUT_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingPATCH_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingDELETE_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 18:27:54 -Generating unique operation named: listUsingTRACE_1
2019-05-27 18:27:54 -Generating unique operation named: countDDUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 18:27:54 -Generating unique operation named: addUsingGET_15
2019-05-27 18:27:54 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 18:27:55 -Generating unique operation named: editUsingGET_16
2019-05-27 18:27:55 -Generating unique operation named: listUsingGET_18
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_27
2019-05-27 18:27:55 -Generating unique operation named: saveUsingPOST_15
2019-05-27 18:27:55 -Generating unique operation named: treeUsingGET_3
2019-05-27 18:27:55 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPOST_16
2019-05-27 18:27:55 -Generating unique operation named: addUsingGET_16
2019-05-27 18:27:55 -Generating unique operation named: editUsingGET_17
2019-05-27 18:27:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 18:27:55 -Generating unique operation named: listUsingGET_19
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_28
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_29
2019-05-27 18:27:55 -Generating unique operation named: saveUsingPOST_16
2019-05-27 18:27:55 -Generating unique operation named: updateUsingGET_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPOST_17
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPUT_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 18:27:55 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 18:27:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 18:27:55 -Generating unique operation named: addUsingGET_17
2019-05-27 18:27:55 -Generating unique operation named: editUsingGET_18
2019-05-27 18:27:55 -Generating unique operation named: listUsingGET_20
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_30
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_31
2019-05-27 18:27:55 -Generating unique operation named: saveUsingPOST_17
2019-05-27 18:27:55 -Generating unique operation named: updateUsingGET_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPOST_18
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPUT_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 18:27:55 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 18:27:55 -Generating unique operation named: addUsingGET_18
2019-05-27 18:27:55 -Generating unique operation named: editUsingGET_19
2019-05-27 18:27:55 -Generating unique operation named: listUsingGET_21
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_32
2019-05-27 18:27:55 -Generating unique operation named: removeUsingPOST_33
2019-05-27 18:27:55 -Generating unique operation named: saveUsingPOST_18
2019-05-27 18:27:55 -Generating unique operation named: updateUsingGET_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPOST_19
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPUT_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 18:27:55 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 18:27:55 -Starting Quartz Scheduler now
2019-05-27 18:27:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 18:27:55 -Starting...
2019-05-27 18:27:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 18:27:55 -Started.
2019-05-27 18:27:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 18:27:55 -Using a shared selector for servlet write/read
2019-05-27 18:27:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 18:27:55 -Started BootdoApplication in 45.808 seconds (JVM running for 48.105)
2019-05-27 18:27:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 18:27:56 -==> Parameters: 
2019-05-27 18:27:56 -<==      Total: 1
2019-05-27 18:28:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 18:28:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 18:28:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-05-27 18:28:03 -Enabling session validation scheduler...
2019-05-27 18:28:03 -请求地址 : http://localhost:8081/login;JSESSIONID=e8c67c3b-4fb3-42aa-bc6a-1d6ac96ea50d
2019-05-27 18:28:03 -HTTP METHOD : GET
2019-05-27 18:28:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 18:28:03 -参数 : [{}]
2019-05-27 18:28:03 -耗时 : 4
2019-05-27 18:28:03 -返回值 : login
2019-05-27 18:28:05 -请求地址 : http://localhost:8081/getVerify
2019-05-27 18:28:05 -HTTP METHOD : GET
2019-05-27 18:28:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 18:28:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@60c52e6b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31d59443]
2019-05-27 18:28:12 -4377
2019-05-27 18:28:12 -耗时 : 7563
2019-05-27 18:28:12 -返回值 : null
2019-05-27 18:28:20 -请求地址 : http://localhost:8081/login
2019-05-27 18:28:20 -HTTP METHOD : POST
2019-05-27 18:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 18:28:20 -参数 : [admin, 111111, 4377, org.apache.shiro.web.servlet.ShiroHttpServletRequest@8c39182]
2019-05-27 18:28:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 18:28:20 -==> Parameters: admin(String)
2019-05-27 18:28:20 -<==      Total: 1
2019-05-27 18:28:20 -耗时 : 393
2019-05-27 18:28:20 -返回值 : {msg=操作成功, code=0}
2019-05-27 18:28:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 18:28:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:28:20 -==> Parameters: 1(Long), admin(String), 登录(String), 393(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 18:28:20.888(Timestamp)
2019-05-27 18:28:20 -请求地址 : http://localhost:8081/index
2019-05-27 18:28:20 -HTTP METHOD : GET
2019-05-27 18:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 18:28:20 -参数 : [{}]
2019-05-27 18:28:21 -<==    Updates: 1
2019-05-27 18:28:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 18:28:21 -==> Parameters: 1(Long)
2019-05-27 18:28:21 -<==      Total: 50
2019-05-27 18:28:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 18:28:21 -==> Parameters: 138(Long)
2019-05-27 18:28:21 -<==      Total: 1
2019-05-27 18:28:21 -耗时 : 504
2019-05-27 18:28:21 -返回值 : index_v1
2019-05-27 18:28:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:28:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 504(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 18:28:21.56(Timestamp)
2019-05-27 18:28:21 -请求地址 : http://localhost:8081/main
2019-05-27 18:28:21 -HTTP METHOD : GET
2019-05-27 18:28:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:28:21 -参数 : []
2019-05-27 18:28:21 -耗时 : 0
2019-05-27 18:28:21 -返回值 : main
2019-05-27 18:28:21 -<==    Updates: 1
2019-05-27 18:28:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 18:28:21 -HTTP METHOD : GET
2019-05-27 18:28:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 18:28:21 -参数 : []
2019-05-27 18:28:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 18:28:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 18:28:22 -请求地址 : http://localhost:8081/main
2019-05-27 18:28:22 -HTTP METHOD : GET
2019-05-27 18:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 18:28:22 -参数 : []
2019-05-27 18:28:22 -耗时 : 1
2019-05-27 18:28:22 -返回值 : main
2019-05-27 18:28:22 -<==      Total: 0
2019-05-27 18:28:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 18:28:22 -==> Parameters: 1(Long), 0(String)
2019-05-27 18:28:22 -<==      Total: 1
2019-05-27 18:28:22 -耗时 : 279
2019-05-27 18:28:22 -返回值 : com.bootdo.common.utils.PageUtils@69897c1c
2019-05-27 18:28:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 18:28:31 -==> Parameters: 1(Long)
2019-05-27 18:28:31 -<==      Total: 94
2019-05-27 18:28:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 18:28:31 -HTTP METHOD : GET
2019-05-27 18:28:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 18:28:31 -参数 : []
2019-05-27 18:28:31 -耗时 : 16
2019-05-27 18:28:31 -返回值 : charts/tableElecYY
2019-05-27 18:28:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:28:32 -HTTP METHOD : GET
2019-05-27 18:28:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:28:32 -参数 : [userType]
2019-05-27 18:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:28:32 -==> Parameters: userType(String)
2019-05-27 18:28:32 -<==      Total: 4
2019-05-27 18:28:32 -耗时 : 135
2019-05-27 18:28:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:28:33 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-27 18:28:33 -HTTP METHOD : GET
2019-05-27 18:28:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:28:33 -参数 : []
2019-05-27 18:28:33 -耗时 : 73
2019-05-27 18:28:33 -返回值 : charts/tableHeatYY
2019-05-27 18:28:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 18:28:33 -HTTP METHOD : GET
2019-05-27 18:28:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 18:28:33 -参数 : [userType]
2019-05-27 18:28:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 18:28:33 -==> Parameters: userType(String)
2019-05-27 18:28:33 -<==      Total: 4
2019-05-27 18:28:33 -耗时 : 14
2019-05-27 18:28:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 18:28:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 18:28:36 -HTTP METHOD : GET
2019-05-27 18:28:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 18:28:36 -参数 : []
2019-05-27 18:28:36 -耗时 : 0
2019-05-27 18:28:36 -返回值 : system/dept/deptTree
2019-05-27 18:28:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 18:28:36 -HTTP METHOD : GET
2019-05-27 18:28:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 18:28:36 -参数 : []
2019-05-27 18:28:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 18:28:36 -==> Parameters: 
2019-05-27 18:28:36 -<==      Total: 3
2019-05-27 18:28:36 -耗时 : 37
2019-05-27 18:28:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 18:28:38 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-27 18:28:38 -HTTP METHOD : POST
2019-05-27 18:28:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-27 18:28:38 -参数 : [com.bootdo.heat.vo.HeatVo@56b298e5, com.bootdo.moneyLog.vo.HeatLogVo@deba3b7]
2019-05-27 18:28:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-27 18:28:52 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-27 18:28:52 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-27 18:28:52 -<==      Total: 1
2019-05-27 18:32:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 18:32:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.NumberFormatException: For input string: "2018-12"(String), null, 2019-05-27 18:32:02.196(Timestamp)
2019-05-27 18:32:02 -For input string: "2018-12"
java.lang.NumberFormatException: For input string: "2018-12"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:59)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$2902e5fe.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-27 18:32:02 -<==    Updates: 1
2019-05-27 18:58:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-05-27 19:01:43 -请求地址 : http://localhost:8081/login;JSESSIONID=1b9af10f-86f5-4677-8e2e-92dbdaf459e7
2019-05-27 19:01:43 -HTTP METHOD : GET
2019-05-27 19:01:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 19:01:43 -参数 : [{}]
2019-05-27 19:01:43 -耗时 : 1
2019-05-27 19:01:43 -返回值 : login
2019-05-27 19:01:44 -请求地址 : http://localhost:8081/getVerify
2019-05-27 19:01:44 -HTTP METHOD : GET
2019-05-27 19:01:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 19:01:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@40d3ce9b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@65b75239]
2019-05-27 19:01:44 -1638
2019-05-27 19:01:45 -耗时 : 251
2019-05-27 19:01:45 -返回值 : null
2019-05-27 19:01:51 -请求地址 : http://localhost:8081/login
2019-05-27 19:01:51 -HTTP METHOD : POST
2019-05-27 19:01:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 19:01:51 -参数 : [admin, 111111, 1638, org.apache.shiro.web.servlet.ShiroHttpServletRequest@576e4d7f]
2019-05-27 19:01:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 19:01:51 -==> Parameters: admin(String)
2019-05-27 19:01:51 -<==      Total: 1
2019-05-27 19:01:51 -耗时 : 304
2019-05-27 19:01:51 -返回值 : {msg=操作成功, code=0}
2019-05-27 19:01:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:01:51 -==> Parameters: 1(Long), admin(String), 登录(String), 305(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 19:01:51.375(Timestamp)
2019-05-27 19:01:51 -请求地址 : http://localhost:8081/index
2019-05-27 19:01:51 -HTTP METHOD : GET
2019-05-27 19:01:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 19:01:51 -参数 : [{}]
2019-05-27 19:01:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 19:01:51 -<==    Updates: 1
2019-05-27 19:01:51 -==> Parameters: 1(Long)
2019-05-27 19:01:51 -<==      Total: 50
2019-05-27 19:01:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 19:01:51 -==> Parameters: 138(Long)
2019-05-27 19:01:51 -<==      Total: 1
2019-05-27 19:01:51 -耗时 : 456
2019-05-27 19:01:51 -返回值 : index_v1
2019-05-27 19:01:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:01:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 456(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 19:01:51.89(Timestamp)
2019-05-27 19:01:52 -<==    Updates: 1
2019-05-27 19:01:52 -请求地址 : http://localhost:8081/main
2019-05-27 19:01:52 -HTTP METHOD : GET
2019-05-27 19:01:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:01:52 -参数 : []
2019-05-27 19:01:52 -耗时 : 1
2019-05-27 19:01:52 -返回值 : main
2019-05-27 19:01:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 19:01:52 -HTTP METHOD : GET
2019-05-27 19:01:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 19:01:52 -参数 : []
2019-05-27 19:01:52 -请求地址 : http://localhost:8081/main
2019-05-27 19:01:52 -HTTP METHOD : GET
2019-05-27 19:01:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:01:52 -参数 : []
2019-05-27 19:01:52 -耗时 : 1
2019-05-27 19:01:52 -返回值 : main
2019-05-27 19:01:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 19:01:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 19:01:55 -<==      Total: 0
2019-05-27 19:01:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 19:01:55 -==> Parameters: 1(Long), 0(String)
2019-05-27 19:01:55 -<==      Total: 1
2019-05-27 19:01:55 -耗时 : 2382
2019-05-27 19:01:55 -返回值 : com.bootdo.common.utils.PageUtils@15526b58
2019-05-27 19:01:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 19:01:58 -==> Parameters: 1(Long)
2019-05-27 19:01:58 -<==      Total: 94
2019-05-27 19:01:58 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 19:01:58 -HTTP METHOD : GET
2019-05-27 19:01:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 19:01:58 -参数 : []
2019-05-27 19:01:58 -耗时 : 44
2019-05-27 19:01:58 -返回值 : elec/elecInto/elecInto
2019-05-27 19:03:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 19:03:03 -HTTP METHOD : GET
2019-05-27 19:03:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 19:03:03 -参数 : []
2019-05-27 19:03:03 -耗时 : 0
2019-05-27 19:03:03 -返回值 : system/dept/deptTree
2019-05-27 19:03:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 19:03:04 -HTTP METHOD : GET
2019-05-27 19:03:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 19:03:04 -参数 : []
2019-05-27 19:03:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 19:03:04 -==> Parameters: 
2019-05-27 19:03:04 -<==      Total: 3
2019-05-27 19:03:04 -耗时 : 52
2019-05-27 19:03:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 19:03:06 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:03:06 -HTTP METHOD : POST
2019-05-27 19:03:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:03:06 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@44ccbd3b, com.bootdo.elec.vo.ElecVo@a587e24, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b8a8d02]
2019-05-27 19:03:19 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:03:19 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:03:19 -<==      Total: 1
2019-05-27 19:03:19 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:03:19 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:03:19 -<==    Updates: 1
2019-05-27 19:03:19 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:03:19 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 19:03:19 -<==      Total: 1
2019-05-27 19:03:19 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:03:19 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 19:03:19 -<==    Updates: 1
2019-05-27 19:03:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:03:20 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 19:03:19.768(Timestamp), 2019-02(String), 1(Long), 2019-05-27 19:03:19.768(Timestamp), 1(Long), null
2019-05-27 19:03:20 -<==    Updates: 1
2019-05-27 19:03:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:03:20 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 19:03:19.987(Timestamp), 2019-02(String), 1(Long), 2019-05-27 19:03:19.988(Timestamp), 1(Long), null
2019-05-27 19:03:20 -<==    Updates: 1
2019-05-27 19:03:20 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:03:20 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), null, null, null, null, null, null, 10(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 19:03:19.78(Timestamp), 1(Long), null
2019-05-27 19:03:20 -<==    Updates: 1
2019-05-27 19:03:20 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:03:20 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), null, null, null, null, null, null, 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 19:03:19.988(Timestamp), 1(Long), null
2019-05-27 19:03:20 -<==    Updates: 1
2019-05-27 19:03:20 -耗时 : 14677
2019-05-27 19:03:20 -返回值 : success
2019-05-27 19:06:34 -Starting BootdoApplication on PC-201905091110 with PID 27280 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 19:06:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 19:06:34 -The following profiles are active: dev
2019-05-27 19:06:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@201b6b6f: startup date [Mon May 27 19:06:35 CST 2019]; root of context hierarchy
2019-05-27 19:06:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 19:06:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77e927dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6a425684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 19:06:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 19:06:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:06:54 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 19:06:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 19:06:54 -Starting service [Tomcat]
2019-05-27 19:06:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 19:06:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 19:06:55 -Initializing Spring embedded WebApplicationContext
2019-05-27 19:06:55 -Root WebApplicationContext: initialization completed in 20220 ms
2019-05-27 19:06:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 19:06:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 19:06:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 19:06:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 19:06:57 -Filter xssFilter was not registered (disabled)
2019-05-27 19:06:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 19:06:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 19:06:57 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 19:06:57 -Servlet dispatcherServlet mapped to [/]
2019-05-27 19:07:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@201b6b6f: startup date [Mon May 27 19:06:35 CST 2019]; root of context hierarchy
2019-05-27 19:07:05 -Using default implementation for ThreadExecutor
2019-05-27 19:07:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 19:07:05 -Quartz Scheduler v.2.2.1 created.
2019-05-27 19:07:05 -RAMJobStore initialized.
2019-05-27 19:07:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 19:07:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 19:07:05 -Quartz scheduler version: 2.2.1
2019-05-27 19:07:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1f12d5e0
2019-05-27 19:07:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 19:07:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 19:07:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 19:07:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 19:07:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 19:07:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 19:07:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 19:07:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 19:07:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 19:07:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 19:07:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 19:07:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 19:07:15 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 19:07:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 19:07:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 19:07:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 19:07:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 19:07:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 19:07:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 19:07:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:07:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 19:07:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:07:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 19:07:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 19:07:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 19:07:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 19:07:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 19:07:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 19:07:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 19:07:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 19:07:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 19:07:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 19:07:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:07:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 19:07:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 19:07:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:07:15 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:07:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 19:07:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 19:07:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 19:07:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:07:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 19:07:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 19:07:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 19:07:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:07:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 19:07:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 19:07:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:07:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 19:07:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 19:07:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 19:07:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 19:07:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 19:07:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 19:07:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 19:07:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 19:07:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:16 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 19:07:16 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 19:07:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 19:07:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 19:07:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 19:07:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 19:07:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 19:07:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 19:07:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 19:07:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 19:07:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 19:07:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 19:07:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 19:07:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 19:07:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 19:07:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 19:07:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 19:07:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 19:07:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 19:07:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:07:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 19:07:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:07:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 19:07:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 19:07:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 19:07:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 19:07:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 19:07:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:16 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:07:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 19:07:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 19:07:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:07:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:07:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 19:07:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 19:07:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:07:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:07:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 19:07:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 19:07:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 19:07:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 19:07:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 19:07:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 19:07:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:07:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@201b6b6f: startup date [Mon May 27 19:06:35 CST 2019]; root of context hierarchy
2019-05-27 19:07:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:07:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:07:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:07:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 19:07:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 19:07:26 -Registering beans for JMX exposure on startup
2019-05-27 19:07:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 19:07:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 19:07:26 -Starting beans in phase 2147483647
2019-05-27 19:07:26 -Context refreshed
2019-05-27 19:07:26 -Found 1 custom documentation plugin(s)
2019-05-27 19:07:26 -Scanning for api listing references
2019-05-27 19:07:27 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 19:07:27 -Generating unique operation named: removeUsingPOST_1
2019-05-27 19:07:28 -Generating unique operation named: addUsingGET_1
2019-05-27 19:07:28 -Generating unique operation named: editUsingGET_1
2019-05-27 19:07:28 -Generating unique operation named: listUsingGET_1
2019-05-27 19:07:28 -Generating unique operation named: removeUsingPOST_2
2019-05-27 19:07:28 -Generating unique operation named: removeUsingPOST_3
2019-05-27 19:07:28 -Generating unique operation named: saveUsingPOST_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingGET_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingPOST_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingPUT_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 19:07:28 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 19:07:28 -Generating unique operation named: addUsingGET_2
2019-05-27 19:07:28 -Generating unique operation named: editUsingGET_2
2019-05-27 19:07:28 -Generating unique operation named: listUsingGET_2
2019-05-27 19:07:28 -Generating unique operation named: removeUsingPOST_4
2019-05-27 19:07:28 -Generating unique operation named: removeUsingPOST_5
2019-05-27 19:07:28 -Generating unique operation named: saveUsingPOST_2
2019-05-27 19:07:28 -Generating unique operation named: updateUsingPOST_2
2019-05-27 19:07:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 19:07:28 -Generating unique operation named: addUsingGET_3
2019-05-27 19:07:28 -Generating unique operation named: editUsingGET_3
2019-05-27 19:07:28 -Generating unique operation named: listUsingGET_3
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_6
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_7
2019-05-27 19:07:29 -Generating unique operation named: saveUsingPOST_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingGET_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPOST_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPUT_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 19:07:29 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 19:07:29 -Generating unique operation named: addUsingGET_4
2019-05-27 19:07:29 -Generating unique operation named: editUsingGET_4
2019-05-27 19:07:29 -Generating unique operation named: listUsingGET_4
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_8
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_9
2019-05-27 19:07:29 -Generating unique operation named: saveUsingPOST_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingGET_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPOST_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPUT_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 19:07:29 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 19:07:29 -Generating unique operation named: ElecUsingGET_1
2019-05-27 19:07:29 -Generating unique operation named: addUsingGET_5
2019-05-27 19:07:29 -Generating unique operation named: editUsingGET_5
2019-05-27 19:07:29 -Generating unique operation named: listUsingGET_5
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_10
2019-05-27 19:07:29 -Generating unique operation named: removeUsingPOST_11
2019-05-27 19:07:29 -Generating unique operation named: saveUsingPOST_5
2019-05-27 19:07:29 -Generating unique operation named: updateUsingGET_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPOST_5
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPUT_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 19:07:29 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 19:07:30 -Generating unique operation named: editUsingGET_6
2019-05-27 19:07:30 -Generating unique operation named: listUsingGET_6
2019-05-27 19:07:30 -Generating unique operation named: updateUsingPOST_6
2019-05-27 19:07:30 -Generating unique operation named: addUsingGET_6
2019-05-27 19:07:30 -Generating unique operation named: editUsingGET_7
2019-05-27 19:07:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 19:07:30 -Generating unique operation named: listUsingGET_7
2019-05-27 19:07:30 -Generating unique operation named: removeUsingPOST_12
2019-05-27 19:07:30 -Generating unique operation named: removeUsingPOST_13
2019-05-27 19:07:30 -Generating unique operation named: saveUsingPOST_6
2019-05-27 19:07:30 -Generating unique operation named: updateUsingGET_5
2019-05-27 19:07:30 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 19:07:30 -Generating unique operation named: updateUsingPOST_7
2019-05-27 19:07:30 -Generating unique operation named: updateUsingPUT_5
2019-05-27 19:07:30 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 19:07:30 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 19:07:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 19:07:31 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 19:07:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 19:07:31 -Generating unique operation named: addUsingGET_7
2019-05-27 19:07:31 -Generating unique operation named: editUsingGET_8
2019-05-27 19:07:31 -Generating unique operation named: listUsingGET_8
2019-05-27 19:07:31 -Generating unique operation named: removeUsingPOST_14
2019-05-27 19:07:31 -Generating unique operation named: removeUsingPOST_15
2019-05-27 19:07:31 -Generating unique operation named: saveUsingPOST_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingGET_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPOST_8
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPUT_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 19:07:31 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 19:07:31 -Generating unique operation named: addUsingGET_8
2019-05-27 19:07:31 -Generating unique operation named: editUsingGET_9
2019-05-27 19:07:31 -Generating unique operation named: listUsingGET_9
2019-05-27 19:07:31 -Generating unique operation named: removeUsingPOST_16
2019-05-27 19:07:31 -Generating unique operation named: removeUsingPOST_17
2019-05-27 19:07:31 -Generating unique operation named: saveUsingPOST_8
2019-05-27 19:07:31 -Generating unique operation named: updateUsingGET_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPOST_9
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPUT_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 19:07:31 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 19:07:31 -Generating unique operation named: addUsingGET_9
2019-05-27 19:07:31 -Generating unique operation named: editUsingGET_10
2019-05-27 19:07:31 -Generating unique operation named: infoUsingGET_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingPOST_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingPUT_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 19:07:31 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 19:07:31 -Generating unique operation named: listUsingGET_10
2019-05-27 19:07:31 -Generating unique operation named: removeUsingPOST_18
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_19
2019-05-27 19:07:32 -Generating unique operation named: saveUsingPOST_9
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPOST_10
2019-05-27 19:07:32 -Generating unique operation named: listUsingGET_11
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_20
2019-05-27 19:07:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 19:07:32 -Generating unique operation named: addUsingGET_10
2019-05-27 19:07:32 -Generating unique operation named: editUsingGET_11
2019-05-27 19:07:32 -Generating unique operation named: listUsingGET_12
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_21
2019-05-27 19:07:32 -Generating unique operation named: saveUsingPOST_10
2019-05-27 19:07:32 -Generating unique operation named: treeUsingGET_1
2019-05-27 19:07:32 -Generating unique operation named: treeUsingGET_2
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPOST_11
2019-05-27 19:07:32 -Generating unique operation named: addUsingGET_11
2019-05-27 19:07:32 -Generating unique operation named: editUsingGET_12
2019-05-27 19:07:32 -Generating unique operation named: listUsingGET_13
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_22
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_23
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPOST_12
2019-05-27 19:07:32 -Generating unique operation named: addUsingGET_12
2019-05-27 19:07:32 -Generating unique operation named: editUsingGET_13
2019-05-27 19:07:32 -Generating unique operation named: listUsingGET_14
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_24
2019-05-27 19:07:32 -Generating unique operation named: removeUsingPOST_25
2019-05-27 19:07:32 -Generating unique operation named: saveUsingPOST_11
2019-05-27 19:07:32 -Generating unique operation named: updateUsingGET_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPOST_13
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPUT_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 19:07:32 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 19:07:33 -Generating unique operation named: addUsingGET_13
2019-05-27 19:07:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 19:07:33 -Generating unique operation named: editUsingGET_14
2019-05-27 19:07:33 -Generating unique operation named: listUsingGET_15
2019-05-27 19:07:33 -Generating unique operation named: printEditUsingGET_1
2019-05-27 19:07:33 -Generating unique operation named: removeUsingPOST_26
2019-05-27 19:07:33 -Generating unique operation named: saveUsingPOST_12
2019-05-27 19:07:33 -Generating unique operation named: updateUsingGET_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingPOST_14
2019-05-27 19:07:33 -Generating unique operation named: updateUsingPUT_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 19:07:33 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 19:07:33 -Generating unique operation named: addUsingGET_14
2019-05-27 19:07:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 19:07:33 -Generating unique operation named: editUsingGET_15
2019-05-27 19:07:33 -Generating unique operation named: listUsingGET_16
2019-05-27 19:07:33 -Generating unique operation named: saveUsingPOST_13
2019-05-27 19:07:33 -Generating unique operation named: saveUsingPOST_14
2019-05-27 19:07:33 -Generating unique operation named: updateUsingPOST_15
2019-05-27 19:07:33 -Generating unique operation named: listUsingGET_17
2019-05-27 19:07:33 -Generating unique operation named: listUsingHEAD_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingPOST_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingPUT_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingPATCH_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingDELETE_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 19:07:33 -Generating unique operation named: listUsingTRACE_1
2019-05-27 19:07:33 -Generating unique operation named: countDDUsingGET_1
2019-05-27 19:07:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 19:07:33 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 19:07:33 -Generating unique operation named: addUsingGET_15
2019-05-27 19:07:33 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 19:07:33 -Generating unique operation named: editUsingGET_16
2019-05-27 19:07:34 -Generating unique operation named: listUsingGET_18
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_27
2019-05-27 19:07:34 -Generating unique operation named: saveUsingPOST_15
2019-05-27 19:07:34 -Generating unique operation named: treeUsingGET_3
2019-05-27 19:07:34 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPOST_16
2019-05-27 19:07:34 -Generating unique operation named: addUsingGET_16
2019-05-27 19:07:34 -Generating unique operation named: editUsingGET_17
2019-05-27 19:07:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 19:07:34 -Generating unique operation named: listUsingGET_19
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_28
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_29
2019-05-27 19:07:34 -Generating unique operation named: saveUsingPOST_16
2019-05-27 19:07:34 -Generating unique operation named: updateUsingGET_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPOST_17
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPUT_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 19:07:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 19:07:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 19:07:34 -Generating unique operation named: addUsingGET_17
2019-05-27 19:07:34 -Generating unique operation named: editUsingGET_18
2019-05-27 19:07:34 -Generating unique operation named: listUsingGET_20
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_30
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_31
2019-05-27 19:07:34 -Generating unique operation named: saveUsingPOST_17
2019-05-27 19:07:34 -Generating unique operation named: updateUsingGET_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPOST_18
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPUT_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 19:07:34 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 19:07:34 -Generating unique operation named: addUsingGET_18
2019-05-27 19:07:34 -Generating unique operation named: editUsingGET_19
2019-05-27 19:07:34 -Generating unique operation named: listUsingGET_21
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_32
2019-05-27 19:07:34 -Generating unique operation named: removeUsingPOST_33
2019-05-27 19:07:34 -Generating unique operation named: saveUsingPOST_18
2019-05-27 19:07:34 -Generating unique operation named: updateUsingGET_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPOST_19
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPUT_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 19:07:34 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 19:07:34 -Starting Quartz Scheduler now
2019-05-27 19:07:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 19:07:34 -Starting...
2019-05-27 19:07:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 19:07:34 -Started.
2019-05-27 19:07:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 19:07:35 -Using a shared selector for servlet write/read
2019-05-27 19:07:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 19:07:35 -Started BootdoApplication in 63.552 seconds (JVM running for 66.012)
2019-05-27 19:07:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 19:07:36 -==> Parameters: 
2019-05-27 19:07:36 -<==      Total: 1
2019-05-27 19:07:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 19:07:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 19:07:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 137 ms
2019-05-27 19:07:39 -Enabling session validation scheduler...
2019-05-27 19:07:40 -请求地址 : http://localhost:8081/login;JSESSIONID=29381938-e064-4d3b-9b48-9d28a3d57269
2019-05-27 19:07:40 -HTTP METHOD : GET
2019-05-27 19:07:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 19:07:40 -参数 : [{}]
2019-05-27 19:07:40 -耗时 : 7
2019-05-27 19:07:40 -返回值 : login
2019-05-27 19:07:42 -请求地址 : http://localhost:8081/getVerify
2019-05-27 19:07:42 -HTTP METHOD : GET
2019-05-27 19:07:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 19:07:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c8a6d68, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4bb7bf55]
2019-05-27 19:07:49 -2525
2019-05-27 19:07:50 -耗时 : 7974
2019-05-27 19:07:50 -返回值 : null
2019-05-27 19:07:54 -请求地址 : http://localhost:8081/login
2019-05-27 19:07:54 -HTTP METHOD : POST
2019-05-27 19:07:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 19:07:54 -参数 : [admin, 111111, 2525, org.apache.shiro.web.servlet.ShiroHttpServletRequest@29c69f0]
2019-05-27 19:07:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 19:07:54 -==> Parameters: admin(String)
2019-05-27 19:07:54 -<==      Total: 1
2019-05-27 19:07:54 -耗时 : 374
2019-05-27 19:07:54 -返回值 : {msg=操作成功, code=0}
2019-05-27 19:07:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 19:07:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:07:55 -==> Parameters: 1(Long), admin(String), 登录(String), 374(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 19:07:55.139(Timestamp)
2019-05-27 19:07:55 -<==    Updates: 1
2019-05-27 19:07:55 -请求地址 : http://localhost:8081/index
2019-05-27 19:07:55 -HTTP METHOD : GET
2019-05-27 19:07:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 19:07:55 -参数 : [{}]
2019-05-27 19:07:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 19:07:55 -==> Parameters: 1(Long)
2019-05-27 19:07:55 -<==      Total: 50
2019-05-27 19:07:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 19:07:56 -==> Parameters: 138(Long)
2019-05-27 19:07:56 -<==      Total: 1
2019-05-27 19:07:56 -耗时 : 432
2019-05-27 19:07:56 -返回值 : index_v1
2019-05-27 19:07:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:07:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 432(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 19:07:56.276(Timestamp)
2019-05-27 19:07:56 -<==    Updates: 1
2019-05-27 19:07:56 -请求地址 : http://localhost:8081/main
2019-05-27 19:07:56 -HTTP METHOD : GET
2019-05-27 19:07:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:07:56 -参数 : []
2019-05-27 19:07:56 -耗时 : 1
2019-05-27 19:07:56 -返回值 : main
2019-05-27 19:07:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 19:07:57 -HTTP METHOD : GET
2019-05-27 19:07:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 19:07:57 -参数 : []
2019-05-27 19:07:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 19:07:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 19:07:57 -<==      Total: 0
2019-05-27 19:07:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 19:07:57 -==> Parameters: 1(Long), 0(String)
2019-05-27 19:07:57 -<==      Total: 1
2019-05-27 19:07:57 -耗时 : 172
2019-05-27 19:07:57 -返回值 : com.bootdo.common.utils.PageUtils@ca8d646
2019-05-27 19:07:57 -请求地址 : http://localhost:8081/main
2019-05-27 19:07:57 -HTTP METHOD : GET
2019-05-27 19:07:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:07:57 -参数 : []
2019-05-27 19:07:57 -耗时 : 1
2019-05-27 19:07:57 -返回值 : main
2019-05-27 19:08:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 19:08:02 -==> Parameters: 1(Long)
2019-05-27 19:08:02 -<==      Total: 94
2019-05-27 19:08:02 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 19:08:02 -HTTP METHOD : GET
2019-05-27 19:08:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 19:08:02 -参数 : []
2019-05-27 19:08:02 -耗时 : 0
2019-05-27 19:08:02 -返回值 : elec/elecInto/elecInto
2019-05-27 19:08:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 19:08:14 -HTTP METHOD : GET
2019-05-27 19:08:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 19:08:14 -参数 : []
2019-05-27 19:08:14 -耗时 : 0
2019-05-27 19:08:14 -返回值 : system/dept/deptTree
2019-05-27 19:08:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 19:08:15 -HTTP METHOD : GET
2019-05-27 19:08:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 19:08:15 -参数 : []
2019-05-27 19:08:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 19:08:15 -==> Parameters: 
2019-05-27 19:08:15 -<==      Total: 3
2019-05-27 19:08:15 -耗时 : 60
2019-05-27 19:08:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 19:08:17 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:08:17 -HTTP METHOD : POST
2019-05-27 19:08:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:08:17 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7d1e59e6, com.bootdo.elec.vo.ElecVo@2f2c0b96, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64ab3caa]
2019-05-27 19:08:17 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-27 19:09:57 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:09:58 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:09:58 -<==      Total: 1
2019-05-27 19:10:00 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:10:00 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:10:00 -<==    Updates: 1
2019-05-27 19:13:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:13:06 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 19:13:06 -<==      Total: 1
2019-05-27 19:13:06 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:13:06 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 19:13:06 -<==    Updates: 1
2019-05-27 19:13:11 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:13:11 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 19:10:11.282(Timestamp), 2019-02(String), 1(Long), 2019-05-27 19:10:12.79(Timestamp), 1(Long), null
2019-05-27 19:13:11 -<==    Updates: 1
2019-05-27 19:13:11 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:13:11 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 19:13:06.718(Timestamp), 2019-02(String), 1(Long), 2019-05-27 19:13:06.718(Timestamp), 1(Long), null
2019-05-27 19:13:11 -<==    Updates: 1
2019-05-27 19:13:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:13:11 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), null, null, null, null, null, null, 10(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 19:13:06.561(Timestamp), 1(Long), null
2019-05-27 19:13:11 -<==    Updates: 1
2019-05-27 19:13:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:13:11 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), null, null, null, null, null, null, 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 19:13:11.105(Timestamp), 1(Long), null
2019-05-27 19:13:11 -<==    Updates: 1
2019-05-27 19:13:11 -耗时 : 294496
2019-05-27 19:13:11 -返回值 : success
2019-05-27 19:37:50 -Starting BootdoApplication on PC-201905091110 with PID 7416 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 19:37:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 19:37:50 -The following profiles are active: dev
2019-05-27 19:37:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 19:37:51 CST 2019]; root of context hierarchy
2019-05-27 19:37:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 19:37:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d980ca4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:56 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cbd9f8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 19:37:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 19:37:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:37:58 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 19:37:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 19:37:58 -Starting service [Tomcat]
2019-05-27 19:37:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 19:37:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 19:37:59 -Initializing Spring embedded WebApplicationContext
2019-05-27 19:37:59 -Root WebApplicationContext: initialization completed in 8256 ms
2019-05-27 19:37:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 19:37:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 19:37:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 19:37:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 19:37:59 -Filter xssFilter was not registered (disabled)
2019-05-27 19:37:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 19:37:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 19:37:59 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 19:37:59 -Servlet dispatcherServlet mapped to [/]
2019-05-27 19:38:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 19:37:51 CST 2019]; root of context hierarchy
2019-05-27 19:38:04 -Using default implementation for ThreadExecutor
2019-05-27 19:38:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 19:38:04 -Quartz Scheduler v.2.2.1 created.
2019-05-27 19:38:04 -RAMJobStore initialized.
2019-05-27 19:38:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 19:38:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 19:38:04 -Quartz scheduler version: 2.2.1
2019-05-27 19:38:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4ef5dd23
2019-05-27 19:38:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 19:38:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 19:38:13 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 19:38:13 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 19:38:13 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 19:38:13 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 19:38:13 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 19:38:13 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 19:38:13 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 19:38:13 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 19:38:13 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 19:38:13 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 19:38:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 19:38:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 19:38:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 19:38:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 19:38:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 19:38:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 19:38:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:38:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 19:38:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:38:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 19:38:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 19:38:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 19:38:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 19:38:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 19:38:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 19:38:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 19:38:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 19:38:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 19:38:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 19:38:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 19:38:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 19:38:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 19:38:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 19:38:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 19:38:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:38:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:38:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 19:38:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 19:38:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 19:38:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 19:38:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 19:38:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 19:38:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 19:38:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 19:38:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 19:38:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 19:38:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 19:38:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 19:38:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 19:38:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 19:38:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 19:38:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 19:38:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 19:38:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 19:38:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 19:38:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 19:38:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 19:38:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 19:38:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 19:38:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 19:38:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 19:38:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 19:38:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 19:38:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 19:38:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 19:38:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 19:38:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 19:38:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:38:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:38:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 19:38:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 19:38:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 19:38:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 19:38:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 19:38:13 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 19:38:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:38:13 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 19:38:13 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:38:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 19:38:13 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:38:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:38:13 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 19:38:13 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 19:38:13 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 19:38:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 19:38:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 19:38:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 19:38:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:38:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 19:37:51 CST 2019]; root of context hierarchy
2019-05-27 19:38:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:38:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:38:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:38:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 19:38:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 19:38:16 -Registering beans for JMX exposure on startup
2019-05-27 19:38:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 19:38:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 19:38:17 -Starting beans in phase 2147483647
2019-05-27 19:38:17 -Context refreshed
2019-05-27 19:38:17 -Found 1 custom documentation plugin(s)
2019-05-27 19:38:17 -Scanning for api listing references
2019-05-27 19:38:17 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 19:38:17 -Generating unique operation named: removeUsingPOST_1
2019-05-27 19:38:17 -Generating unique operation named: addUsingGET_1
2019-05-27 19:38:17 -Generating unique operation named: editUsingGET_1
2019-05-27 19:38:17 -Generating unique operation named: listUsingGET_1
2019-05-27 19:38:17 -Generating unique operation named: removeUsingPOST_2
2019-05-27 19:38:17 -Generating unique operation named: removeUsingPOST_3
2019-05-27 19:38:17 -Generating unique operation named: saveUsingPOST_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingGET_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingPOST_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingPUT_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 19:38:17 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 19:38:17 -Generating unique operation named: addUsingGET_2
2019-05-27 19:38:17 -Generating unique operation named: editUsingGET_2
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_2
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_4
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_5
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_2
2019-05-27 19:38:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_3
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_3
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_3
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_6
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_7
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_4
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_4
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_4
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_8
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_9
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 19:38:18 -Generating unique operation named: ElecUsingGET_1
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_5
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_5
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_5
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_10
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_11
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_6
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_6
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_6
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_7
2019-05-27 19:38:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_7
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_12
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_13
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 19:38:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_7
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_8
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_8
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_14
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_15
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_8
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_8
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_9
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_9
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_16
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_17
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_8
2019-05-27 19:38:18 -Generating unique operation named: updateUsingGET_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_9
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPUT_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 19:38:18 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_9
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_10
2019-05-27 19:38:18 -Generating unique operation named: infoUsingGET_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingPOST_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingPUT_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 19:38:18 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_10
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_18
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_19
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_9
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_10
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_11
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_20
2019-05-27 19:38:18 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_10
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_11
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_12
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_21
2019-05-27 19:38:18 -Generating unique operation named: saveUsingPOST_10
2019-05-27 19:38:18 -Generating unique operation named: treeUsingGET_1
2019-05-27 19:38:18 -Generating unique operation named: treeUsingGET_2
2019-05-27 19:38:18 -Generating unique operation named: updateUsingPOST_11
2019-05-27 19:38:18 -Generating unique operation named: addUsingGET_11
2019-05-27 19:38:18 -Generating unique operation named: editUsingGET_12
2019-05-27 19:38:18 -Generating unique operation named: listUsingGET_13
2019-05-27 19:38:18 -Generating unique operation named: removeUsingPOST_22
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_23
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_12
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_12
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_13
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_14
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_24
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_25
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingGET_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_13
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPUT_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 19:38:19 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_13
2019-05-27 19:38:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_14
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_15
2019-05-27 19:38:19 -Generating unique operation named: printEditUsingGET_1
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_26
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingGET_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_14
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPUT_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 19:38:19 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_14
2019-05-27 19:38:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_15
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_16
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_13
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_14
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_15
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_17
2019-05-27 19:38:19 -Generating unique operation named: listUsingHEAD_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingPOST_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingPUT_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingPATCH_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingDELETE_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 19:38:19 -Generating unique operation named: listUsingTRACE_1
2019-05-27 19:38:19 -Generating unique operation named: countDDUsingGET_1
2019-05-27 19:38:19 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 19:38:19 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_15
2019-05-27 19:38:19 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_16
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_18
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_27
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_15
2019-05-27 19:38:19 -Generating unique operation named: treeUsingGET_3
2019-05-27 19:38:19 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_16
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_16
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_17
2019-05-27 19:38:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_19
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_28
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_29
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_16
2019-05-27 19:38:19 -Generating unique operation named: updateUsingGET_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_17
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPUT_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 19:38:19 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 19:38:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_17
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_18
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_20
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_30
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_31
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_17
2019-05-27 19:38:19 -Generating unique operation named: updateUsingGET_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_18
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPUT_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 19:38:19 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 19:38:19 -Generating unique operation named: addUsingGET_18
2019-05-27 19:38:19 -Generating unique operation named: editUsingGET_19
2019-05-27 19:38:19 -Generating unique operation named: listUsingGET_21
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_32
2019-05-27 19:38:19 -Generating unique operation named: removeUsingPOST_33
2019-05-27 19:38:19 -Generating unique operation named: saveUsingPOST_18
2019-05-27 19:38:19 -Generating unique operation named: updateUsingGET_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPOST_19
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPUT_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 19:38:19 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 19:38:19 -Starting Quartz Scheduler now
2019-05-27 19:38:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 19:38:19 -Starting...
2019-05-27 19:38:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 19:38:19 -Started.
2019-05-27 19:38:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 19:38:19 -Using a shared selector for servlet write/read
2019-05-27 19:38:20 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 19:38:20 -Started BootdoApplication in 30.118 seconds (JVM running for 30.887)
2019-05-27 19:38:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 19:38:20 -==> Parameters: 
2019-05-27 19:38:20 -<==      Total: 1
2019-05-27 19:38:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 19:38:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 19:38:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-05-27 19:38:39 -Enabling session validation scheduler...
2019-05-27 19:38:39 -请求地址 : http://localhost:8081/login;JSESSIONID=0efc2fab-cbbb-4af6-993d-532b77075ded
2019-05-27 19:38:39 -HTTP METHOD : GET
2019-05-27 19:38:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 19:38:39 -参数 : [{}]
2019-05-27 19:38:39 -耗时 : 6
2019-05-27 19:38:39 -返回值 : login
2019-05-27 19:38:41 -请求地址 : http://localhost:8081/getVerify
2019-05-27 19:38:41 -HTTP METHOD : GET
2019-05-27 19:38:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 19:38:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@dd7cd20, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ab6ea92]
2019-05-27 19:38:50 -6426
2019-05-27 19:38:51 -耗时 : 9760
2019-05-27 19:38:51 -返回值 : null
2019-05-27 19:38:55 -请求地址 : http://localhost:8081/login
2019-05-27 19:38:55 -HTTP METHOD : POST
2019-05-27 19:38:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 19:38:55 -参数 : [admin, 111111, 6426, org.apache.shiro.web.servlet.ShiroHttpServletRequest@785603a4]
2019-05-27 19:38:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 19:38:55 -==> Parameters: admin(String)
2019-05-27 19:38:55 -<==      Total: 1
2019-05-27 19:38:55 -耗时 : 201
2019-05-27 19:38:55 -返回值 : {msg=操作成功, code=0}
2019-05-27 19:38:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 19:38:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:38:56 -==> Parameters: 1(Long), admin(String), 登录(String), 202(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 19:38:56.048(Timestamp)
2019-05-27 19:38:56 -<==    Updates: 1
2019-05-27 19:38:56 -请求地址 : http://localhost:8081/index
2019-05-27 19:38:56 -HTTP METHOD : GET
2019-05-27 19:38:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 19:38:56 -参数 : [{}]
2019-05-27 19:38:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 19:38:56 -==> Parameters: 1(Long)
2019-05-27 19:38:56 -<==      Total: 50
2019-05-27 19:38:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 19:38:57 -==> Parameters: 138(Long)
2019-05-27 19:38:57 -<==      Total: 1
2019-05-27 19:38:57 -耗时 : 401
2019-05-27 19:38:57 -返回值 : index_v1
2019-05-27 19:38:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:38:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 401(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 19:38:57.274(Timestamp)
2019-05-27 19:38:57 -请求地址 : http://localhost:8081/main
2019-05-27 19:38:57 -HTTP METHOD : GET
2019-05-27 19:38:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:38:57 -参数 : []
2019-05-27 19:38:57 -耗时 : 0
2019-05-27 19:38:57 -返回值 : main
2019-05-27 19:38:57 -<==    Updates: 1
2019-05-27 19:38:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 19:38:57 -HTTP METHOD : GET
2019-05-27 19:38:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 19:38:57 -参数 : []
2019-05-27 19:38:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 19:38:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 19:38:58 -<==      Total: 0
2019-05-27 19:38:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 19:38:58 -请求地址 : http://localhost:8081/main
2019-05-27 19:38:58 -HTTP METHOD : GET
2019-05-27 19:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:38:58 -参数 : []
2019-05-27 19:38:58 -耗时 : 0
2019-05-27 19:38:58 -返回值 : main
2019-05-27 19:38:58 -==> Parameters: 1(Long), 0(String)
2019-05-27 19:38:58 -<==      Total: 1
2019-05-27 19:38:58 -耗时 : 122
2019-05-27 19:38:58 -返回值 : com.bootdo.common.utils.PageUtils@5925ade0
2019-05-27 19:39:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 19:39:14 -==> Parameters: 1(Long)
2019-05-27 19:39:14 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-27 19:39:14 -<==      Total: 94
2019-05-27 19:39:14 -请求地址 : http://localhost:8081/elec/elec
2019-05-27 19:39:14 -HTTP METHOD : GET
2019-05-27 19:39:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-27 19:39:14 -参数 : []
2019-05-27 19:39:14 -耗时 : 0
2019-05-27 19:39:14 -返回值 : elec/elec/elec
2019-05-27 19:39:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 19:39:15 -HTTP METHOD : GET
2019-05-27 19:39:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 19:39:15 -参数 : [userType]
2019-05-27 19:39:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 19:39:15 -==> Parameters: userType(String)
2019-05-27 19:39:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-27 19:39:15 -HTTP METHOD : GET
2019-05-27 19:39:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 19:39:15 -参数 : [elecType]
2019-05-27 19:39:15 -<==      Total: 4
2019-05-27 19:39:15 -耗时 : 103
2019-05-27 19:39:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 19:39:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 19:39:15 -==> Parameters: elecType(String)
2019-05-27 19:39:15 -<==      Total: 11
2019-05-27 19:39:15 -耗时 : 96
2019-05-27 19:39:15 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 19:39:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-27 19:39:15 -HTTP METHOD : GET
2019-05-27 19:39:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-27 19:39:15 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2b93b50c]
2019-05-27 19:39:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-27 19:39:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-27 19:39:15 -<==      Total: 10
2019-05-27 19:39:15 -==>  Preparing: select count(*) from elec 
2019-05-27 19:39:15 -==> Parameters: 
2019-05-27 19:39:15 -<==      Total: 1
2019-05-27 19:39:15 -耗时 : 322
2019-05-27 19:39:15 -返回值 : com.bootdo.common.utils.PageUtils@1547d81e
2019-05-27 19:39:16 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 19:39:16 -HTTP METHOD : GET
2019-05-27 19:39:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 19:39:16 -参数 : []
2019-05-27 19:39:16 -耗时 : 0
2019-05-27 19:39:16 -返回值 : elec/elecInto/elecInto
2019-05-27 19:39:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 19:39:36 -HTTP METHOD : GET
2019-05-27 19:39:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 19:39:36 -参数 : []
2019-05-27 19:39:36 -耗时 : 0
2019-05-27 19:39:36 -返回值 : system/dept/deptTree
2019-05-27 19:39:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 19:39:36 -HTTP METHOD : GET
2019-05-27 19:39:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 19:39:36 -参数 : []
2019-05-27 19:39:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 19:39:36 -==> Parameters: 
2019-05-27 19:39:36 -<==      Total: 3
2019-05-27 19:39:36 -耗时 : 21
2019-05-27 19:39:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 19:39:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 19:39:40 -HTTP METHOD : GET
2019-05-27 19:39:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 19:39:40 -参数 : []
2019-05-27 19:39:40 -耗时 : 0
2019-05-27 19:39:40 -返回值 : system/dept/deptTree
2019-05-27 19:39:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 19:39:40 -HTTP METHOD : GET
2019-05-27 19:39:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 19:39:40 -参数 : []
2019-05-27 19:39:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 19:39:40 -==> Parameters: 
2019-05-27 19:39:40 -<==      Total: 3
2019-05-27 19:39:40 -耗时 : 4
2019-05-27 19:39:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 19:39:42 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:39:42 -HTTP METHOD : POST
2019-05-27 19:39:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:39:42 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@55fcf7bd, com.bootdo.elec.vo.ElecVo@7a1bef87, org.apache.shiro.web.servlet.ShiroHttpServletResponse@23b16197]
2019-05-27 19:39:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 19:39:43 -==> Parameters: 2019-05(String), 2(String), 1-0001(String)
2019-05-27 19:39:43 -<==      Total: 0
2019-05-27 19:39:44 -耗时 : 1844
2019-05-27 19:39:44 -返回值 : fail
2019-05-27 19:40:03 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:40:03 -HTTP METHOD : POST
2019-05-27 19:40:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:40:03 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3873f43a, com.bootdo.elec.vo.ElecVo@7ea93af5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7a59df1f]
2019-05-27 19:40:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 19:40:03 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 19:40:03 -<==      Total: 1
2019-05-27 19:40:03 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:40:03 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:40:03 -<==      Total: 1
2019-05-27 19:40:03 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:40:03 -==> Parameters: 40.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:40:03 -<==    Updates: 1
2019-05-27 19:40:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 19:40:03 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 19:40:03 -<==      Total: 0
2019-05-27 19:40:03 -耗时 : 235
2019-05-27 19:40:03 -返回值 : fail
2019-05-27 19:40:07 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:40:07 -HTTP METHOD : POST
2019-05-27 19:40:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:40:07 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@60039e9e, com.bootdo.elec.vo.ElecVo@6c3fa122, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1edaa2bb]
2019-05-27 19:40:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 19:40:07 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 19:40:07 -<==      Total: 1
2019-05-27 19:40:07 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:40:07 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:40:07 -<==      Total: 1
2019-05-27 19:40:07 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:40:07 -==> Parameters: 80.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:40:07 -<==    Updates: 1
2019-05-27 19:40:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 19:40:07 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 19:40:07 -<==      Total: 0
2019-05-27 19:40:07 -耗时 : 133
2019-05-27 19:40:07 -返回值 : fail
2019-05-27 19:41:26 -Starting BootdoApplication on PC-201905091110 with PID 29168 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 19:41:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 19:41:26 -The following profiles are active: dev
2019-05-27 19:41:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Mon May 27 19:41:26 CST 2019]; root of context hierarchy
2019-05-27 19:41:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 19:41:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7247e88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f97dad2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 19:41:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 19:41:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:41:39 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 19:41:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 19:41:39 -Starting service [Tomcat]
2019-05-27 19:41:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 19:41:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 19:41:40 -Initializing Spring embedded WebApplicationContext
2019-05-27 19:41:40 -Root WebApplicationContext: initialization completed in 13223 ms
2019-05-27 19:41:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 19:41:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 19:41:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 19:41:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 19:41:41 -Filter xssFilter was not registered (disabled)
2019-05-27 19:41:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 19:41:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 19:41:41 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 19:41:41 -Servlet dispatcherServlet mapped to [/]
2019-05-27 19:41:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Mon May 27 19:41:26 CST 2019]; root of context hierarchy
2019-05-27 19:41:47 -Using default implementation for ThreadExecutor
2019-05-27 19:41:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 19:41:47 -Quartz Scheduler v.2.2.1 created.
2019-05-27 19:41:47 -RAMJobStore initialized.
2019-05-27 19:41:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 19:41:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 19:41:47 -Quartz scheduler version: 2.2.1
2019-05-27 19:41:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@72d16d6
2019-05-27 19:41:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 19:41:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 19:41:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 19:41:52 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 19:41:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 19:41:52 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 19:41:52 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 19:41:52 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 19:41:52 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 19:41:52 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 19:41:52 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 19:41:52 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 19:41:52 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:41:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 19:41:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 19:41:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 19:41:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 19:41:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 19:41:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 19:41:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 19:41:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 19:41:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:41:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 19:41:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:41:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 19:41:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 19:41:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 19:41:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 19:41:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 19:41:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 19:41:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 19:41:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 19:41:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 19:41:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 19:41:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 19:41:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 19:41:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 19:41:52 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:41:52 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:41:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 19:41:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 19:41:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 19:41:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:41:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:41:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 19:41:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 19:41:52 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 19:41:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 19:41:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:41:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 19:41:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 19:41:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 19:41:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 19:41:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 19:41:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 19:41:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 19:41:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 19:41:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 19:41:53 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 19:41:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 19:41:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 19:41:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 19:41:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 19:41:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 19:41:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 19:41:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 19:41:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 19:41:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 19:41:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 19:41:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 19:41:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 19:41:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 19:41:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 19:41:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 19:41:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 19:41:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 19:41:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 19:41:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 19:41:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:41:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:41:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 19:41:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 19:41:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 19:41:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 19:41:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 19:41:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 19:41:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:41:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 19:41:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:41:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 19:41:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 19:41:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:41:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:41:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 19:41:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 19:41:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 19:41:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 19:41:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 19:41:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 19:41:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:41:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Mon May 27 19:41:26 CST 2019]; root of context hierarchy
2019-05-27 19:41:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:41:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:41:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:41:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 19:41:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 19:41:58 -Registering beans for JMX exposure on startup
2019-05-27 19:41:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 19:41:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 19:41:58 -Starting beans in phase 2147483647
2019-05-27 19:41:58 -Context refreshed
2019-05-27 19:41:58 -Found 1 custom documentation plugin(s)
2019-05-27 19:41:58 -Scanning for api listing references
2019-05-27 19:41:58 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_1
2019-05-27 19:41:59 -Generating unique operation named: addUsingGET_1
2019-05-27 19:41:59 -Generating unique operation named: editUsingGET_1
2019-05-27 19:41:59 -Generating unique operation named: listUsingGET_1
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_2
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_3
2019-05-27 19:41:59 -Generating unique operation named: saveUsingPOST_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingGET_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPOST_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPUT_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 19:41:59 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 19:41:59 -Generating unique operation named: addUsingGET_2
2019-05-27 19:41:59 -Generating unique operation named: editUsingGET_2
2019-05-27 19:41:59 -Generating unique operation named: listUsingGET_2
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_4
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_5
2019-05-27 19:41:59 -Generating unique operation named: saveUsingPOST_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPOST_2
2019-05-27 19:41:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 19:41:59 -Generating unique operation named: addUsingGET_3
2019-05-27 19:41:59 -Generating unique operation named: editUsingGET_3
2019-05-27 19:41:59 -Generating unique operation named: listUsingGET_3
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_6
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_7
2019-05-27 19:41:59 -Generating unique operation named: saveUsingPOST_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingGET_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPOST_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPUT_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 19:41:59 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 19:41:59 -Generating unique operation named: addUsingGET_4
2019-05-27 19:41:59 -Generating unique operation named: editUsingGET_4
2019-05-27 19:41:59 -Generating unique operation named: listUsingGET_4
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_8
2019-05-27 19:41:59 -Generating unique operation named: removeUsingPOST_9
2019-05-27 19:41:59 -Generating unique operation named: saveUsingPOST_4
2019-05-27 19:41:59 -Generating unique operation named: updateUsingGET_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPOST_4
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPUT_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 19:41:59 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 19:41:59 -Generating unique operation named: ElecUsingGET_1
2019-05-27 19:42:00 -Generating unique operation named: addUsingGET_5
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_5
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_5
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_10
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_11
2019-05-27 19:42:00 -Generating unique operation named: saveUsingPOST_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingGET_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPOST_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPUT_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 19:42:00 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_6
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPOST_6
2019-05-27 19:42:00 -Generating unique operation named: addUsingGET_6
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_7
2019-05-27 19:42:00 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_7
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_12
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_13
2019-05-27 19:42:00 -Generating unique operation named: saveUsingPOST_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingGET_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPOST_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPUT_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 19:42:00 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 19:42:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 19:42:00 -Generating unique operation named: addUsingGET_7
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_8
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_8
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_14
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_15
2019-05-27 19:42:00 -Generating unique operation named: saveUsingPOST_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingGET_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPOST_8
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPUT_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 19:42:00 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 19:42:00 -Generating unique operation named: addUsingGET_8
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_9
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_9
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_16
2019-05-27 19:42:00 -Generating unique operation named: removeUsingPOST_17
2019-05-27 19:42:00 -Generating unique operation named: saveUsingPOST_8
2019-05-27 19:42:00 -Generating unique operation named: updateUsingGET_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPOST_9
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPUT_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 19:42:00 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 19:42:00 -Generating unique operation named: addUsingGET_9
2019-05-27 19:42:00 -Generating unique operation named: editUsingGET_10
2019-05-27 19:42:00 -Generating unique operation named: infoUsingGET_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingPOST_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingPUT_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 19:42:00 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 19:42:00 -Generating unique operation named: listUsingGET_10
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_18
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_19
2019-05-27 19:42:01 -Generating unique operation named: saveUsingPOST_9
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPOST_10
2019-05-27 19:42:01 -Generating unique operation named: listUsingGET_11
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_20
2019-05-27 19:42:01 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 19:42:01 -Generating unique operation named: addUsingGET_10
2019-05-27 19:42:01 -Generating unique operation named: editUsingGET_11
2019-05-27 19:42:01 -Generating unique operation named: listUsingGET_12
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_21
2019-05-27 19:42:01 -Generating unique operation named: saveUsingPOST_10
2019-05-27 19:42:01 -Generating unique operation named: treeUsingGET_1
2019-05-27 19:42:01 -Generating unique operation named: treeUsingGET_2
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPOST_11
2019-05-27 19:42:01 -Generating unique operation named: addUsingGET_11
2019-05-27 19:42:01 -Generating unique operation named: editUsingGET_12
2019-05-27 19:42:01 -Generating unique operation named: listUsingGET_13
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_22
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_23
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPOST_12
2019-05-27 19:42:01 -Generating unique operation named: addUsingGET_12
2019-05-27 19:42:01 -Generating unique operation named: editUsingGET_13
2019-05-27 19:42:01 -Generating unique operation named: listUsingGET_14
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_24
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_25
2019-05-27 19:42:01 -Generating unique operation named: saveUsingPOST_11
2019-05-27 19:42:01 -Generating unique operation named: updateUsingGET_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPOST_13
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPUT_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 19:42:01 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 19:42:01 -Generating unique operation named: addUsingGET_13
2019-05-27 19:42:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 19:42:01 -Generating unique operation named: editUsingGET_14
2019-05-27 19:42:01 -Generating unique operation named: listUsingGET_15
2019-05-27 19:42:01 -Generating unique operation named: printEditUsingGET_1
2019-05-27 19:42:01 -Generating unique operation named: removeUsingPOST_26
2019-05-27 19:42:02 -Generating unique operation named: saveUsingPOST_12
2019-05-27 19:42:02 -Generating unique operation named: updateUsingGET_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingPOST_14
2019-05-27 19:42:02 -Generating unique operation named: updateUsingPUT_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 19:42:02 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 19:42:02 -Generating unique operation named: addUsingGET_14
2019-05-27 19:42:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 19:42:02 -Generating unique operation named: editUsingGET_15
2019-05-27 19:42:02 -Generating unique operation named: listUsingGET_16
2019-05-27 19:42:02 -Generating unique operation named: saveUsingPOST_13
2019-05-27 19:42:02 -Generating unique operation named: saveUsingPOST_14
2019-05-27 19:42:02 -Generating unique operation named: updateUsingPOST_15
2019-05-27 19:42:02 -Generating unique operation named: listUsingGET_17
2019-05-27 19:42:02 -Generating unique operation named: listUsingHEAD_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingPOST_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingPUT_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingPATCH_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingDELETE_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 19:42:02 -Generating unique operation named: listUsingTRACE_1
2019-05-27 19:42:02 -Generating unique operation named: countDDUsingGET_1
2019-05-27 19:42:02 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 19:42:02 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 19:42:02 -Generating unique operation named: addUsingGET_15
2019-05-27 19:42:02 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 19:42:02 -Generating unique operation named: editUsingGET_16
2019-05-27 19:42:02 -Generating unique operation named: listUsingGET_18
2019-05-27 19:42:02 -Generating unique operation named: removeUsingPOST_27
2019-05-27 19:42:02 -Generating unique operation named: saveUsingPOST_15
2019-05-27 19:42:02 -Generating unique operation named: treeUsingGET_3
2019-05-27 19:42:02 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 19:42:02 -Generating unique operation named: updateUsingPOST_16
2019-05-27 19:42:02 -Generating unique operation named: addUsingGET_16
2019-05-27 19:42:02 -Generating unique operation named: editUsingGET_17
2019-05-27 19:42:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 19:42:03 -Generating unique operation named: listUsingGET_19
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_28
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_29
2019-05-27 19:42:03 -Generating unique operation named: saveUsingPOST_16
2019-05-27 19:42:03 -Generating unique operation named: updateUsingGET_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPOST_17
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPUT_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 19:42:03 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 19:42:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 19:42:03 -Generating unique operation named: addUsingGET_17
2019-05-27 19:42:03 -Generating unique operation named: editUsingGET_18
2019-05-27 19:42:03 -Generating unique operation named: listUsingGET_20
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_30
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_31
2019-05-27 19:42:03 -Generating unique operation named: saveUsingPOST_17
2019-05-27 19:42:03 -Generating unique operation named: updateUsingGET_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPOST_18
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPUT_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 19:42:03 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 19:42:03 -Generating unique operation named: addUsingGET_18
2019-05-27 19:42:03 -Generating unique operation named: editUsingGET_19
2019-05-27 19:42:03 -Generating unique operation named: listUsingGET_21
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_32
2019-05-27 19:42:03 -Generating unique operation named: removeUsingPOST_33
2019-05-27 19:42:03 -Generating unique operation named: saveUsingPOST_18
2019-05-27 19:42:03 -Generating unique operation named: updateUsingGET_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPOST_19
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPUT_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 19:42:03 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 19:42:03 -Starting Quartz Scheduler now
2019-05-27 19:42:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 19:42:03 -Starting...
2019-05-27 19:42:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 19:42:03 -Started.
2019-05-27 19:42:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 19:42:03 -Using a shared selector for servlet write/read
2019-05-27 19:42:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 19:42:03 -Started BootdoApplication in 39.286 seconds (JVM running for 41.152)
2019-05-27 19:42:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 19:42:03 -==> Parameters: 
2019-05-27 19:42:04 -<==      Total: 1
2019-05-27 19:42:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 19:42:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 19:42:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-27 19:42:09 -Enabling session validation scheduler...
2019-05-27 19:42:09 -请求地址 : http://localhost:8081/login;JSESSIONID=934fb9fc-cef4-4838-99a8-89ee066ad0e5
2019-05-27 19:42:09 -HTTP METHOD : GET
2019-05-27 19:42:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 19:42:09 -参数 : [{}]
2019-05-27 19:42:09 -耗时 : 5
2019-05-27 19:42:09 -返回值 : login
2019-05-27 19:42:10 -请求地址 : http://localhost:8081/getVerify
2019-05-27 19:42:10 -HTTP METHOD : GET
2019-05-27 19:42:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 19:42:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@581e376e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c21b8b5]
2019-05-27 19:42:11 -6619
2019-05-27 19:42:11 -耗时 : 570
2019-05-27 19:42:11 -返回值 : null
2019-05-27 19:42:15 -请求地址 : http://localhost:8081/login
2019-05-27 19:42:15 -HTTP METHOD : POST
2019-05-27 19:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 19:42:15 -参数 : [admin, 111111, 6619, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ef8ce46]
2019-05-27 19:42:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 19:42:15 -==> Parameters: admin(String)
2019-05-27 19:42:15 -<==      Total: 1
2019-05-27 19:42:15 -耗时 : 185
2019-05-27 19:42:15 -返回值 : {msg=操作成功, code=0}
2019-05-27 19:42:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 19:42:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:42:15 -==> Parameters: 1(Long), admin(String), 登录(String), 185(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 19:42:15.868(Timestamp)
2019-05-27 19:42:15 -请求地址 : http://localhost:8081/index
2019-05-27 19:42:15 -HTTP METHOD : GET
2019-05-27 19:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 19:42:15 -参数 : [{}]
2019-05-27 19:42:15 -<==    Updates: 1
2019-05-27 19:42:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 19:42:16 -==> Parameters: 1(Long)
2019-05-27 19:42:16 -<==      Total: 50
2019-05-27 19:42:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 19:42:16 -==> Parameters: 138(Long)
2019-05-27 19:42:16 -<==      Total: 1
2019-05-27 19:42:16 -耗时 : 280
2019-05-27 19:42:16 -返回值 : index_v1
2019-05-27 19:42:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 19:42:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 280(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 19:42:16.269(Timestamp)
2019-05-27 19:42:16 -<==    Updates: 1
2019-05-27 19:42:16 -请求地址 : http://localhost:8081/main
2019-05-27 19:42:16 -HTTP METHOD : GET
2019-05-27 19:42:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:42:16 -参数 : []
2019-05-27 19:42:16 -耗时 : 1
2019-05-27 19:42:16 -返回值 : main
2019-05-27 19:42:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 19:42:16 -HTTP METHOD : GET
2019-05-27 19:42:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 19:42:16 -参数 : []
2019-05-27 19:42:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 19:42:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 19:42:16 -<==      Total: 0
2019-05-27 19:42:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 19:42:16 -==> Parameters: 1(Long), 0(String)
2019-05-27 19:42:16 -<==      Total: 1
2019-05-27 19:42:16 -耗时 : 71
2019-05-27 19:42:16 -返回值 : com.bootdo.common.utils.PageUtils@75b903e3
2019-05-27 19:42:16 -请求地址 : http://localhost:8081/main
2019-05-27 19:42:16 -HTTP METHOD : GET
2019-05-27 19:42:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:42:16 -参数 : []
2019-05-27 19:42:16 -耗时 : 0
2019-05-27 19:42:16 -返回值 : main
2019-05-27 19:42:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 19:42:24 -==> Parameters: 1(Long)
2019-05-27 19:42:24 -<==      Total: 94
2019-05-27 19:42:24 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 19:42:24 -HTTP METHOD : GET
2019-05-27 19:42:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 19:42:24 -参数 : []
2019-05-27 19:42:24 -耗时 : 1
2019-05-27 19:42:24 -返回值 : elec/elecInto/elecInto
2019-05-27 19:42:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 19:42:40 -HTTP METHOD : GET
2019-05-27 19:42:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 19:42:40 -参数 : []
2019-05-27 19:42:40 -耗时 : 1
2019-05-27 19:42:40 -返回值 : system/dept/deptTree
2019-05-27 19:42:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 19:42:40 -HTTP METHOD : GET
2019-05-27 19:42:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 19:42:40 -参数 : []
2019-05-27 19:42:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 19:42:40 -==> Parameters: 
2019-05-27 19:42:40 -<==      Total: 3
2019-05-27 19:42:40 -耗时 : 37
2019-05-27 19:42:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 19:42:42 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 19:42:42 -HTTP METHOD : POST
2019-05-27 19:42:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 19:42:42 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@12bcc876, com.bootdo.elec.vo.ElecVo@56834481, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36d68d06]
2019-05-27 19:42:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 19:42:43 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 19:42:43 -<==      Total: 1
2019-05-27 19:42:43 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:42:43 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:42:43 -<==      Total: 1
2019-05-27 19:42:43 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 19:42:43 -==> Parameters: 160.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 19:42:43 -<==    Updates: 1
2019-05-27 19:42:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-27 19:45:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 19:45:24 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 19:45:24 -<==      Total: 0
2019-05-27 19:45:35 -耗时 : 172733
2019-05-27 19:45:35 -返回值 : fail
2019-05-27 19:54:27 -请求地址 : http://localhost:8081/main
2019-05-27 19:54:27 -HTTP METHOD : GET
2019-05-27 19:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:54:27 -参数 : []
2019-05-27 19:54:27 -耗时 : 2
2019-05-27 19:54:27 -返回值 : main
2019-05-27 19:54:28 -请求地址 : http://localhost:8081/main
2019-05-27 19:54:28 -HTTP METHOD : GET
2019-05-27 19:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 19:54:28 -参数 : []
2019-05-27 19:54:28 -耗时 : 0
2019-05-27 19:54:28 -返回值 : main
2019-05-27 19:58:51 -Starting BootdoApplication on PC-201905091110 with PID 31800 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 19:58:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 19:58:51 -The following profiles are active: dev
2019-05-27 19:58:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 19:58:51 CST 2019]; root of context hierarchy
2019-05-27 19:58:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 19:58:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cce5540c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bf3e82b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 19:58:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 19:58:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:58:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 19:59:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 19:59:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 19:59:01 -Starting service [Tomcat]
2019-05-27 19:59:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 19:59:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 19:59:01 -Initializing Spring embedded WebApplicationContext
2019-05-27 19:59:01 -Root WebApplicationContext: initialization completed in 10188 ms
2019-05-27 19:59:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 19:59:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 19:59:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 19:59:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 19:59:02 -Filter xssFilter was not registered (disabled)
2019-05-27 19:59:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 19:59:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 19:59:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 19:59:02 -Servlet dispatcherServlet mapped to [/]
2019-05-27 19:59:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 19:58:51 CST 2019]; root of context hierarchy
2019-05-27 19:59:12 -Using default implementation for ThreadExecutor
2019-05-27 19:59:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 19:59:12 -Quartz Scheduler v.2.2.1 created.
2019-05-27 19:59:12 -RAMJobStore initialized.
2019-05-27 19:59:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 19:59:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 19:59:12 -Quartz scheduler version: 2.2.1
2019-05-27 19:59:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66a82a13
2019-05-27 19:59:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 19:59:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 19:59:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 19:59:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 19:59:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 19:59:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 19:59:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 19:59:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 19:59:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 19:59:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 19:59:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 19:59:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 19:59:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 19:59:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 19:59:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 19:59:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 19:59:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 19:59:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 19:59:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:59:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 19:59:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 19:59:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 19:59:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 19:59:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 19:59:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 19:59:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 19:59:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 19:59:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 19:59:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 19:59:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 19:59:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 19:59:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 19:59:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 19:59:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 19:59:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 19:59:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 19:59:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:59:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 19:59:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 19:59:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 19:59:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 19:59:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 19:59:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 19:59:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 19:59:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 19:59:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 19:59:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 19:59:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 19:59:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 19:59:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 19:59:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 19:59:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 19:59:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 19:59:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 19:59:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 19:59:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 19:59:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 19:59:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 19:59:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 19:59:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 19:59:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 19:59:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 19:59:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 19:59:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 19:59:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 19:59:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 19:59:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 19:59:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 19:59:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 19:59:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:59:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 19:59:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 19:59:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 19:59:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 19:59:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 19:59:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 19:59:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 19:59:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 19:59:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 19:59:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 19:59:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 19:59:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 19:59:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 19:59:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 19:59:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 19:59:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 19:59:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 19:59:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 19:59:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 19:59:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 19:59:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:59:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 27 19:58:51 CST 2019]; root of context hierarchy
2019-05-27 19:59:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:59:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:59:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 19:59:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 19:59:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 19:59:22 -Registering beans for JMX exposure on startup
2019-05-27 19:59:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 19:59:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 19:59:22 -Starting beans in phase 2147483647
2019-05-27 19:59:22 -Context refreshed
2019-05-27 19:59:22 -Found 1 custom documentation plugin(s)
2019-05-27 19:59:22 -Scanning for api listing references
2019-05-27 19:59:23 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 19:59:23 -Generating unique operation named: removeUsingPOST_1
2019-05-27 19:59:23 -Generating unique operation named: addUsingGET_1
2019-05-27 19:59:23 -Generating unique operation named: editUsingGET_1
2019-05-27 19:59:23 -Generating unique operation named: listUsingGET_1
2019-05-27 19:59:23 -Generating unique operation named: removeUsingPOST_2
2019-05-27 19:59:23 -Generating unique operation named: removeUsingPOST_3
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_2
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_2
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_2
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_4
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_5
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_2
2019-05-27 19:59:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_3
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_3
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_3
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_6
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_7
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_4
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_4
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_4
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_8
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_9
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 19:59:24 -Generating unique operation named: ElecUsingGET_1
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_5
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_5
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_5
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_10
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_11
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_6
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_6
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_6
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_7
2019-05-27 19:59:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_7
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_12
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_13
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_7
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 19:59:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_7
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_8
2019-05-27 19:59:24 -Generating unique operation named: listUsingGET_8
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_14
2019-05-27 19:59:24 -Generating unique operation named: removeUsingPOST_15
2019-05-27 19:59:24 -Generating unique operation named: saveUsingPOST_7
2019-05-27 19:59:24 -Generating unique operation named: updateUsingGET_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPOST_8
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPUT_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 19:59:24 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 19:59:24 -Generating unique operation named: addUsingGET_8
2019-05-27 19:59:24 -Generating unique operation named: editUsingGET_9
2019-05-27 19:59:25 -Generating unique operation named: listUsingGET_9
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_16
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_17
2019-05-27 19:59:25 -Generating unique operation named: saveUsingPOST_8
2019-05-27 19:59:25 -Generating unique operation named: updateUsingGET_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPOST_9
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPUT_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 19:59:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 19:59:25 -Generating unique operation named: addUsingGET_9
2019-05-27 19:59:25 -Generating unique operation named: editUsingGET_10
2019-05-27 19:59:25 -Generating unique operation named: infoUsingGET_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingPOST_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingPUT_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 19:59:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 19:59:25 -Generating unique operation named: listUsingGET_10
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_18
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_19
2019-05-27 19:59:25 -Generating unique operation named: saveUsingPOST_9
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPOST_10
2019-05-27 19:59:25 -Generating unique operation named: listUsingGET_11
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_20
2019-05-27 19:59:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 19:59:25 -Generating unique operation named: addUsingGET_10
2019-05-27 19:59:25 -Generating unique operation named: editUsingGET_11
2019-05-27 19:59:25 -Generating unique operation named: listUsingGET_12
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_21
2019-05-27 19:59:25 -Generating unique operation named: saveUsingPOST_10
2019-05-27 19:59:25 -Generating unique operation named: treeUsingGET_1
2019-05-27 19:59:25 -Generating unique operation named: treeUsingGET_2
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPOST_11
2019-05-27 19:59:25 -Generating unique operation named: addUsingGET_11
2019-05-27 19:59:25 -Generating unique operation named: editUsingGET_12
2019-05-27 19:59:25 -Generating unique operation named: listUsingGET_13
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_22
2019-05-27 19:59:25 -Generating unique operation named: removeUsingPOST_23
2019-05-27 19:59:25 -Generating unique operation named: updateUsingPOST_12
2019-05-27 19:59:26 -Generating unique operation named: addUsingGET_12
2019-05-27 19:59:26 -Generating unique operation named: editUsingGET_13
2019-05-27 19:59:26 -Generating unique operation named: listUsingGET_14
2019-05-27 19:59:26 -Generating unique operation named: removeUsingPOST_24
2019-05-27 19:59:26 -Generating unique operation named: removeUsingPOST_25
2019-05-27 19:59:26 -Generating unique operation named: saveUsingPOST_11
2019-05-27 19:59:26 -Generating unique operation named: updateUsingGET_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPOST_13
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPUT_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 19:59:26 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 19:59:26 -Generating unique operation named: addUsingGET_13
2019-05-27 19:59:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 19:59:26 -Generating unique operation named: editUsingGET_14
2019-05-27 19:59:26 -Generating unique operation named: listUsingGET_15
2019-05-27 19:59:26 -Generating unique operation named: printEditUsingGET_1
2019-05-27 19:59:26 -Generating unique operation named: removeUsingPOST_26
2019-05-27 19:59:26 -Generating unique operation named: saveUsingPOST_12
2019-05-27 19:59:26 -Generating unique operation named: updateUsingGET_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPOST_14
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPUT_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 19:59:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 19:59:26 -Generating unique operation named: addUsingGET_14
2019-05-27 19:59:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 19:59:26 -Generating unique operation named: editUsingGET_15
2019-05-27 19:59:26 -Generating unique operation named: listUsingGET_16
2019-05-27 19:59:26 -Generating unique operation named: saveUsingPOST_13
2019-05-27 19:59:26 -Generating unique operation named: saveUsingPOST_14
2019-05-27 19:59:26 -Generating unique operation named: updateUsingPOST_15
2019-05-27 19:59:26 -Generating unique operation named: listUsingGET_17
2019-05-27 19:59:26 -Generating unique operation named: listUsingHEAD_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingPOST_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingPUT_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingPATCH_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingDELETE_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 19:59:26 -Generating unique operation named: listUsingTRACE_1
2019-05-27 19:59:26 -Generating unique operation named: countDDUsingGET_1
2019-05-27 19:59:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 19:59:26 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 19:59:26 -Generating unique operation named: addUsingGET_15
2019-05-27 19:59:26 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 19:59:26 -Generating unique operation named: editUsingGET_16
2019-05-27 19:59:27 -Generating unique operation named: listUsingGET_18
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_27
2019-05-27 19:59:27 -Generating unique operation named: saveUsingPOST_15
2019-05-27 19:59:27 -Generating unique operation named: treeUsingGET_3
2019-05-27 19:59:27 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPOST_16
2019-05-27 19:59:27 -Generating unique operation named: addUsingGET_16
2019-05-27 19:59:27 -Generating unique operation named: editUsingGET_17
2019-05-27 19:59:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 19:59:27 -Generating unique operation named: listUsingGET_19
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_28
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_29
2019-05-27 19:59:27 -Generating unique operation named: saveUsingPOST_16
2019-05-27 19:59:27 -Generating unique operation named: updateUsingGET_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPOST_17
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPUT_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 19:59:27 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 19:59:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 19:59:27 -Generating unique operation named: addUsingGET_17
2019-05-27 19:59:27 -Generating unique operation named: editUsingGET_18
2019-05-27 19:59:27 -Generating unique operation named: listUsingGET_20
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_30
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_31
2019-05-27 19:59:27 -Generating unique operation named: saveUsingPOST_17
2019-05-27 19:59:27 -Generating unique operation named: updateUsingGET_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPOST_18
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPUT_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 19:59:27 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 19:59:27 -Generating unique operation named: addUsingGET_18
2019-05-27 19:59:27 -Generating unique operation named: editUsingGET_19
2019-05-27 19:59:27 -Generating unique operation named: listUsingGET_21
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_32
2019-05-27 19:59:27 -Generating unique operation named: removeUsingPOST_33
2019-05-27 19:59:27 -Generating unique operation named: saveUsingPOST_18
2019-05-27 19:59:27 -Generating unique operation named: updateUsingGET_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPOST_19
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPUT_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 19:59:27 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 19:59:27 -Starting Quartz Scheduler now
2019-05-27 19:59:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 19:59:27 -Starting...
2019-05-27 19:59:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 19:59:27 -Started.
2019-05-27 19:59:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 19:59:27 -Using a shared selector for servlet write/read
2019-05-27 19:59:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 19:59:27 -Started BootdoApplication in 37.549 seconds (JVM running for 38.346)
2019-05-27 19:59:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 19:59:28 -==> Parameters: 
2019-05-27 19:59:28 -<==      Total: 1
2019-05-27 20:00:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 20:06:53 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 20:06:53 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 20:06:53 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-05-27 20:06:53 -Enabling session validation scheduler...
2019-05-27 20:06:53 -请求地址 : http://localhost:8081/login;JSESSIONID=41028992-1f1f-4bf2-a0ef-beb64e9fce72
2019-05-27 20:06:53 -HTTP METHOD : GET
2019-05-27 20:06:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 20:06:53 -参数 : [{}]
2019-05-27 20:06:53 -耗时 : 5
2019-05-27 20:06:53 -返回值 : login
2019-05-27 20:06:55 -请求地址 : http://localhost:8081/getVerify
2019-05-27 20:06:55 -HTTP METHOD : GET
2019-05-27 20:06:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 20:06:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3acd6ea8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d64b9f0]
2019-05-27 20:07:00 -8039
2019-05-27 20:07:01 -耗时 : 5222
2019-05-27 20:07:01 -返回值 : null
2019-05-27 20:07:05 -请求地址 : http://localhost:8081/login
2019-05-27 20:07:05 -HTTP METHOD : POST
2019-05-27 20:07:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 20:07:05 -参数 : [admin, 111111, 8039, org.apache.shiro.web.servlet.ShiroHttpServletRequest@48fc99e]
2019-05-27 20:07:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 20:07:05 -==> Parameters: admin(String)
2019-05-27 20:07:05 -<==      Total: 1
2019-05-27 20:07:05 -耗时 : 96
2019-05-27 20:07:05 -返回值 : {msg=操作成功, code=0}
2019-05-27 20:07:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 20:07:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 20:07:05 -==> Parameters: 1(Long), admin(String), 登录(String), 96(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 20:07:05.655(Timestamp)
2019-05-27 20:07:05 -请求地址 : http://localhost:8081/index
2019-05-27 20:07:05 -HTTP METHOD : GET
2019-05-27 20:07:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 20:07:05 -参数 : [{}]
2019-05-27 20:07:05 -<==    Updates: 1
2019-05-27 20:07:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 20:07:06 -==> Parameters: 1(Long)
2019-05-27 20:07:06 -<==      Total: 50
2019-05-27 20:07:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 20:07:06 -==> Parameters: 138(Long)
2019-05-27 20:07:06 -<==      Total: 1
2019-05-27 20:07:06 -耗时 : 435
2019-05-27 20:07:06 -返回值 : index_v1
2019-05-27 20:07:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 20:07:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 435(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 20:07:06.217(Timestamp)
2019-05-27 20:07:06 -<==    Updates: 1
2019-05-27 20:07:06 -请求地址 : http://localhost:8081/main
2019-05-27 20:07:06 -HTTP METHOD : GET
2019-05-27 20:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:07:06 -参数 : []
2019-05-27 20:07:06 -耗时 : 1
2019-05-27 20:07:06 -返回值 : main
2019-05-27 20:07:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 20:07:06 -HTTP METHOD : GET
2019-05-27 20:07:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 20:07:06 -参数 : []
2019-05-27 20:07:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 20:07:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 20:07:06 -<==      Total: 0
2019-05-27 20:07:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 20:07:06 -==> Parameters: 1(Long), 0(String)
2019-05-27 20:07:06 -<==      Total: 1
2019-05-27 20:07:06 -耗时 : 95
2019-05-27 20:07:06 -返回值 : com.bootdo.common.utils.PageUtils@138cfed1
2019-05-27 20:07:06 -请求地址 : http://localhost:8081/main
2019-05-27 20:07:06 -HTTP METHOD : GET
2019-05-27 20:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:07:06 -参数 : []
2019-05-27 20:07:06 -耗时 : 0
2019-05-27 20:07:06 -返回值 : main
2019-05-27 20:07:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 20:07:13 -==> Parameters: 1(Long)
2019-05-27 20:07:13 -<==      Total: 94
2019-05-27 20:07:13 -请求地址 : http://localhost:8081/elec/elec
2019-05-27 20:07:13 -HTTP METHOD : GET
2019-05-27 20:07:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-27 20:07:13 -参数 : []
2019-05-27 20:07:13 -耗时 : 0
2019-05-27 20:07:13 -返回值 : elec/elec/elec
2019-05-27 20:07:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 20:07:14 -HTTP METHOD : GET
2019-05-27 20:07:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 20:07:14 -参数 : [userType]
2019-05-27 20:07:14 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-27 20:07:14 -HTTP METHOD : GET
2019-05-27 20:07:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 20:07:14 -参数 : [elecType]
2019-05-27 20:07:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 20:07:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 20:07:14 -==> Parameters: elecType(String)
2019-05-27 20:07:14 -==> Parameters: userType(String)
2019-05-27 20:07:14 -<==      Total: 4
2019-05-27 20:07:14 -耗时 : 79
2019-05-27 20:07:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 20:07:14 -<==      Total: 11
2019-05-27 20:07:14 -耗时 : 111
2019-05-27 20:07:14 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 20:07:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-27 20:07:14 -HTTP METHOD : GET
2019-05-27 20:07:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-27 20:07:14 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5ef07c25]
2019-05-27 20:07:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-27 20:07:14 -==> Parameters: 0(Integer), 10(Integer)
2019-05-27 20:07:14 -<==      Total: 10
2019-05-27 20:07:14 -==>  Preparing: select count(*) from elec 
2019-05-27 20:07:14 -==> Parameters: 
2019-05-27 20:07:14 -<==      Total: 1
2019-05-27 20:07:14 -耗时 : 339
2019-05-27 20:07:14 -返回值 : com.bootdo.common.utils.PageUtils@49dc3c28
2019-05-27 20:07:18 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 20:07:18 -HTTP METHOD : GET
2019-05-27 20:07:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 20:07:18 -参数 : []
2019-05-27 20:07:18 -耗时 : 0
2019-05-27 20:07:18 -返回值 : elec/elecInto/elecInto
2019-05-27 20:07:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 20:07:27 -HTTP METHOD : GET
2019-05-27 20:07:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 20:07:27 -参数 : []
2019-05-27 20:07:27 -耗时 : 1
2019-05-27 20:07:27 -返回值 : system/dept/deptTree
2019-05-27 20:07:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 20:07:27 -HTTP METHOD : GET
2019-05-27 20:07:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 20:07:27 -参数 : []
2019-05-27 20:07:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 20:07:27 -==> Parameters: 
2019-05-27 20:07:27 -<==      Total: 3
2019-05-27 20:07:27 -耗时 : 27
2019-05-27 20:07:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 20:07:29 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 20:07:29 -HTTP METHOD : POST
2019-05-27 20:07:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 20:07:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@59dc845e, com.bootdo.elec.vo.ElecVo@58443918, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6467f710]
2019-05-27 20:07:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 20:07:30 -==> Parameters: 2019-05(String), 2(String), 1-0001(String)
2019-05-27 20:07:30 -<==      Total: 0
2019-05-27 20:07:30 -耗时 : 1326
2019-05-27 20:07:30 -返回值 : fail
2019-05-27 20:08:42 -请求地址 : http://localhost:8081/index
2019-05-27 20:08:42 -HTTP METHOD : GET
2019-05-27 20:08:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 20:08:42 -参数 : [{}]
2019-05-27 20:08:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 20:08:42 -==> Parameters: 1(Long)
2019-05-27 20:08:43 -<==      Total: 50
2019-05-27 20:08:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 20:08:43 -==> Parameters: 138(Long)
2019-05-27 20:08:43 -<==      Total: 1
2019-05-27 20:08:43 -耗时 : 359
2019-05-27 20:08:43 -返回值 : index_v1
2019-05-27 20:08:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 20:08:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 363(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 20:08:43.336(Timestamp)
2019-05-27 20:08:43 -请求地址 : http://localhost:8081/main
2019-05-27 20:08:43 -HTTP METHOD : GET
2019-05-27 20:08:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:08:43 -参数 : []
2019-05-27 20:08:43 -耗时 : 1
2019-05-27 20:08:43 -返回值 : main
2019-05-27 20:08:43 -<==    Updates: 1
2019-05-27 20:08:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 20:08:44 -HTTP METHOD : GET
2019-05-27 20:08:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 20:08:44 -参数 : []
2019-05-27 20:08:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 20:08:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 20:08:44 -<==      Total: 0
2019-05-27 20:08:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 20:08:44 -==> Parameters: 1(Long), 0(String)
2019-05-27 20:08:44 -<==      Total: 1
2019-05-27 20:08:44 -耗时 : 43
2019-05-27 20:08:44 -返回值 : com.bootdo.common.utils.PageUtils@1835fa0e
2019-05-27 20:08:44 -请求地址 : http://localhost:8081/main
2019-05-27 20:08:44 -HTTP METHOD : GET
2019-05-27 20:08:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:08:44 -参数 : []
2019-05-27 20:08:44 -耗时 : 1
2019-05-27 20:08:44 -返回值 : main
2019-05-27 20:08:49 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 20:08:49 -HTTP METHOD : GET
2019-05-27 20:08:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 20:08:49 -参数 : []
2019-05-27 20:08:49 -耗时 : 1
2019-05-27 20:08:49 -返回值 : elec/elecInto/elecInto
2019-05-27 20:08:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 20:08:59 -HTTP METHOD : GET
2019-05-27 20:08:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 20:08:59 -参数 : []
2019-05-27 20:08:59 -耗时 : 0
2019-05-27 20:08:59 -返回值 : system/dept/deptTree
2019-05-27 20:08:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 20:08:59 -HTTP METHOD : GET
2019-05-27 20:08:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 20:08:59 -参数 : []
2019-05-27 20:08:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 20:08:59 -==> Parameters: 
2019-05-27 20:08:59 -<==      Total: 3
2019-05-27 20:08:59 -耗时 : 3
2019-05-27 20:08:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 20:09:00 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 20:09:00 -HTTP METHOD : POST
2019-05-27 20:09:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 20:09:00 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@533068f3, com.bootdo.elec.vo.ElecVo@17048c1e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e22ef60]
2019-05-27 20:09:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 20:09:00 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 20:09:00 -<==      Total: 1
2019-05-27 20:09:00 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 20:09:00 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 20:09:00 -<==      Total: 1
2019-05-27 20:09:00 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 20:09:00 -==> Parameters: 320.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 20:09:00 -<==    Updates: 1
2019-05-27 20:09:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 20:09:01 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 20:09:01 -<==      Total: 0
2019-05-27 20:09:01 -耗时 : 306
2019-05-27 20:09:01 -返回值 : fail
2019-05-27 20:16:01 -Starting BootdoApplication on PC-201905091110 with PID 16600 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 20:16:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 20:16:01 -The following profiles are active: dev
2019-05-27 20:16:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 20:16:01 CST 2019]; root of context hierarchy
2019-05-27 20:16:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 20:16:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$570235d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$495b647e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 20:16:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 20:16:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:16:12 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 20:16:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 20:16:12 -Starting service [Tomcat]
2019-05-27 20:16:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 20:16:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 20:16:13 -Initializing Spring embedded WebApplicationContext
2019-05-27 20:16:13 -Root WebApplicationContext: initialization completed in 11848 ms
2019-05-27 20:16:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 20:16:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 20:16:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 20:16:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 20:16:13 -Filter xssFilter was not registered (disabled)
2019-05-27 20:16:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 20:16:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 20:16:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 20:16:13 -Servlet dispatcherServlet mapped to [/]
2019-05-27 20:16:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 20:16:01 CST 2019]; root of context hierarchy
2019-05-27 20:16:20 -Using default implementation for ThreadExecutor
2019-05-27 20:16:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 20:16:20 -Quartz Scheduler v.2.2.1 created.
2019-05-27 20:16:20 -RAMJobStore initialized.
2019-05-27 20:16:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 20:16:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 20:16:20 -Quartz scheduler version: 2.2.1
2019-05-27 20:16:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@62735b13
2019-05-27 20:16:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 20:16:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 20:16:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 20:16:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 20:16:24 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 20:16:24 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 20:16:24 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 20:16:24 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 20:16:24 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 20:16:24 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 20:16:24 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 20:16:24 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 20:16:24 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 20:16:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 20:16:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 20:16:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 20:16:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 20:16:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 20:16:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 20:16:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 20:16:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 20:16:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 20:16:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 20:16:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 20:16:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 20:16:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 20:16:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 20:16:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 20:16:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 20:16:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 20:16:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 20:16:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 20:16:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 20:16:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:16:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 20:16:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 20:16:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 20:16:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 20:16:24 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 20:16:24 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 20:16:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 20:16:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 20:16:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 20:16:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 20:16:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 20:16:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:16:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 20:16:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 20:16:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 20:16:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 20:16:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 20:16:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 20:16:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 20:16:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 20:16:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 20:16:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 20:16:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 20:16:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 20:16:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 20:16:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 20:16:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 20:16:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 20:16:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 20:16:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 20:16:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 20:16:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 20:16:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 20:16:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 20:16:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 20:16:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 20:16:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 20:16:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 20:16:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 20:16:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 20:16:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 20:16:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 20:16:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 20:16:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 20:16:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 20:16:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 20:16:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 20:16:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 20:16:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 20:16:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 20:16:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 20:16:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 20:16:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 20:16:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:16:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 20:16:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:16:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:16:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 20:16:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 20:16:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 20:16:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:16:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 20:16:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 20:16:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 20:16:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 20:16:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 20:16:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 20:16:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:16:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 20:16:01 CST 2019]; root of context hierarchy
2019-05-27 20:16:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:16:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:16:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:16:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 20:16:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 20:16:29 -Registering beans for JMX exposure on startup
2019-05-27 20:16:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 20:16:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 20:16:29 -Starting beans in phase 2147483647
2019-05-27 20:16:29 -Context refreshed
2019-05-27 20:16:29 -Found 1 custom documentation plugin(s)
2019-05-27 20:16:29 -Scanning for api listing references
2019-05-27 20:16:30 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_1
2019-05-27 20:16:30 -Generating unique operation named: addUsingGET_1
2019-05-27 20:16:30 -Generating unique operation named: editUsingGET_1
2019-05-27 20:16:30 -Generating unique operation named: listUsingGET_1
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_2
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_3
2019-05-27 20:16:30 -Generating unique operation named: saveUsingPOST_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingGET_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPOST_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPUT_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 20:16:30 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 20:16:30 -Generating unique operation named: addUsingGET_2
2019-05-27 20:16:30 -Generating unique operation named: editUsingGET_2
2019-05-27 20:16:30 -Generating unique operation named: listUsingGET_2
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_4
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_5
2019-05-27 20:16:30 -Generating unique operation named: saveUsingPOST_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPOST_2
2019-05-27 20:16:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 20:16:30 -Generating unique operation named: addUsingGET_3
2019-05-27 20:16:30 -Generating unique operation named: editUsingGET_3
2019-05-27 20:16:30 -Generating unique operation named: listUsingGET_3
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_6
2019-05-27 20:16:30 -Generating unique operation named: removeUsingPOST_7
2019-05-27 20:16:30 -Generating unique operation named: saveUsingPOST_3
2019-05-27 20:16:30 -Generating unique operation named: updateUsingGET_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPOST_3
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPUT_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 20:16:30 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 20:16:31 -Generating unique operation named: addUsingGET_4
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_4
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_4
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_8
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_9
2019-05-27 20:16:31 -Generating unique operation named: saveUsingPOST_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingGET_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPUT_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 20:16:31 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 20:16:31 -Generating unique operation named: ElecUsingGET_1
2019-05-27 20:16:31 -Generating unique operation named: addUsingGET_5
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_5
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_5
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_10
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_11
2019-05-27 20:16:31 -Generating unique operation named: saveUsingPOST_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingGET_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPUT_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 20:16:31 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_6
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_6
2019-05-27 20:16:31 -Generating unique operation named: addUsingGET_6
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_7
2019-05-27 20:16:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_7
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_12
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_13
2019-05-27 20:16:31 -Generating unique operation named: saveUsingPOST_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingGET_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPUT_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 20:16:31 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 20:16:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 20:16:31 -Generating unique operation named: addUsingGET_7
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_8
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_8
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_14
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_15
2019-05-27 20:16:31 -Generating unique operation named: saveUsingPOST_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingGET_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_8
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPUT_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 20:16:31 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 20:16:31 -Generating unique operation named: addUsingGET_8
2019-05-27 20:16:31 -Generating unique operation named: editUsingGET_9
2019-05-27 20:16:31 -Generating unique operation named: listUsingGET_9
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_16
2019-05-27 20:16:31 -Generating unique operation named: removeUsingPOST_17
2019-05-27 20:16:31 -Generating unique operation named: saveUsingPOST_8
2019-05-27 20:16:31 -Generating unique operation named: updateUsingGET_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPOST_9
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPUT_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 20:16:31 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_9
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_10
2019-05-27 20:16:32 -Generating unique operation named: infoUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingPOST_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingPUT_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 20:16:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_10
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_18
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_19
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_10
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_11
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_20
2019-05-27 20:16:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_10
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_11
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_12
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_21
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_10
2019-05-27 20:16:32 -Generating unique operation named: treeUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: treeUsingGET_2
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_11
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_11
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_12
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_13
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_22
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_23
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_12
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_12
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_13
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_14
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_24
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_25
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_11
2019-05-27 20:16:32 -Generating unique operation named: updateUsingGET_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_13
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPUT_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 20:16:32 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_13
2019-05-27 20:16:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_14
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_15
2019-05-27 20:16:32 -Generating unique operation named: printEditUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_26
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_12
2019-05-27 20:16:32 -Generating unique operation named: updateUsingGET_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_14
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPUT_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 20:16:32 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_14
2019-05-27 20:16:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_15
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_16
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_13
2019-05-27 20:16:32 -Generating unique operation named: saveUsingPOST_14
2019-05-27 20:16:32 -Generating unique operation named: updateUsingPOST_15
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_17
2019-05-27 20:16:32 -Generating unique operation named: listUsingHEAD_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingPOST_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingPUT_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingPATCH_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingDELETE_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 20:16:32 -Generating unique operation named: listUsingTRACE_1
2019-05-27 20:16:32 -Generating unique operation named: countDDUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 20:16:32 -Generating unique operation named: addUsingGET_15
2019-05-27 20:16:32 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 20:16:32 -Generating unique operation named: editUsingGET_16
2019-05-27 20:16:32 -Generating unique operation named: listUsingGET_18
2019-05-27 20:16:32 -Generating unique operation named: removeUsingPOST_27
2019-05-27 20:16:33 -Generating unique operation named: saveUsingPOST_15
2019-05-27 20:16:33 -Generating unique operation named: treeUsingGET_3
2019-05-27 20:16:33 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPOST_16
2019-05-27 20:16:33 -Generating unique operation named: addUsingGET_16
2019-05-27 20:16:33 -Generating unique operation named: editUsingGET_17
2019-05-27 20:16:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 20:16:33 -Generating unique operation named: listUsingGET_19
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_28
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_29
2019-05-27 20:16:33 -Generating unique operation named: saveUsingPOST_16
2019-05-27 20:16:33 -Generating unique operation named: updateUsingGET_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPOST_17
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPUT_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 20:16:33 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 20:16:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 20:16:33 -Generating unique operation named: addUsingGET_17
2019-05-27 20:16:33 -Generating unique operation named: editUsingGET_18
2019-05-27 20:16:33 -Generating unique operation named: listUsingGET_20
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_30
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_31
2019-05-27 20:16:33 -Generating unique operation named: saveUsingPOST_17
2019-05-27 20:16:33 -Generating unique operation named: updateUsingGET_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPOST_18
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPUT_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 20:16:33 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 20:16:33 -Generating unique operation named: addUsingGET_18
2019-05-27 20:16:33 -Generating unique operation named: editUsingGET_19
2019-05-27 20:16:33 -Generating unique operation named: listUsingGET_21
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_32
2019-05-27 20:16:33 -Generating unique operation named: removeUsingPOST_33
2019-05-27 20:16:33 -Generating unique operation named: saveUsingPOST_18
2019-05-27 20:16:33 -Generating unique operation named: updateUsingGET_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPOST_19
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPUT_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 20:16:33 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 20:16:33 -Starting Quartz Scheduler now
2019-05-27 20:16:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 20:16:33 -Starting...
2019-05-27 20:16:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 20:16:33 -Started.
2019-05-27 20:16:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 20:16:33 -Using a shared selector for servlet write/read
2019-05-27 20:16:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 20:16:33 -Started BootdoApplication in 33.521 seconds (JVM running for 34.473)
2019-05-27 20:16:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 20:16:34 -==> Parameters: 
2019-05-27 20:16:34 -<==      Total: 1
2019-05-27 20:16:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 20:16:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 20:16:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2019-05-27 20:16:36 -Enabling session validation scheduler...
2019-05-27 20:16:37 -请求地址 : http://localhost:8081/login;JSESSIONID=4ce5b73c-a149-4c90-ab59-3bf0ed451829
2019-05-27 20:16:37 -HTTP METHOD : GET
2019-05-27 20:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 20:16:37 -参数 : [{}]
2019-05-27 20:16:37 -耗时 : 5
2019-05-27 20:16:37 -返回值 : login
2019-05-27 20:16:38 -请求地址 : http://localhost:8081/getVerify
2019-05-27 20:16:38 -HTTP METHOD : GET
2019-05-27 20:16:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 20:16:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@742d498d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7aeab978]
2019-05-27 20:16:51 -3803
2019-05-27 20:16:52 -耗时 : 14675
2019-05-27 20:16:52 -返回值 : null
2019-05-27 20:17:00 -请求地址 : http://localhost:8081/login
2019-05-27 20:17:00 -HTTP METHOD : POST
2019-05-27 20:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 20:17:00 -参数 : [admin, 111111, 3803, org.apache.shiro.web.servlet.ShiroHttpServletRequest@395782fa]
2019-05-27 20:17:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 20:17:00 -==> Parameters: admin(String)
2019-05-27 20:17:00 -<==      Total: 1
2019-05-27 20:17:00 -耗时 : 150
2019-05-27 20:17:00 -返回值 : {msg=操作成功, code=0}
2019-05-27 20:17:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 20:17:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 20:17:00 -==> Parameters: 1(Long), admin(String), 登录(String), 151(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 20:17:00.591(Timestamp)
2019-05-27 20:17:00 -<==    Updates: 1
2019-05-27 20:17:00 -请求地址 : http://localhost:8081/index
2019-05-27 20:17:00 -HTTP METHOD : GET
2019-05-27 20:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 20:17:00 -参数 : [{}]
2019-05-27 20:17:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 20:17:00 -==> Parameters: 1(Long)
2019-05-27 20:17:01 -<==      Total: 50
2019-05-27 20:17:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 20:17:01 -==> Parameters: 138(Long)
2019-05-27 20:17:01 -<==      Total: 1
2019-05-27 20:17:01 -耗时 : 327
2019-05-27 20:17:01 -返回值 : index_v1
2019-05-27 20:17:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 20:17:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 328(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 20:17:01.274(Timestamp)
2019-05-27 20:17:01 -请求地址 : http://localhost:8081/main
2019-05-27 20:17:01 -HTTP METHOD : GET
2019-05-27 20:17:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:17:01 -参数 : []
2019-05-27 20:17:01 -耗时 : 0
2019-05-27 20:17:01 -返回值 : main
2019-05-27 20:17:01 -<==    Updates: 1
2019-05-27 20:17:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 20:17:01 -HTTP METHOD : GET
2019-05-27 20:17:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 20:17:01 -参数 : []
2019-05-27 20:17:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 20:17:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 20:17:01 -<==      Total: 0
2019-05-27 20:17:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 20:17:01 -==> Parameters: 1(Long), 0(String)
2019-05-27 20:17:01 -<==      Total: 1
2019-05-27 20:17:01 -耗时 : 107
2019-05-27 20:17:01 -返回值 : com.bootdo.common.utils.PageUtils@2af15190
2019-05-27 20:17:01 -请求地址 : http://localhost:8081/main
2019-05-27 20:17:01 -HTTP METHOD : GET
2019-05-27 20:17:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 20:17:01 -参数 : []
2019-05-27 20:17:01 -耗时 : 4
2019-05-27 20:17:01 -返回值 : main
2019-05-27 20:17:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 20:17:05 -==> Parameters: 1(Long)
2019-05-27 20:17:05 -<==      Total: 94
2019-05-27 20:17:05 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 20:17:05 -HTTP METHOD : GET
2019-05-27 20:17:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 20:17:05 -参数 : []
2019-05-27 20:17:05 -耗时 : 0
2019-05-27 20:17:05 -返回值 : elec/elecInto/elecInto
2019-05-27 20:17:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 20:17:16 -HTTP METHOD : GET
2019-05-27 20:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 20:17:16 -参数 : []
2019-05-27 20:17:16 -耗时 : 1
2019-05-27 20:17:16 -返回值 : system/dept/deptTree
2019-05-27 20:17:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 20:17:16 -HTTP METHOD : GET
2019-05-27 20:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 20:17:16 -参数 : []
2019-05-27 20:17:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 20:17:16 -==> Parameters: 
2019-05-27 20:17:16 -<==      Total: 3
2019-05-27 20:17:16 -耗时 : 74
2019-05-27 20:17:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 20:17:18 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 20:17:18 -HTTP METHOD : POST
2019-05-27 20:17:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 20:17:18 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@27491304, com.bootdo.elec.vo.ElecVo@1a06a361, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4579da59]
2019-05-27 20:17:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 20:17:19 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 20:17:20 -<==      Total: 1
2019-05-27 20:17:20 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 20:17:20 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 20:17:20 -<==      Total: 1
2019-05-27 20:17:20 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 20:17:20 -==> Parameters: 640.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 20:17:20 -<==    Updates: 1
2019-05-27 20:17:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 20:17:20 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 20:17:20 -<==      Total: 0
2019-05-27 20:17:20 -耗时 : 1938
2019-05-27 20:17:20 -返回值 : fail
2019-05-27 20:17:26 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-27 20:58:19 -Starting BootdoApplication on PC-201905091110 with PID 31468 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 20:58:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 20:58:19 -The following profiles are active: dev
2019-05-27 20:58:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Mon May 27 20:58:19 CST 2019]; root of context hierarchy
2019-05-27 20:58:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 20:58:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d67879e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c8d1a88f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 20:58:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 20:58:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 20:58:31 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 20:58:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 20:58:31 -Starting service [Tomcat]
2019-05-27 20:58:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 20:58:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 20:58:31 -Initializing Spring embedded WebApplicationContext
2019-05-27 20:58:31 -Root WebApplicationContext: initialization completed in 12159 ms
2019-05-27 20:58:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 20:58:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 20:58:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 20:58:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 20:58:32 -Filter xssFilter was not registered (disabled)
2019-05-27 20:58:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 20:58:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 20:58:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 20:58:32 -Servlet dispatcherServlet mapped to [/]
2019-05-27 20:58:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Mon May 27 20:58:19 CST 2019]; root of context hierarchy
2019-05-27 20:58:37 -Using default implementation for ThreadExecutor
2019-05-27 20:58:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 20:58:37 -Quartz Scheduler v.2.2.1 created.
2019-05-27 20:58:37 -RAMJobStore initialized.
2019-05-27 20:58:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 20:58:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 20:58:37 -Quartz scheduler version: 2.2.1
2019-05-27 20:58:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3f033664
2019-05-27 20:58:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 20:58:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 20:58:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 20:58:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 20:58:42 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 20:58:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 20:58:42 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 20:58:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 20:58:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 20:58:42 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 20:58:42 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 20:58:42 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 20:58:42 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 20:58:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 20:58:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 20:58:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 20:58:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 20:58:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 20:58:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 20:58:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 20:58:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 20:58:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 20:58:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 20:58:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 20:58:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 20:58:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 20:58:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 20:58:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 20:58:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 20:58:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 20:58:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 20:58:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 20:58:42 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 20:58:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 20:58:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 20:58:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 20:58:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 20:58:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 20:58:42 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 20:58:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 20:58:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 20:58:42 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 20:58:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 20:58:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 20:58:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 20:58:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 20:58:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 20:58:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 20:58:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 20:58:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 20:58:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 20:58:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 20:58:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 20:58:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 20:58:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 20:58:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 20:58:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 20:58:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 20:58:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 20:58:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 20:58:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 20:58:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 20:58:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 20:58:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 20:58:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 20:58:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 20:58:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 20:58:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 20:58:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 20:58:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 20:58:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 20:58:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 20:58:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 20:58:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 20:58:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 20:58:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 20:58:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 20:58:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 20:58:42 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 20:58:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 20:58:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 20:58:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 20:58:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 20:58:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 20:58:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 20:58:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 20:58:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 20:58:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 20:58:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 20:58:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 20:58:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 20:58:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:58:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Mon May 27 20:58:19 CST 2019]; root of context hierarchy
2019-05-27 20:58:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:58:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:58:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 20:58:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 20:58:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 20:58:48 -Registering beans for JMX exposure on startup
2019-05-27 20:58:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 20:58:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 20:58:48 -Starting beans in phase 2147483647
2019-05-27 20:58:48 -Context refreshed
2019-05-27 20:58:49 -Found 1 custom documentation plugin(s)
2019-05-27 20:58:49 -Scanning for api listing references
2019-05-27 20:58:49 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_1
2019-05-27 20:58:50 -Generating unique operation named: addUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: listUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_2
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_3
2019-05-27 20:58:50 -Generating unique operation named: saveUsingPOST_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPOST_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPUT_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 20:58:50 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 20:58:50 -Generating unique operation named: addUsingGET_2
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_2
2019-05-27 20:58:50 -Generating unique operation named: listUsingGET_2
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_4
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_5
2019-05-27 20:58:50 -Generating unique operation named: saveUsingPOST_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPOST_2
2019-05-27 20:58:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: addUsingGET_3
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_3
2019-05-27 20:58:50 -Generating unique operation named: listUsingGET_3
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_6
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_7
2019-05-27 20:58:50 -Generating unique operation named: saveUsingPOST_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingGET_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPOST_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPUT_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 20:58:50 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 20:58:50 -Generating unique operation named: addUsingGET_4
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_4
2019-05-27 20:58:50 -Generating unique operation named: listUsingGET_4
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_8
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_9
2019-05-27 20:58:50 -Generating unique operation named: saveUsingPOST_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingGET_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPOST_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPUT_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 20:58:50 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 20:58:50 -Generating unique operation named: ElecUsingGET_1
2019-05-27 20:58:50 -Generating unique operation named: addUsingGET_5
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_5
2019-05-27 20:58:50 -Generating unique operation named: listUsingGET_5
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_10
2019-05-27 20:58:50 -Generating unique operation named: removeUsingPOST_11
2019-05-27 20:58:50 -Generating unique operation named: saveUsingPOST_5
2019-05-27 20:58:50 -Generating unique operation named: updateUsingGET_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPOST_5
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPUT_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 20:58:50 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 20:58:50 -Generating unique operation named: editUsingGET_6
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_6
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_6
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_7
2019-05-27 20:58:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_7
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_12
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_13
2019-05-27 20:58:51 -Generating unique operation named: saveUsingPOST_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingGET_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPUT_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 20:58:51 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 20:58:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_7
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_8
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_8
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_14
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_15
2019-05-27 20:58:51 -Generating unique operation named: saveUsingPOST_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingGET_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_8
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPUT_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 20:58:51 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_8
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_9
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_9
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_16
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_17
2019-05-27 20:58:51 -Generating unique operation named: saveUsingPOST_8
2019-05-27 20:58:51 -Generating unique operation named: updateUsingGET_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_9
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPUT_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 20:58:51 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_9
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_10
2019-05-27 20:58:51 -Generating unique operation named: infoUsingGET_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingPOST_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingPUT_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 20:58:51 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_10
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_18
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_19
2019-05-27 20:58:51 -Generating unique operation named: saveUsingPOST_9
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_10
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_11
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_20
2019-05-27 20:58:51 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_10
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_11
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_12
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_21
2019-05-27 20:58:51 -Generating unique operation named: saveUsingPOST_10
2019-05-27 20:58:51 -Generating unique operation named: treeUsingGET_1
2019-05-27 20:58:51 -Generating unique operation named: treeUsingGET_2
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_11
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_11
2019-05-27 20:58:51 -Generating unique operation named: editUsingGET_12
2019-05-27 20:58:51 -Generating unique operation named: listUsingGET_13
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_22
2019-05-27 20:58:51 -Generating unique operation named: removeUsingPOST_23
2019-05-27 20:58:51 -Generating unique operation named: updateUsingPOST_12
2019-05-27 20:58:51 -Generating unique operation named: addUsingGET_12
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_13
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_14
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_24
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_25
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_11
2019-05-27 20:58:52 -Generating unique operation named: updateUsingGET_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPOST_13
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPUT_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 20:58:52 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 20:58:52 -Generating unique operation named: addUsingGET_13
2019-05-27 20:58:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_14
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_15
2019-05-27 20:58:52 -Generating unique operation named: printEditUsingGET_1
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_26
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_12
2019-05-27 20:58:52 -Generating unique operation named: updateUsingGET_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPOST_14
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPUT_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 20:58:52 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 20:58:52 -Generating unique operation named: addUsingGET_14
2019-05-27 20:58:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_15
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_16
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_13
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_14
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPOST_15
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_17
2019-05-27 20:58:52 -Generating unique operation named: listUsingHEAD_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingPOST_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingPUT_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingPATCH_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingDELETE_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 20:58:52 -Generating unique operation named: listUsingTRACE_1
2019-05-27 20:58:52 -Generating unique operation named: countDDUsingGET_1
2019-05-27 20:58:52 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 20:58:52 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 20:58:52 -Generating unique operation named: addUsingGET_15
2019-05-27 20:58:52 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_16
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_18
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_27
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_15
2019-05-27 20:58:52 -Generating unique operation named: treeUsingGET_3
2019-05-27 20:58:52 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPOST_16
2019-05-27 20:58:52 -Generating unique operation named: addUsingGET_16
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_17
2019-05-27 20:58:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_19
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_28
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_29
2019-05-27 20:58:52 -Generating unique operation named: saveUsingPOST_16
2019-05-27 20:58:52 -Generating unique operation named: updateUsingGET_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPOST_17
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPUT_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 20:58:52 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 20:58:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 20:58:52 -Generating unique operation named: addUsingGET_17
2019-05-27 20:58:52 -Generating unique operation named: editUsingGET_18
2019-05-27 20:58:52 -Generating unique operation named: listUsingGET_20
2019-05-27 20:58:52 -Generating unique operation named: removeUsingPOST_30
2019-05-27 20:58:53 -Generating unique operation named: removeUsingPOST_31
2019-05-27 20:58:53 -Generating unique operation named: saveUsingPOST_17
2019-05-27 20:58:53 -Generating unique operation named: updateUsingGET_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPOST_18
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPUT_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 20:58:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 20:58:53 -Generating unique operation named: addUsingGET_18
2019-05-27 20:58:53 -Generating unique operation named: editUsingGET_19
2019-05-27 20:58:53 -Generating unique operation named: listUsingGET_21
2019-05-27 20:58:53 -Generating unique operation named: removeUsingPOST_32
2019-05-27 20:58:53 -Generating unique operation named: removeUsingPOST_33
2019-05-27 20:58:53 -Generating unique operation named: saveUsingPOST_18
2019-05-27 20:58:53 -Generating unique operation named: updateUsingGET_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPOST_19
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPUT_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 20:58:53 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 20:58:53 -Starting Quartz Scheduler now
2019-05-27 20:58:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 20:58:53 -Starting...
2019-05-27 20:58:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 20:58:53 -Started.
2019-05-27 20:58:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 20:58:53 -Using a shared selector for servlet write/read
2019-05-27 20:58:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 20:58:53 -Started BootdoApplication in 36.58 seconds (JVM running for 38.326)
2019-05-27 20:58:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 20:58:54 -==> Parameters: 
2019-05-27 20:58:54 -<==      Total: 1
2019-05-27 20:59:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 21:01:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 21:01:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 21:01:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 111 ms
2019-05-27 21:01:43 -Enabling session validation scheduler...
2019-05-27 21:01:43 -请求地址 : http://localhost:8081/login;JSESSIONID=fbdafa7e-aa8f-4982-8cff-9f22841bcfd1
2019-05-27 21:01:43 -HTTP METHOD : GET
2019-05-27 21:01:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:01:43 -参数 : [{}]
2019-05-27 21:01:43 -耗时 : 6
2019-05-27 21:01:43 -返回值 : login
2019-05-27 21:01:45 -请求地址 : http://localhost:8081/getVerify
2019-05-27 21:01:45 -HTTP METHOD : GET
2019-05-27 21:01:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 21:01:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@adedc1d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4192336]
2019-05-27 21:01:51 -3843
2019-05-27 21:01:52 -耗时 : 6300
2019-05-27 21:01:52 -返回值 : null
2019-05-27 21:01:57 -请求地址 : http://localhost:8081/login
2019-05-27 21:01:57 -HTTP METHOD : POST
2019-05-27 21:01:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 21:01:57 -参数 : [admin, 111111, 3843, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2e110ddd]
2019-05-27 21:01:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 21:01:57 -==> Parameters: admin(String)
2019-05-27 21:01:57 -<==      Total: 1
2019-05-27 21:01:57 -耗时 : 116
2019-05-27 21:01:57 -返回值 : {msg=操作成功, code=0}
2019-05-27 21:01:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 21:01:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:01:58 -==> Parameters: 1(Long), admin(String), 登录(String), 116(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 21:01:58.091(Timestamp)
2019-05-27 21:01:58 -<==    Updates: 1
2019-05-27 21:01:58 -请求地址 : http://localhost:8081/index
2019-05-27 21:01:58 -HTTP METHOD : GET
2019-05-27 21:01:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:01:58 -参数 : [{}]
2019-05-27 21:01:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:01:58 -==> Parameters: 1(Long)
2019-05-27 21:01:58 -<==      Total: 50
2019-05-27 21:01:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:01:58 -==> Parameters: 138(Long)
2019-05-27 21:01:58 -<==      Total: 1
2019-05-27 21:01:58 -耗时 : 391
2019-05-27 21:01:58 -返回值 : index_v1
2019-05-27 21:01:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:01:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 391(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:01:58.892(Timestamp)
2019-05-27 21:01:59 -<==    Updates: 1
2019-05-27 21:01:59 -请求地址 : http://localhost:8081/main
2019-05-27 21:01:59 -HTTP METHOD : GET
2019-05-27 21:01:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:01:59 -参数 : []
2019-05-27 21:01:59 -耗时 : 0
2019-05-27 21:01:59 -返回值 : main
2019-05-27 21:02:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:02:00 -HTTP METHOD : GET
2019-05-27 21:02:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:02:00 -参数 : []
2019-05-27 21:02:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:02:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:02:00 -<==      Total: 0
2019-05-27 21:02:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:02:00 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:02:00 -<==      Total: 1
2019-05-27 21:02:00 -耗时 : 177
2019-05-27 21:02:00 -返回值 : com.bootdo.common.utils.PageUtils@61ccaba0
2019-05-27 21:02:01 -请求地址 : http://localhost:8081/main
2019-05-27 21:02:01 -HTTP METHOD : GET
2019-05-27 21:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:02:01 -参数 : []
2019-05-27 21:02:01 -耗时 : 0
2019-05-27 21:02:01 -返回值 : main
2019-05-27 21:02:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 21:02:20 -==> Parameters: 1(Long)
2019-05-27 21:02:20 -<==      Total: 94
2019-05-27 21:02:20 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:02:20 -HTTP METHOD : GET
2019-05-27 21:02:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:02:20 -参数 : []
2019-05-27 21:02:20 -耗时 : 1
2019-05-27 21:02:20 -返回值 : elec/elecInto/elecInto
2019-05-27 21:02:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:02:33 -HTTP METHOD : GET
2019-05-27 21:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:02:33 -参数 : []
2019-05-27 21:02:33 -耗时 : 0
2019-05-27 21:02:33 -返回值 : system/dept/deptTree
2019-05-27 21:02:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:02:33 -HTTP METHOD : GET
2019-05-27 21:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:02:33 -参数 : []
2019-05-27 21:02:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:02:33 -==> Parameters: 
2019-05-27 21:02:33 -<==      Total: 3
2019-05-27 21:02:33 -耗时 : 26
2019-05-27 21:02:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:02:35 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:02:35 -HTTP METHOD : POST
2019-05-27 21:02:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:02:35 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3e2a850c, com.bootdo.elec.vo.ElecVo@969683c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79cc1c4a]
2019-05-27 21:02:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:02:38 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:02:38 -<==      Total: 1
2019-05-27 21:02:38 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:02:38 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:02:38 -<==      Total: 1
2019-05-27 21:02:38 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:02:38 -==> Parameters: 1280.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:02:38 -<==    Updates: 1
2019-05-27 21:04:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:04:19 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:04:19 -<==      Total: 0
2019-05-27 21:04:22 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:04:22 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:04:23 -<==      Total: 1
2019-05-27 21:04:24 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:04:24 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:04:24 -<==    Updates: 1
2019-05-27 21:05:01 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:05:01 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:02:38.301(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:02:38.301(Timestamp), 1(Long), null
2019-05-27 21:05:01 -<==    Updates: 1
2019-05-27 21:05:01 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:05:01 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:04:33.708(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:04:35.023(Timestamp), 1(Long), null
2019-05-27 21:05:01 -<==    Updates: 1
2019-05-27 21:05:01 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:05:01 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 1280.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:04:15.478(Timestamp), 1(Long), null
2019-05-27 21:05:02 -<==    Updates: 1
2019-05-27 21:05:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:05:02 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:05:01.711(Timestamp), 1(Long), null
2019-05-27 21:05:02 -<==    Updates: 1
2019-05-27 21:05:02 -耗时 : 146862
2019-05-27 21:05:02 -返回值 : success
2019-05-27 21:14:48 -Starting BootdoApplication on PC-201905091110 with PID 39064 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 21:14:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 21:14:48 -The following profiles are active: dev
2019-05-27 21:14:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:14:49 CST 2019]; root of context hierarchy
2019-05-27 21:14:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 21:14:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49b1ca25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3c0af8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 21:14:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 21:14:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:14:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 21:14:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:15:00 -Starting service [Tomcat]
2019-05-27 21:15:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 21:15:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 21:15:00 -Initializing Spring embedded WebApplicationContext
2019-05-27 21:15:00 -Root WebApplicationContext: initialization completed in 11671 ms
2019-05-27 21:15:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 21:15:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 21:15:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 21:15:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 21:15:01 -Filter xssFilter was not registered (disabled)
2019-05-27 21:15:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 21:15:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 21:15:01 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 21:15:01 -Servlet dispatcherServlet mapped to [/]
2019-05-27 21:15:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:14:49 CST 2019]; root of context hierarchy
2019-05-27 21:15:06 -Using default implementation for ThreadExecutor
2019-05-27 21:15:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 21:15:06 -Quartz Scheduler v.2.2.1 created.
2019-05-27 21:15:06 -RAMJobStore initialized.
2019-05-27 21:15:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 21:15:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 21:15:06 -Quartz scheduler version: 2.2.1
2019-05-27 21:15:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7f5ce33e
2019-05-27 21:15:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 21:15:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 21:15:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 21:15:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 21:15:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 21:15:10 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 21:15:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 21:15:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 21:15:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 21:15:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 21:15:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 21:15:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 21:15:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 21:15:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 21:15:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 21:15:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 21:15:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 21:15:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 21:15:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 21:15:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 21:15:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 21:15:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:15:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 21:15:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 21:15:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:15:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 21:15:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 21:15:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 21:15:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 21:15:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 21:15:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 21:15:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 21:15:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 21:15:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 21:15:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 21:15:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 21:15:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 21:15:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 21:15:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 21:15:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 21:15:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 21:15:11 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 21:15:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 21:15:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 21:15:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:15:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:15:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 21:15:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 21:15:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 21:15:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:15:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 21:15:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 21:15:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 21:15:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 21:15:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 21:15:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 21:15:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 21:15:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 21:15:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 21:15:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 21:15:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 21:15:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 21:15:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 21:15:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 21:15:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 21:15:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 21:15:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 21:15:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 21:15:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 21:15:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 21:15:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 21:15:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 21:15:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 21:15:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 21:15:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 21:15:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 21:15:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 21:15:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 21:15:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:15:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:15:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 21:15:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 21:15:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 21:15:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 21:15:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 21:15:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 21:15:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:15:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:15:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:15:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 21:15:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 21:15:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:15:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 21:15:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 21:15:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 21:15:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 21:15:11 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 21:15:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 21:15:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:15:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:14:49 CST 2019]; root of context hierarchy
2019-05-27 21:15:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:15:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:15:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:15:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 21:15:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 21:15:15 -Registering beans for JMX exposure on startup
2019-05-27 21:15:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 21:15:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 21:15:15 -Starting beans in phase 2147483647
2019-05-27 21:15:15 -Context refreshed
2019-05-27 21:15:15 -Found 1 custom documentation plugin(s)
2019-05-27 21:15:15 -Scanning for api listing references
2019-05-27 21:15:16 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_1
2019-05-27 21:15:16 -Generating unique operation named: addUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: editUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: listUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_2
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_3
2019-05-27 21:15:16 -Generating unique operation named: saveUsingPOST_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPOST_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPUT_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 21:15:16 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 21:15:16 -Generating unique operation named: addUsingGET_2
2019-05-27 21:15:16 -Generating unique operation named: editUsingGET_2
2019-05-27 21:15:16 -Generating unique operation named: listUsingGET_2
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_4
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_5
2019-05-27 21:15:16 -Generating unique operation named: saveUsingPOST_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPOST_2
2019-05-27 21:15:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: addUsingGET_3
2019-05-27 21:15:16 -Generating unique operation named: editUsingGET_3
2019-05-27 21:15:16 -Generating unique operation named: listUsingGET_3
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_6
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_7
2019-05-27 21:15:16 -Generating unique operation named: saveUsingPOST_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingGET_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPOST_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPUT_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 21:15:16 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 21:15:16 -Generating unique operation named: addUsingGET_4
2019-05-27 21:15:16 -Generating unique operation named: editUsingGET_4
2019-05-27 21:15:16 -Generating unique operation named: listUsingGET_4
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_8
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_9
2019-05-27 21:15:16 -Generating unique operation named: saveUsingPOST_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingGET_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPOST_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPUT_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 21:15:16 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 21:15:16 -Generating unique operation named: ElecUsingGET_1
2019-05-27 21:15:16 -Generating unique operation named: addUsingGET_5
2019-05-27 21:15:16 -Generating unique operation named: editUsingGET_5
2019-05-27 21:15:16 -Generating unique operation named: listUsingGET_5
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_10
2019-05-27 21:15:16 -Generating unique operation named: removeUsingPOST_11
2019-05-27 21:15:16 -Generating unique operation named: saveUsingPOST_5
2019-05-27 21:15:16 -Generating unique operation named: updateUsingGET_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPOST_5
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPUT_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 21:15:16 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_6
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_6
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_6
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_7
2019-05-27 21:15:17 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_7
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_12
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_13
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingGET_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPUT_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 21:15:17 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 21:15:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_7
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_8
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_8
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_14
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_15
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingGET_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_8
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPUT_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 21:15:17 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_8
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_9
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_9
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_16
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_17
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_8
2019-05-27 21:15:17 -Generating unique operation named: updateUsingGET_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_9
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPUT_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 21:15:17 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_9
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_10
2019-05-27 21:15:17 -Generating unique operation named: infoUsingGET_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingPOST_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingPUT_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 21:15:17 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_10
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_18
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_19
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_9
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_10
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_11
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_20
2019-05-27 21:15:17 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_10
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_11
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_12
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_21
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_10
2019-05-27 21:15:17 -Generating unique operation named: treeUsingGET_1
2019-05-27 21:15:17 -Generating unique operation named: treeUsingGET_2
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_11
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_11
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_12
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_13
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_22
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_23
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_12
2019-05-27 21:15:17 -Generating unique operation named: addUsingGET_12
2019-05-27 21:15:17 -Generating unique operation named: editUsingGET_13
2019-05-27 21:15:17 -Generating unique operation named: listUsingGET_14
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_24
2019-05-27 21:15:17 -Generating unique operation named: removeUsingPOST_25
2019-05-27 21:15:17 -Generating unique operation named: saveUsingPOST_11
2019-05-27 21:15:17 -Generating unique operation named: updateUsingGET_8
2019-05-27 21:15:17 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPOST_13
2019-05-27 21:15:17 -Generating unique operation named: updateUsingPUT_8
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 21:15:18 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 21:15:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 21:15:18 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_13
2019-05-27 21:15:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_14
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_15
2019-05-27 21:15:18 -Generating unique operation named: printEditUsingGET_1
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_26
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingGET_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_14
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPUT_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 21:15:18 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_14
2019-05-27 21:15:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_15
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_16
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_13
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_14
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_15
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_17
2019-05-27 21:15:18 -Generating unique operation named: listUsingHEAD_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingPOST_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingPUT_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingPATCH_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingDELETE_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 21:15:18 -Generating unique operation named: listUsingTRACE_1
2019-05-27 21:15:18 -Generating unique operation named: countDDUsingGET_1
2019-05-27 21:15:18 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 21:15:18 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_15
2019-05-27 21:15:18 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_16
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_18
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_27
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_15
2019-05-27 21:15:18 -Generating unique operation named: treeUsingGET_3
2019-05-27 21:15:18 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_16
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_16
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_17
2019-05-27 21:15:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_19
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_28
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_29
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_16
2019-05-27 21:15:18 -Generating unique operation named: updateUsingGET_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_17
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPUT_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 21:15:18 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 21:15:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_17
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_18
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_20
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_30
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_31
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_17
2019-05-27 21:15:18 -Generating unique operation named: updateUsingGET_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_18
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPUT_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 21:15:18 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 21:15:18 -Generating unique operation named: addUsingGET_18
2019-05-27 21:15:18 -Generating unique operation named: editUsingGET_19
2019-05-27 21:15:18 -Generating unique operation named: listUsingGET_21
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_32
2019-05-27 21:15:18 -Generating unique operation named: removeUsingPOST_33
2019-05-27 21:15:18 -Generating unique operation named: saveUsingPOST_18
2019-05-27 21:15:18 -Generating unique operation named: updateUsingGET_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPOST_19
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPUT_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 21:15:18 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 21:15:18 -Starting Quartz Scheduler now
2019-05-27 21:15:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 21:15:18 -Starting...
2019-05-27 21:15:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:15:18 -Started.
2019-05-27 21:15:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 21:15:19 -Using a shared selector for servlet write/read
2019-05-27 21:15:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 21:15:19 -Started BootdoApplication in 31.412 seconds (JVM running for 32.249)
2019-05-27 21:15:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 21:15:19 -==> Parameters: 
2019-05-27 21:15:19 -<==      Total: 1
2019-05-27 21:16:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 21:16:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 21:16:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-27 21:16:07 -Enabling session validation scheduler...
2019-05-27 21:16:07 -请求地址 : http://localhost:8081/login;JSESSIONID=375b1dee-9d7e-4b1a-a42e-8e1013cdac57
2019-05-27 21:16:07 -HTTP METHOD : GET
2019-05-27 21:16:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:16:07 -参数 : [{}]
2019-05-27 21:16:07 -耗时 : 4
2019-05-27 21:16:07 -返回值 : login
2019-05-27 21:16:09 -请求地址 : http://localhost:8081/getVerify
2019-05-27 21:16:09 -HTTP METHOD : GET
2019-05-27 21:16:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 21:16:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b59acf4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7be51e50]
2019-05-27 21:16:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 21:16:21 -5429
2019-05-27 21:16:23 -耗时 : 13633
2019-05-27 21:16:23 -返回值 : null
2019-05-27 21:16:31 -请求地址 : http://localhost:8081/login
2019-05-27 21:16:31 -HTTP METHOD : POST
2019-05-27 21:16:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 21:16:31 -参数 : [admin, 111111, 5429, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b22708a]
2019-05-27 21:16:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 21:16:31 -==> Parameters: admin(String)
2019-05-27 21:16:31 -<==      Total: 1
2019-05-27 21:16:31 -耗时 : 324
2019-05-27 21:16:31 -返回值 : {msg=操作成功, code=0}
2019-05-27 21:16:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 21:16:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:31 -==> Parameters: 1(Long), admin(String), 登录(String), 324(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 21:16:31.625(Timestamp)
2019-05-27 21:16:31 -请求地址 : http://localhost:8081/index
2019-05-27 21:16:31 -HTTP METHOD : GET
2019-05-27 21:16:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:16:31 -参数 : [{}]
2019-05-27 21:16:31 -<==    Updates: 1
2019-05-27 21:16:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:16:32 -==> Parameters: 1(Long)
2019-05-27 21:16:32 -<==      Total: 50
2019-05-27 21:16:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:16:32 -==> Parameters: 138(Long)
2019-05-27 21:16:32 -<==      Total: 1
2019-05-27 21:16:32 -耗时 : 363
2019-05-27 21:16:32 -返回值 : index_v1
2019-05-27 21:16:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 363(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:16:32.351(Timestamp)
2019-05-27 21:16:32 -<==    Updates: 1
2019-05-27 21:16:32 -请求地址 : http://localhost:8081/main
2019-05-27 21:16:32 -HTTP METHOD : GET
2019-05-27 21:16:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:16:32 -参数 : []
2019-05-27 21:16:32 -耗时 : 1
2019-05-27 21:16:32 -返回值 : main
2019-05-27 21:16:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:16:33 -HTTP METHOD : GET
2019-05-27 21:16:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:16:33 -参数 : []
2019-05-27 21:16:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:16:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:16:33 -<==      Total: 0
2019-05-27 21:16:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:16:33 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:16:33 -<==      Total: 1
2019-05-27 21:16:33 -耗时 : 173
2019-05-27 21:16:33 -返回值 : com.bootdo.common.utils.PageUtils@7a8fcf76
2019-05-27 21:16:33 -请求地址 : http://localhost:8081/main
2019-05-27 21:16:33 -HTTP METHOD : GET
2019-05-27 21:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:16:33 -参数 : []
2019-05-27 21:16:33 -耗时 : 0
2019-05-27 21:16:33 -返回值 : main
2019-05-27 21:16:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 21:16:42 -==> Parameters: 1(Long)
2019-05-27 21:16:42 -<==      Total: 94
2019-05-27 21:16:42 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:16:42 -HTTP METHOD : GET
2019-05-27 21:16:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:16:42 -参数 : []
2019-05-27 21:16:42 -耗时 : 0
2019-05-27 21:16:42 -返回值 : elec/elecInto/elecInto
2019-05-27 21:16:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:16:53 -HTTP METHOD : GET
2019-05-27 21:16:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:16:53 -参数 : []
2019-05-27 21:16:53 -耗时 : 1
2019-05-27 21:16:53 -返回值 : system/dept/deptTree
2019-05-27 21:16:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:16:53 -HTTP METHOD : GET
2019-05-27 21:16:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:16:53 -参数 : []
2019-05-27 21:16:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:16:53 -==> Parameters: 
2019-05-27 21:16:53 -<==      Total: 3
2019-05-27 21:16:53 -耗时 : 41
2019-05-27 21:16:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:16:55 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:16:55 -HTTP METHOD : POST
2019-05-27 21:16:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:16:55 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@43c86eb4, com.bootdo.elec.vo.ElecVo@6c4d6017, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d4e565c]
2019-05-27 21:16:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:16:57 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:16:57 -<==      Total: 1
2019-05-27 21:16:57 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:16:57 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:16:57 -<==      Total: 1
2019-05-27 21:16:57 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:16:57 -==> Parameters: 20.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:16:57 -<==    Updates: 1
2019-05-27 21:16:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:16:57 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:16:57 -<==      Total: 0
2019-05-27 21:16:57 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:16:57 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:16:57 -<==      Total: 1
2019-05-27 21:16:57 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:16:57 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:16:57 -<==    Updates: 1
2019-05-27 21:16:58 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:58 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:16:57.936(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:16:57.936(Timestamp), 1(Long), null
2019-05-27 21:16:58 -<==    Updates: 1
2019-05-27 21:16:58 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:58 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:16:58.013(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:16:58.013(Timestamp), 1(Long), null
2019-05-27 21:16:58 -<==    Updates: 1
2019-05-27 21:16:58 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:58 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:16:57.936(Timestamp), 1(Long), null
2019-05-27 21:16:58 -<==    Updates: 1
2019-05-27 21:16:58 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:16:58 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:16:58.013(Timestamp), 1(Long), null
2019-05-27 21:16:58 -<==    Updates: 1
2019-05-27 21:16:58 -耗时 : 3474
2019-05-27 21:16:58 -返回值 : success
2019-05-27 21:18:50 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:18:50 -HTTP METHOD : POST
2019-05-27 21:18:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:18:50 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2e1a731, com.bootdo.elec.vo.ElecVo@1825cc1a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@28d01752]
2019-05-27 21:18:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:18:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:18:50 -<==      Total: 1
2019-05-27 21:18:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:18:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:18:50 -<==      Total: 1
2019-05-27 21:18:50 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:18:50 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:18:50 -<==    Updates: 1
2019-05-27 21:18:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:18:50 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:18:50 -<==      Total: 0
2019-05-27 21:18:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:18:50 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:18:50 -<==      Total: 1
2019-05-27 21:18:50 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:18:50 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:18:50 -<==    Updates: 1
2019-05-27 21:18:51 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:18:51 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:18:50.94(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:18:50.94(Timestamp), 1(Long), null
2019-05-27 21:18:51 -<==    Updates: 1
2019-05-27 21:18:51 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:18:51 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:18:51.002(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:18:51.002(Timestamp), 1(Long), null
2019-05-27 21:18:51 -<==    Updates: 1
2019-05-27 21:18:51 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:18:51 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:18:50.94(Timestamp), 1(Long), null
2019-05-27 21:18:51 -<==    Updates: 1
2019-05-27 21:18:51 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:18:51 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:18:51.002(Timestamp), 1(Long), null
2019-05-27 21:18:51 -<==    Updates: 1
2019-05-27 21:18:51 -耗时 : 326
2019-05-27 21:18:51 -返回值 : success
2019-05-27 21:21:14 -请求地址 : http://localhost:8081/index
2019-05-27 21:21:14 -HTTP METHOD : GET
2019-05-27 21:21:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:21:14 -参数 : [{}]
2019-05-27 21:21:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:21:14 -==> Parameters: 1(Long)
2019-05-27 21:21:14 -<==      Total: 50
2019-05-27 21:21:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:21:14 -==> Parameters: 138(Long)
2019-05-27 21:21:14 -<==      Total: 1
2019-05-27 21:21:14 -耗时 : 81
2019-05-27 21:21:14 -返回值 : index_v1
2019-05-27 21:21:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:21:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 81(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:21:14.352(Timestamp)
2019-05-27 21:21:14 -请求地址 : http://localhost:8081/main
2019-05-27 21:21:14 -HTTP METHOD : GET
2019-05-27 21:21:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:21:14 -参数 : []
2019-05-27 21:21:14 -耗时 : 0
2019-05-27 21:21:14 -返回值 : main
2019-05-27 21:21:14 -<==    Updates: 1
2019-05-27 21:21:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:21:15 -HTTP METHOD : GET
2019-05-27 21:21:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:21:15 -参数 : []
2019-05-27 21:21:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:21:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:21:15 -<==      Total: 0
2019-05-27 21:21:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:21:15 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:21:15 -<==      Total: 1
2019-05-27 21:21:15 -耗时 : 6
2019-05-27 21:21:15 -返回值 : com.bootdo.common.utils.PageUtils@753586ac
2019-05-27 21:21:15 -请求地址 : http://localhost:8081/main
2019-05-27 21:21:15 -HTTP METHOD : GET
2019-05-27 21:21:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:21:15 -参数 : []
2019-05-27 21:21:15 -耗时 : 1
2019-05-27 21:21:15 -返回值 : main
2019-05-27 21:21:17 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:21:17 -HTTP METHOD : GET
2019-05-27 21:21:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:21:17 -参数 : []
2019-05-27 21:21:17 -耗时 : 1
2019-05-27 21:21:17 -返回值 : elec/elecInto/elecInto
2019-05-27 21:21:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:21:26 -HTTP METHOD : GET
2019-05-27 21:21:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:21:26 -参数 : []
2019-05-27 21:21:26 -耗时 : 1
2019-05-27 21:21:26 -返回值 : system/dept/deptTree
2019-05-27 21:21:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:21:26 -HTTP METHOD : GET
2019-05-27 21:21:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:21:26 -参数 : []
2019-05-27 21:21:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:21:26 -==> Parameters: 
2019-05-27 21:21:26 -<==      Total: 3
2019-05-27 21:21:26 -耗时 : 3
2019-05-27 21:21:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:21:27 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:21:27 -HTTP METHOD : POST
2019-05-27 21:21:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:21:27 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7d2f9ccb, com.bootdo.elec.vo.ElecVo@2d63e6f2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e053b8b]
2019-05-27 21:21:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:21:27 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:21:27 -<==      Total: 1
2019-05-27 21:21:27 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:21:27 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:21:27 -<==      Total: 1
2019-05-27 21:21:27 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:21:27 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:21:27 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:21:27 -<==      Total: 0
2019-05-27 21:21:27 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:21:27 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:21:27 -<==      Total: 1
2019-05-27 21:21:27 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:21:27 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:21:27 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:21:27.671(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:21:27.671(Timestamp), 1(Long), null
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:21:27 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:21:27.807(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:21:27.807(Timestamp), 1(Long), null
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:21:27 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:21:27.671(Timestamp), 1(Long), null
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:21:27 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:21:27.807(Timestamp), 1(Long), null
2019-05-27 21:21:27 -<==    Updates: 1
2019-05-27 21:21:27 -耗时 : 376
2019-05-27 21:21:27 -返回值 : success
2019-05-27 21:22:35 -Starting BootdoApplication on PC-201905091110 with PID 21004 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 21:22:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 21:22:35 -The following profiles are active: dev
2019-05-27 21:22:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b3a45f1: startup date [Mon May 27 21:22:35 CST 2019]; root of context hierarchy
2019-05-27 21:22:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 21:22:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8b84c4e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7dddf387] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 21:22:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 21:22:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:22:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 21:22:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:22:49 -Starting service [Tomcat]
2019-05-27 21:22:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 21:22:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 21:22:49 -Initializing Spring embedded WebApplicationContext
2019-05-27 21:22:49 -Root WebApplicationContext: initialization completed in 13634 ms
2019-05-27 21:22:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 21:22:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 21:22:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 21:22:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 21:22:50 -Filter xssFilter was not registered (disabled)
2019-05-27 21:22:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 21:22:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 21:22:50 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 21:22:50 -Servlet dispatcherServlet mapped to [/]
2019-05-27 21:22:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b3a45f1: startup date [Mon May 27 21:22:35 CST 2019]; root of context hierarchy
2019-05-27 21:22:56 -Using default implementation for ThreadExecutor
2019-05-27 21:22:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 21:22:56 -Quartz Scheduler v.2.2.1 created.
2019-05-27 21:22:56 -RAMJobStore initialized.
2019-05-27 21:22:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 21:22:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 21:22:56 -Quartz scheduler version: 2.2.1
2019-05-27 21:22:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1700d089
2019-05-27 21:22:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 21:22:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 21:23:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 21:23:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 21:23:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 21:23:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 21:23:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 21:23:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 21:23:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 21:23:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 21:23:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 21:23:01 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 21:23:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 21:23:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 21:23:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 21:23:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 21:23:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 21:23:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 21:23:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:23:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:23:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 21:23:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 21:23:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 21:23:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 21:23:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 21:23:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 21:23:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 21:23:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 21:23:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 21:23:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 21:23:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 21:23:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 21:23:01 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 21:23:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 21:23:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 21:23:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:23:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:23:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 21:23:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 21:23:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 21:23:01 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 21:23:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 21:23:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 21:23:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 21:23:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 21:23:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 21:23:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 21:23:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 21:23:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 21:23:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 21:23:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 21:23:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 21:23:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 21:23:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 21:23:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 21:23:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 21:23:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 21:23:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 21:23:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 21:23:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 21:23:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 21:23:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 21:23:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 21:23:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 21:23:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 21:23:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 21:23:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 21:23:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:23:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:23:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 21:23:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 21:23:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 21:23:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 21:23:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 21:23:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 21:23:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:23:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 21:23:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 21:23:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:23:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:23:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:23:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 21:23:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 21:23:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 21:23:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 21:23:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 21:23:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 21:23:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:23:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b3a45f1: startup date [Mon May 27 21:22:35 CST 2019]; root of context hierarchy
2019-05-27 21:23:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:23:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:23:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:23:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 21:23:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 21:23:07 -Registering beans for JMX exposure on startup
2019-05-27 21:23:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 21:23:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 21:23:07 -Starting beans in phase 2147483647
2019-05-27 21:23:07 -Context refreshed
2019-05-27 21:23:07 -Found 1 custom documentation plugin(s)
2019-05-27 21:23:07 -Scanning for api listing references
2019-05-27 21:23:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_1
2019-05-27 21:23:08 -Generating unique operation named: addUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: editUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: listUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_2
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_3
2019-05-27 21:23:08 -Generating unique operation named: saveUsingPOST_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPOST_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPUT_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 21:23:08 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 21:23:08 -Generating unique operation named: addUsingGET_2
2019-05-27 21:23:08 -Generating unique operation named: editUsingGET_2
2019-05-27 21:23:08 -Generating unique operation named: listUsingGET_2
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_4
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_5
2019-05-27 21:23:08 -Generating unique operation named: saveUsingPOST_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPOST_2
2019-05-27 21:23:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: addUsingGET_3
2019-05-27 21:23:08 -Generating unique operation named: editUsingGET_3
2019-05-27 21:23:08 -Generating unique operation named: listUsingGET_3
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_6
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_7
2019-05-27 21:23:08 -Generating unique operation named: saveUsingPOST_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingGET_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPOST_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPUT_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 21:23:08 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 21:23:08 -Generating unique operation named: addUsingGET_4
2019-05-27 21:23:08 -Generating unique operation named: editUsingGET_4
2019-05-27 21:23:08 -Generating unique operation named: listUsingGET_4
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_8
2019-05-27 21:23:08 -Generating unique operation named: removeUsingPOST_9
2019-05-27 21:23:08 -Generating unique operation named: saveUsingPOST_4
2019-05-27 21:23:08 -Generating unique operation named: updateUsingGET_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPOST_4
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPUT_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 21:23:08 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 21:23:08 -Generating unique operation named: ElecUsingGET_1
2019-05-27 21:23:08 -Generating unique operation named: addUsingGET_5
2019-05-27 21:23:08 -Generating unique operation named: editUsingGET_5
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_5
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_10
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_11
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingGET_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPUT_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 21:23:09 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_6
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_6
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_6
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_7
2019-05-27 21:23:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_7
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_12
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_13
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingGET_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPUT_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 21:23:09 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 21:23:09 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_7
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_8
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_8
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_14
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_15
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingGET_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_8
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPUT_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 21:23:09 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_8
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_9
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_9
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_16
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_17
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_8
2019-05-27 21:23:09 -Generating unique operation named: updateUsingGET_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_9
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPUT_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 21:23:09 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_9
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_10
2019-05-27 21:23:09 -Generating unique operation named: infoUsingGET_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingPOST_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingPUT_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 21:23:09 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_10
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_18
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_19
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_9
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_10
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_11
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_20
2019-05-27 21:23:09 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_10
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_11
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_12
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_21
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_10
2019-05-27 21:23:09 -Generating unique operation named: treeUsingGET_1
2019-05-27 21:23:09 -Generating unique operation named: treeUsingGET_2
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_11
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_11
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_12
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_13
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_22
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_23
2019-05-27 21:23:09 -Generating unique operation named: updateUsingPOST_12
2019-05-27 21:23:09 -Generating unique operation named: addUsingGET_12
2019-05-27 21:23:09 -Generating unique operation named: editUsingGET_13
2019-05-27 21:23:09 -Generating unique operation named: listUsingGET_14
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_24
2019-05-27 21:23:09 -Generating unique operation named: removeUsingPOST_25
2019-05-27 21:23:09 -Generating unique operation named: saveUsingPOST_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingGET_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_13
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPUT_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 21:23:10 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_13
2019-05-27 21:23:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_14
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_15
2019-05-27 21:23:10 -Generating unique operation named: printEditUsingGET_1
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_26
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_12
2019-05-27 21:23:10 -Generating unique operation named: updateUsingGET_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_14
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPUT_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 21:23:10 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_14
2019-05-27 21:23:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_15
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_16
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_13
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_14
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_15
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_17
2019-05-27 21:23:10 -Generating unique operation named: listUsingHEAD_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingPOST_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingPUT_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingPATCH_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingDELETE_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 21:23:10 -Generating unique operation named: listUsingTRACE_1
2019-05-27 21:23:10 -Generating unique operation named: countDDUsingGET_1
2019-05-27 21:23:10 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 21:23:10 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_15
2019-05-27 21:23:10 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_16
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_18
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_27
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_15
2019-05-27 21:23:10 -Generating unique operation named: treeUsingGET_3
2019-05-27 21:23:10 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_16
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_16
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_17
2019-05-27 21:23:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_19
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_28
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_29
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_16
2019-05-27 21:23:10 -Generating unique operation named: updateUsingGET_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_17
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPUT_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 21:23:10 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 21:23:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_17
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_18
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_20
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_30
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_31
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_17
2019-05-27 21:23:10 -Generating unique operation named: updateUsingGET_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_18
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPUT_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 21:23:10 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 21:23:10 -Generating unique operation named: addUsingGET_18
2019-05-27 21:23:10 -Generating unique operation named: editUsingGET_19
2019-05-27 21:23:10 -Generating unique operation named: listUsingGET_21
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_32
2019-05-27 21:23:10 -Generating unique operation named: removeUsingPOST_33
2019-05-27 21:23:10 -Generating unique operation named: saveUsingPOST_18
2019-05-27 21:23:10 -Generating unique operation named: updateUsingGET_12
2019-05-27 21:23:10 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 21:23:10 -Generating unique operation named: updateUsingPOST_19
2019-05-27 21:23:11 -Generating unique operation named: updateUsingPUT_12
2019-05-27 21:23:11 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 21:23:11 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 21:23:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 21:23:11 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 21:23:11 -Starting Quartz Scheduler now
2019-05-27 21:23:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 21:23:11 -Starting...
2019-05-27 21:23:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:23:11 -Started.
2019-05-27 21:23:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 21:23:11 -Using a shared selector for servlet write/read
2019-05-27 21:23:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 21:23:11 -Started BootdoApplication in 37.838 seconds (JVM running for 39.421)
2019-05-27 21:23:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 21:23:11 -==> Parameters: 
2019-05-27 21:23:11 -<==      Total: 1
2019-05-27 21:24:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 21:24:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 21:24:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 21:24:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-05-27 21:24:13 -Enabling session validation scheduler...
2019-05-27 21:24:13 -请求地址 : http://localhost:8081/login;JSESSIONID=c40d4db5-d38b-4e02-a9a5-3e12ad1af800
2019-05-27 21:24:13 -HTTP METHOD : GET
2019-05-27 21:24:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:24:13 -参数 : [{}]
2019-05-27 21:24:13 -耗时 : 8
2019-05-27 21:24:13 -返回值 : login
2019-05-27 21:24:15 -请求地址 : http://localhost:8081/getVerify
2019-05-27 21:24:15 -HTTP METHOD : GET
2019-05-27 21:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 21:24:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a16973a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f14161c]
2019-05-27 21:24:22 -1475
2019-05-27 21:24:22 -耗时 : 7605
2019-05-27 21:24:22 -返回值 : null
2019-05-27 21:24:27 -请求地址 : http://localhost:8081/login
2019-05-27 21:24:27 -HTTP METHOD : POST
2019-05-27 21:24:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 21:24:27 -参数 : [admin, 111111, 1475, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ba4fb82]
2019-05-27 21:24:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 21:24:27 -==> Parameters: admin(String)
2019-05-27 21:24:27 -<==      Total: 1
2019-05-27 21:24:27 -耗时 : 269
2019-05-27 21:24:27 -返回值 : {msg=操作成功, code=0}
2019-05-27 21:24:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 21:24:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:24:27 -==> Parameters: 1(Long), admin(String), 登录(String), 269(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 21:24:27.787(Timestamp)
2019-05-27 21:24:28 -<==    Updates: 1
2019-05-27 21:24:28 -请求地址 : http://localhost:8081/index
2019-05-27 21:24:28 -HTTP METHOD : GET
2019-05-27 21:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:24:28 -参数 : [{}]
2019-05-27 21:24:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:24:28 -==> Parameters: 1(Long)
2019-05-27 21:24:28 -<==      Total: 50
2019-05-27 21:24:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:24:28 -==> Parameters: 138(Long)
2019-05-27 21:24:28 -<==      Total: 1
2019-05-27 21:24:28 -耗时 : 315
2019-05-27 21:24:28 -返回值 : index_v1
2019-05-27 21:24:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:24:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 316(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:24:28.797(Timestamp)
2019-05-27 21:24:28 -<==    Updates: 1
2019-05-27 21:24:28 -请求地址 : http://localhost:8081/main
2019-05-27 21:24:28 -HTTP METHOD : GET
2019-05-27 21:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:24:28 -参数 : []
2019-05-27 21:24:28 -耗时 : 1
2019-05-27 21:24:28 -返回值 : main
2019-05-27 21:24:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:24:29 -HTTP METHOD : GET
2019-05-27 21:24:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:24:29 -参数 : []
2019-05-27 21:24:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:24:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:24:29 -<==      Total: 0
2019-05-27 21:24:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:24:29 -请求地址 : http://localhost:8081/main
2019-05-27 21:24:29 -HTTP METHOD : GET
2019-05-27 21:24:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:24:29 -参数 : []
2019-05-27 21:24:29 -耗时 : 1
2019-05-27 21:24:29 -返回值 : main
2019-05-27 21:24:29 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:24:29 -<==      Total: 1
2019-05-27 21:24:29 -耗时 : 182
2019-05-27 21:24:29 -返回值 : com.bootdo.common.utils.PageUtils@28da361c
2019-05-27 21:24:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 21:24:45 -==> Parameters: 1(Long)
2019-05-27 21:24:45 -<==      Total: 94
2019-05-27 21:24:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-27 21:24:45 -HTTP METHOD : GET
2019-05-27 21:24:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-27 21:24:45 -参数 : []
2019-05-27 21:24:45 -耗时 : 13
2019-05-27 21:24:45 -返回值 : charts/tableElecYY
2019-05-27 21:24:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-27 21:24:46 -HTTP METHOD : GET
2019-05-27 21:24:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-27 21:24:46 -参数 : [userType]
2019-05-27 21:24:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-27 21:24:46 -==> Parameters: userType(String)
2019-05-27 21:24:46 -<==      Total: 4
2019-05-27 21:24:46 -耗时 : 193
2019-05-27 21:24:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-27 21:24:52 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:24:52 -HTTP METHOD : GET
2019-05-27 21:24:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:24:52 -参数 : []
2019-05-27 21:24:52 -耗时 : 0
2019-05-27 21:24:52 -返回值 : elec/elecInto/elecInto
2019-05-27 21:25:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:25:02 -HTTP METHOD : GET
2019-05-27 21:25:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:25:02 -参数 : []
2019-05-27 21:25:02 -耗时 : 1
2019-05-27 21:25:02 -返回值 : system/dept/deptTree
2019-05-27 21:25:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:25:02 -HTTP METHOD : GET
2019-05-27 21:25:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:25:02 -参数 : []
2019-05-27 21:25:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:25:02 -==> Parameters: 
2019-05-27 21:25:02 -<==      Total: 3
2019-05-27 21:25:02 -耗时 : 27
2019-05-27 21:25:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:25:04 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:25:04 -HTTP METHOD : POST
2019-05-27 21:25:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:25:04 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@760f42dc, com.bootdo.elec.vo.ElecVo@5a0f94a4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@57d58e58]
2019-05-27 21:25:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:25:06 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:25:06 -<==      Total: 1
2019-05-27 21:25:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:25:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:25:50 -<==      Total: 1
2019-05-27 21:25:53 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:25:53 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:25:53 -<==    Updates: 1
2019-05-27 21:27:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:27:24 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:27:24 -<==      Total: 0
2019-05-27 21:27:25 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:27:25 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:27:25 -<==      Total: 1
2019-05-27 21:27:26 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:27:26 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:27:26 -<==    Updates: 1
2019-05-27 21:27:38 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:27:38 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:26:20.325(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:26:45.273(Timestamp), 1(Long), null
2019-05-27 21:27:38 -<==    Updates: 1
2019-05-27 21:27:38 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:27:38 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:27:28.421(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:27:38.731(Timestamp), 1(Long), null
2019-05-27 21:27:38 -<==    Updates: 1
2019-05-27 21:27:38 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:27:38 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:27:18.226(Timestamp), 1(Long), null
2019-05-27 21:27:39 -<==    Updates: 1
2019-05-27 21:27:39 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:27:39 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:27:38.731(Timestamp), 1(Long), null
2019-05-27 21:27:39 -<==    Updates: 1
2019-05-27 21:27:39 -耗时 : 154302
2019-05-27 21:27:39 -返回值 : success
2019-05-27 21:29:24 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:29:24 -HTTP METHOD : POST
2019-05-27 21:29:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:29:24 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@16eb32b, com.bootdo.elec.vo.ElecVo@2067aafe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@24d234ad]
2019-05-27 21:29:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:29:24 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:29:24 -<==      Total: 1
2019-05-27 21:30:13 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:30:13 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:30:13 -<==      Total: 1
2019-05-27 21:30:28 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:30:28 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:30:28 -<==    Updates: 1
2019-05-27 21:30:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:30:52 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:30:52 -<==      Total: 0
2019-05-27 21:30:55 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:30:55 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:30:55 -<==      Total: 1
2019-05-27 21:30:57 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:30:57 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:30:57 -<==    Updates: 1
2019-05-27 21:31:46 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:31:46 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:30:34.073(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:30:36.619(Timestamp), 1(Long), null
2019-05-27 21:31:47 -<==    Updates: 1
2019-05-27 21:31:47 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:31:47 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:31:15.144(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:31:16.621(Timestamp), 1(Long), null
2019-05-27 21:31:47 -<==    Updates: 1
2019-05-27 21:31:47 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:31:47 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:30:43.994(Timestamp), 1(Long), null
2019-05-27 21:31:47 -<==    Updates: 1
2019-05-27 21:31:47 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:31:47 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:31:25.675(Timestamp), 1(Long), null
2019-05-27 21:31:47 -<==    Updates: 1
2019-05-27 21:31:47 -耗时 : 142632
2019-05-27 21:31:47 -返回值 : success
2019-05-27 21:39:07 -Starting BootdoApplication on PC-201905091110 with PID 17144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 21:39:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 21:39:07 -The following profiles are active: dev
2019-05-27 21:39:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:39:07 CST 2019]; root of context hierarchy
2019-05-27 21:39:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 21:39:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae562c15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a0af5abc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 21:39:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 21:39:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:39:14 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 21:39:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:39:14 -Starting service [Tomcat]
2019-05-27 21:39:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 21:39:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 21:39:15 -Initializing Spring embedded WebApplicationContext
2019-05-27 21:39:15 -Root WebApplicationContext: initialization completed in 7401 ms
2019-05-27 21:39:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 21:39:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 21:39:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 21:39:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 21:39:16 -Filter xssFilter was not registered (disabled)
2019-05-27 21:39:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 21:39:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 21:39:16 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 21:39:16 -Servlet dispatcherServlet mapped to [/]
2019-05-27 21:39:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:39:07 CST 2019]; root of context hierarchy
2019-05-27 21:39:20 -Using default implementation for ThreadExecutor
2019-05-27 21:39:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 21:39:20 -Quartz Scheduler v.2.2.1 created.
2019-05-27 21:39:20 -RAMJobStore initialized.
2019-05-27 21:39:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 21:39:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 21:39:20 -Quartz scheduler version: 2.2.1
2019-05-27 21:39:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66a82a13
2019-05-27 21:39:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 21:39:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 21:39:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 21:39:24 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 21:39:24 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 21:39:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 21:39:24 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 21:39:24 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 21:39:24 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 21:39:24 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 21:39:24 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 21:39:24 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 21:39:24 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:39:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 21:39:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 21:39:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 21:39:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 21:39:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 21:39:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 21:39:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:39:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 21:39:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:39:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 21:39:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 21:39:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 21:39:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 21:39:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 21:39:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 21:39:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 21:39:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 21:39:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 21:39:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 21:39:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 21:39:24 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 21:39:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 21:39:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 21:39:24 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 21:39:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 21:39:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 21:39:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 21:39:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 21:39:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 21:39:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 21:39:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 21:39:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 21:39:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 21:39:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 21:39:24 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 21:39:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 21:39:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 21:39:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 21:39:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 21:39:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 21:39:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 21:39:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 21:39:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 21:39:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 21:39:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 21:39:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 21:39:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 21:39:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 21:39:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 21:39:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 21:39:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 21:39:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 21:39:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 21:39:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:39:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 21:39:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:39:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 21:39:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 21:39:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 21:39:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 21:39:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 21:39:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:39:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 21:39:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:39:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:39:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 21:39:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 21:39:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:39:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 21:39:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 21:39:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 21:39:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 21:39:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 21:39:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 21:39:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:39:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 27 21:39:07 CST 2019]; root of context hierarchy
2019-05-27 21:39:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:39:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:39:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:39:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 21:39:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 21:39:27 -Registering beans for JMX exposure on startup
2019-05-27 21:39:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 21:39:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 21:39:27 -Starting beans in phase 2147483647
2019-05-27 21:39:27 -Context refreshed
2019-05-27 21:39:28 -Found 1 custom documentation plugin(s)
2019-05-27 21:39:28 -Scanning for api listing references
2019-05-27 21:39:28 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 21:39:28 -Generating unique operation named: removeUsingPOST_1
2019-05-27 21:39:28 -Generating unique operation named: addUsingGET_1
2019-05-27 21:39:28 -Generating unique operation named: editUsingGET_1
2019-05-27 21:39:28 -Generating unique operation named: listUsingGET_1
2019-05-27 21:39:28 -Generating unique operation named: removeUsingPOST_2
2019-05-27 21:39:28 -Generating unique operation named: removeUsingPOST_3
2019-05-27 21:39:28 -Generating unique operation named: saveUsingPOST_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingGET_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingPOST_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingPUT_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 21:39:28 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 21:39:28 -Generating unique operation named: addUsingGET_2
2019-05-27 21:39:28 -Generating unique operation named: editUsingGET_2
2019-05-27 21:39:28 -Generating unique operation named: listUsingGET_2
2019-05-27 21:39:28 -Generating unique operation named: removeUsingPOST_4
2019-05-27 21:39:28 -Generating unique operation named: removeUsingPOST_5
2019-05-27 21:39:28 -Generating unique operation named: saveUsingPOST_2
2019-05-27 21:39:28 -Generating unique operation named: updateUsingPOST_2
2019-05-27 21:39:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 21:39:28 -Generating unique operation named: addUsingGET_3
2019-05-27 21:39:28 -Generating unique operation named: editUsingGET_3
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_3
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_6
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_7
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_4
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_4
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_4
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_8
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_9
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 21:39:29 -Generating unique operation named: ElecUsingGET_1
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_5
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_5
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_5
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_10
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_11
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_6
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_6
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_6
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_7
2019-05-27 21:39:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_7
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_12
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_13
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 21:39:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_7
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_8
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_8
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_14
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_15
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_8
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_8
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_9
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_9
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_16
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_17
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_8
2019-05-27 21:39:29 -Generating unique operation named: updateUsingGET_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_9
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPUT_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 21:39:29 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_9
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_10
2019-05-27 21:39:29 -Generating unique operation named: infoUsingGET_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingPOST_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingPUT_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 21:39:29 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_10
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_18
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_19
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_9
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_10
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_11
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_20
2019-05-27 21:39:29 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_10
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_11
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_12
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_21
2019-05-27 21:39:29 -Generating unique operation named: saveUsingPOST_10
2019-05-27 21:39:29 -Generating unique operation named: treeUsingGET_1
2019-05-27 21:39:29 -Generating unique operation named: treeUsingGET_2
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_11
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_11
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_12
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_13
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_22
2019-05-27 21:39:29 -Generating unique operation named: removeUsingPOST_23
2019-05-27 21:39:29 -Generating unique operation named: updateUsingPOST_12
2019-05-27 21:39:29 -Generating unique operation named: addUsingGET_12
2019-05-27 21:39:29 -Generating unique operation named: editUsingGET_13
2019-05-27 21:39:29 -Generating unique operation named: listUsingGET_14
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_24
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_25
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingGET_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_13
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPUT_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 21:39:30 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_13
2019-05-27 21:39:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_14
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_15
2019-05-27 21:39:30 -Generating unique operation named: printEditUsingGET_1
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_26
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingGET_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_14
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPUT_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 21:39:30 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_14
2019-05-27 21:39:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_15
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_16
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_13
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_14
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_15
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_17
2019-05-27 21:39:30 -Generating unique operation named: listUsingHEAD_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingPOST_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingPUT_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingPATCH_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingDELETE_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 21:39:30 -Generating unique operation named: listUsingTRACE_1
2019-05-27 21:39:30 -Generating unique operation named: countDDUsingGET_1
2019-05-27 21:39:30 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 21:39:30 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_15
2019-05-27 21:39:30 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_16
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_18
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_27
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_15
2019-05-27 21:39:30 -Generating unique operation named: treeUsingGET_3
2019-05-27 21:39:30 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_16
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_16
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_17
2019-05-27 21:39:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_19
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_28
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_29
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_16
2019-05-27 21:39:30 -Generating unique operation named: updateUsingGET_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_17
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPUT_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 21:39:30 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 21:39:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_17
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_18
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_20
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_30
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_31
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_17
2019-05-27 21:39:30 -Generating unique operation named: updateUsingGET_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_18
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPUT_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 21:39:30 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 21:39:30 -Generating unique operation named: addUsingGET_18
2019-05-27 21:39:30 -Generating unique operation named: editUsingGET_19
2019-05-27 21:39:30 -Generating unique operation named: listUsingGET_21
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_32
2019-05-27 21:39:30 -Generating unique operation named: removeUsingPOST_33
2019-05-27 21:39:30 -Generating unique operation named: saveUsingPOST_18
2019-05-27 21:39:30 -Generating unique operation named: updateUsingGET_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPOST_19
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPUT_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 21:39:30 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 21:39:30 -Starting Quartz Scheduler now
2019-05-27 21:39:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 21:39:30 -Starting...
2019-05-27 21:39:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:39:30 -Started.
2019-05-27 21:39:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 21:39:30 -Using a shared selector for servlet write/read
2019-05-27 21:39:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 21:39:30 -Started BootdoApplication in 24.163 seconds (JVM running for 24.889)
2019-05-27 21:39:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 21:39:32 -==> Parameters: 
2019-05-27 21:39:32 -<==      Total: 1
2019-05-27 21:39:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 21:39:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 21:39:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-05-27 21:39:38 -Enabling session validation scheduler...
2019-05-27 21:39:38 -请求地址 : http://localhost:8081/login;JSESSIONID=0c4702f2-8528-44da-93f3-55a5528a5766
2019-05-27 21:39:38 -HTTP METHOD : GET
2019-05-27 21:39:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:39:38 -参数 : [{}]
2019-05-27 21:39:38 -耗时 : 4
2019-05-27 21:39:38 -返回值 : login
2019-05-27 21:39:39 -请求地址 : http://localhost:8081/getVerify
2019-05-27 21:39:39 -HTTP METHOD : GET
2019-05-27 21:39:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 21:39:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@62274153, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6618d9cf]
2019-05-27 21:39:43 -8050
2019-05-27 21:39:43 -耗时 : 3931
2019-05-27 21:39:43 -返回值 : null
2019-05-27 21:39:43 -请求地址 : http://localhost:8081/login
2019-05-27 21:39:43 -HTTP METHOD : GET
2019-05-27 21:39:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:39:43 -参数 : [{}]
2019-05-27 21:39:43 -耗时 : 1
2019-05-27 21:39:43 -返回值 : login
2019-05-27 21:39:48 -请求地址 : http://localhost:8081/login
2019-05-27 21:39:48 -HTTP METHOD : POST
2019-05-27 21:39:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 21:39:48 -参数 : [admin, 111111, 8050, org.apache.shiro.web.servlet.ShiroHttpServletRequest@47607400]
2019-05-27 21:39:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 21:39:48 -==> Parameters: admin(String)
2019-05-27 21:39:48 -<==      Total: 1
2019-05-27 21:39:48 -耗时 : 109
2019-05-27 21:39:48 -返回值 : {msg=操作成功, code=0}
2019-05-27 21:39:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 21:39:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:39:48 -==> Parameters: 1(Long), admin(String), 登录(String), 109(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 21:39:48.597(Timestamp)
2019-05-27 21:39:48 -<==    Updates: 1
2019-05-27 21:39:48 -请求地址 : http://localhost:8081/index
2019-05-27 21:39:48 -HTTP METHOD : GET
2019-05-27 21:39:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:39:48 -参数 : [{}]
2019-05-27 21:39:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:39:48 -==> Parameters: 1(Long)
2019-05-27 21:39:49 -<==      Total: 50
2019-05-27 21:39:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:39:49 -==> Parameters: 138(Long)
2019-05-27 21:39:49 -<==      Total: 1
2019-05-27 21:39:49 -耗时 : 319
2019-05-27 21:39:49 -返回值 : index_v1
2019-05-27 21:39:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:39:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 319(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:39:49.179(Timestamp)
2019-05-27 21:39:49 -<==    Updates: 1
2019-05-27 21:39:49 -请求地址 : http://localhost:8081/main
2019-05-27 21:39:49 -HTTP METHOD : GET
2019-05-27 21:39:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:39:49 -参数 : []
2019-05-27 21:39:49 -耗时 : 0
2019-05-27 21:39:49 -返回值 : main
2019-05-27 21:39:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:39:49 -HTTP METHOD : GET
2019-05-27 21:39:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:39:49 -参数 : []
2019-05-27 21:39:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:39:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:39:50 -请求地址 : http://localhost:8081/main
2019-05-27 21:39:50 -HTTP METHOD : GET
2019-05-27 21:39:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:39:50 -参数 : []
2019-05-27 21:39:50 -耗时 : 0
2019-05-27 21:39:50 -返回值 : main
2019-05-27 21:39:50 -<==      Total: 0
2019-05-27 21:39:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:39:50 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:39:50 -<==      Total: 1
2019-05-27 21:39:50 -耗时 : 469
2019-05-27 21:39:50 -返回值 : com.bootdo.common.utils.PageUtils@26ca5f1e
2019-05-27 21:39:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 21:39:52 -==> Parameters: 1(Long)
2019-05-27 21:39:52 -<==      Total: 94
2019-05-27 21:39:52 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:39:52 -HTTP METHOD : GET
2019-05-27 21:39:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:39:52 -参数 : []
2019-05-27 21:39:52 -耗时 : 0
2019-05-27 21:39:52 -返回值 : elec/elecInto/elecInto
2019-05-27 21:40:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:40:03 -HTTP METHOD : GET
2019-05-27 21:40:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:40:03 -参数 : []
2019-05-27 21:40:03 -耗时 : 1
2019-05-27 21:40:03 -返回值 : system/dept/deptTree
2019-05-27 21:40:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:40:03 -HTTP METHOD : GET
2019-05-27 21:40:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:40:03 -参数 : []
2019-05-27 21:40:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:40:03 -==> Parameters: 
2019-05-27 21:40:03 -<==      Total: 3
2019-05-27 21:40:03 -耗时 : 70
2019-05-27 21:40:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:40:04 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:40:04 -HTTP METHOD : POST
2019-05-27 21:40:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:40:04 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3148f94d, com.bootdo.elec.vo.ElecVo@434de8a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@25ff92e5]
2019-05-27 21:40:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:40:06 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:40:06 -<==      Total: 1
2019-05-27 21:40:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:40:06 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:40:06 -<==      Total: 1
2019-05-27 21:40:06 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:40:06 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:40:06 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:40:06 -<==      Total: 0
2019-05-27 21:40:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:40:06 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:40:06 -<==      Total: 1
2019-05-27 21:40:06 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:40:06 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:40:06 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:40:06.294(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:40:06.294(Timestamp), 1(Long), null
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:40:06 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:40:06.338(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:40:06.338(Timestamp), 1(Long), null
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:40:06 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:40:06.294(Timestamp), 1(Long), null
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:40:06 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:40:06.338(Timestamp), 1(Long), null
2019-05-27 21:40:06 -<==    Updates: 1
2019-05-27 21:40:06 -耗时 : 1740
2019-05-27 21:40:06 -返回值 : success
2019-05-27 21:40:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-27 21:43:12 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:43:12 -HTTP METHOD : POST
2019-05-27 21:43:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:43:12 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@55d891ed, com.bootdo.elec.vo.ElecVo@56a7fe2b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6e2ddd01]
2019-05-27 21:43:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:43:12 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:43:12 -<==      Total: 1
2019-05-27 21:43:12 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:43:12 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:43:12 -<==      Total: 1
2019-05-27 21:43:12 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:43:12 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:43:12 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:43:12 -<==      Total: 0
2019-05-27 21:43:12 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:43:12 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:43:12 -<==      Total: 1
2019-05-27 21:43:12 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:43:12 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:43:12 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:43:12.391(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:43:12.391(Timestamp), 1(Long), null
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:43:12 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:43:12.477(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:43:12.477(Timestamp), 1(Long), null
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:43:12 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:43:12.391(Timestamp), 1(Long), null
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:43:12 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:43:12.477(Timestamp), 1(Long), null
2019-05-27 21:43:12 -<==    Updates: 1
2019-05-27 21:43:12 -耗时 : 348
2019-05-27 21:43:12 -返回值 : success
2019-05-27 21:44:18 -Starting BootdoApplication on PC-201905091110 with PID 2428 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 21:44:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 21:44:18 -The following profiles are active: dev
2019-05-27 21:44:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Mon May 27 21:44:19 CST 2019]; root of context hierarchy
2019-05-27 21:44:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 21:44:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$210e92d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1367c17e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 21:44:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 21:44:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:44:32 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 21:44:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:44:32 -Starting service [Tomcat]
2019-05-27 21:44:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 21:44:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 21:44:32 -Initializing Spring embedded WebApplicationContext
2019-05-27 21:44:32 -Root WebApplicationContext: initialization completed in 13632 ms
2019-05-27 21:44:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 21:44:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 21:44:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 21:44:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 21:44:33 -Filter xssFilter was not registered (disabled)
2019-05-27 21:44:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 21:44:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 21:44:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 21:44:33 -Servlet dispatcherServlet mapped to [/]
2019-05-27 21:44:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Mon May 27 21:44:19 CST 2019]; root of context hierarchy
2019-05-27 21:44:41 -Using default implementation for ThreadExecutor
2019-05-27 21:44:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 21:44:42 -Quartz Scheduler v.2.2.1 created.
2019-05-27 21:44:42 -RAMJobStore initialized.
2019-05-27 21:44:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 21:44:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 21:44:42 -Quartz scheduler version: 2.2.1
2019-05-27 21:44:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@13047d3d
2019-05-27 21:44:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 21:44:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 21:44:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 21:44:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 21:44:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 21:44:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 21:44:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 21:44:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 21:44:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 21:44:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 21:44:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 21:44:50 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 21:44:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 21:44:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 21:44:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 21:44:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 21:44:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 21:44:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:44:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:44:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 21:44:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 21:44:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 21:44:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 21:44:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 21:44:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 21:44:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 21:44:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 21:44:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 21:44:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 21:44:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 21:44:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 21:44:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 21:44:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 21:44:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 21:44:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 21:44:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:44:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:44:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 21:44:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 21:44:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 21:44:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 21:44:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 21:44:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 21:44:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 21:44:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 21:44:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 21:44:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 21:44:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 21:44:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 21:44:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 21:44:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 21:44:50 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 21:44:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 21:44:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 21:44:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 21:44:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 21:44:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 21:44:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 21:44:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 21:44:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 21:44:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 21:44:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 21:44:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 21:44:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 21:44:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 21:44:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 21:44:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 21:44:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 21:44:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 21:44:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:44:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 21:44:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:44:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 21:44:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 21:44:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 21:44:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 21:44:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 21:44:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 21:44:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:44:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 21:44:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:44:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:44:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 21:44:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:44:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 21:44:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 21:44:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 21:44:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 21:44:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 21:44:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 21:44:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:44:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Mon May 27 21:44:19 CST 2019]; root of context hierarchy
2019-05-27 21:44:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:44:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:44:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:44:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 21:44:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 21:44:55 -Registering beans for JMX exposure on startup
2019-05-27 21:44:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 21:44:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 21:44:55 -Starting beans in phase 2147483647
2019-05-27 21:44:55 -Context refreshed
2019-05-27 21:44:55 -Found 1 custom documentation plugin(s)
2019-05-27 21:44:55 -Scanning for api listing references
2019-05-27 21:44:55 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_1
2019-05-27 21:44:56 -Generating unique operation named: addUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: editUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: listUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_2
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_3
2019-05-27 21:44:56 -Generating unique operation named: saveUsingPOST_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPOST_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPUT_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 21:44:56 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 21:44:56 -Generating unique operation named: addUsingGET_2
2019-05-27 21:44:56 -Generating unique operation named: editUsingGET_2
2019-05-27 21:44:56 -Generating unique operation named: listUsingGET_2
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_4
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_5
2019-05-27 21:44:56 -Generating unique operation named: saveUsingPOST_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPOST_2
2019-05-27 21:44:56 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: addUsingGET_3
2019-05-27 21:44:56 -Generating unique operation named: editUsingGET_3
2019-05-27 21:44:56 -Generating unique operation named: listUsingGET_3
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_6
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_7
2019-05-27 21:44:56 -Generating unique operation named: saveUsingPOST_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingGET_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPOST_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPUT_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 21:44:56 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 21:44:56 -Generating unique operation named: addUsingGET_4
2019-05-27 21:44:56 -Generating unique operation named: editUsingGET_4
2019-05-27 21:44:56 -Generating unique operation named: listUsingGET_4
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_8
2019-05-27 21:44:56 -Generating unique operation named: removeUsingPOST_9
2019-05-27 21:44:56 -Generating unique operation named: saveUsingPOST_4
2019-05-27 21:44:56 -Generating unique operation named: updateUsingGET_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPOST_4
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPUT_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 21:44:56 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 21:44:56 -Generating unique operation named: ElecUsingGET_1
2019-05-27 21:44:56 -Generating unique operation named: addUsingGET_5
2019-05-27 21:44:56 -Generating unique operation named: editUsingGET_5
2019-05-27 21:44:57 -Generating unique operation named: listUsingGET_5
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_10
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_11
2019-05-27 21:44:57 -Generating unique operation named: saveUsingPOST_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingGET_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPOST_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPUT_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 21:44:57 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 21:44:57 -Generating unique operation named: editUsingGET_6
2019-05-27 21:44:57 -Generating unique operation named: listUsingGET_6
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPOST_6
2019-05-27 21:44:57 -Generating unique operation named: addUsingGET_6
2019-05-27 21:44:57 -Generating unique operation named: editUsingGET_7
2019-05-27 21:44:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 21:44:57 -Generating unique operation named: listUsingGET_7
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_12
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_13
2019-05-27 21:44:57 -Generating unique operation named: saveUsingPOST_6
2019-05-27 21:44:57 -Generating unique operation named: updateUsingGET_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPOST_7
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPUT_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 21:44:57 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 21:44:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 21:44:57 -Generating unique operation named: addUsingGET_7
2019-05-27 21:44:57 -Generating unique operation named: editUsingGET_8
2019-05-27 21:44:57 -Generating unique operation named: listUsingGET_8
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_14
2019-05-27 21:44:57 -Generating unique operation named: removeUsingPOST_15
2019-05-27 21:44:57 -Generating unique operation named: saveUsingPOST_7
2019-05-27 21:44:57 -Generating unique operation named: updateUsingGET_6
2019-05-27 21:44:57 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPOST_8
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPUT_6
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 21:44:58 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 21:44:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 21:44:58 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 21:44:58 -Generating unique operation named: addUsingGET_8
2019-05-27 21:44:58 -Generating unique operation named: editUsingGET_9
2019-05-27 21:44:58 -Generating unique operation named: listUsingGET_9
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_16
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_17
2019-05-27 21:44:58 -Generating unique operation named: saveUsingPOST_8
2019-05-27 21:44:58 -Generating unique operation named: updateUsingGET_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPOST_9
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPUT_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 21:44:58 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 21:44:58 -Generating unique operation named: addUsingGET_9
2019-05-27 21:44:58 -Generating unique operation named: editUsingGET_10
2019-05-27 21:44:58 -Generating unique operation named: infoUsingGET_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingPOST_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingPUT_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 21:44:58 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 21:44:58 -Generating unique operation named: listUsingGET_10
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_18
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_19
2019-05-27 21:44:58 -Generating unique operation named: saveUsingPOST_9
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPOST_10
2019-05-27 21:44:58 -Generating unique operation named: listUsingGET_11
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_20
2019-05-27 21:44:58 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 21:44:58 -Generating unique operation named: addUsingGET_10
2019-05-27 21:44:58 -Generating unique operation named: editUsingGET_11
2019-05-27 21:44:58 -Generating unique operation named: listUsingGET_12
2019-05-27 21:44:58 -Generating unique operation named: removeUsingPOST_21
2019-05-27 21:44:58 -Generating unique operation named: saveUsingPOST_10
2019-05-27 21:44:58 -Generating unique operation named: treeUsingGET_1
2019-05-27 21:44:58 -Generating unique operation named: treeUsingGET_2
2019-05-27 21:44:58 -Generating unique operation named: updateUsingPOST_11
2019-05-27 21:44:59 -Generating unique operation named: addUsingGET_11
2019-05-27 21:44:59 -Generating unique operation named: editUsingGET_12
2019-05-27 21:44:59 -Generating unique operation named: listUsingGET_13
2019-05-27 21:44:59 -Generating unique operation named: removeUsingPOST_22
2019-05-27 21:44:59 -Generating unique operation named: removeUsingPOST_23
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPOST_12
2019-05-27 21:44:59 -Generating unique operation named: addUsingGET_12
2019-05-27 21:44:59 -Generating unique operation named: editUsingGET_13
2019-05-27 21:44:59 -Generating unique operation named: listUsingGET_14
2019-05-27 21:44:59 -Generating unique operation named: removeUsingPOST_24
2019-05-27 21:44:59 -Generating unique operation named: removeUsingPOST_25
2019-05-27 21:44:59 -Generating unique operation named: saveUsingPOST_11
2019-05-27 21:44:59 -Generating unique operation named: updateUsingGET_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPOST_13
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPUT_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 21:44:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 21:44:59 -Generating unique operation named: addUsingGET_13
2019-05-27 21:44:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 21:44:59 -Generating unique operation named: editUsingGET_14
2019-05-27 21:44:59 -Generating unique operation named: listUsingGET_15
2019-05-27 21:44:59 -Generating unique operation named: printEditUsingGET_1
2019-05-27 21:44:59 -Generating unique operation named: removeUsingPOST_26
2019-05-27 21:44:59 -Generating unique operation named: saveUsingPOST_12
2019-05-27 21:44:59 -Generating unique operation named: updateUsingGET_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPOST_14
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPUT_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 21:44:59 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 21:44:59 -Generating unique operation named: addUsingGET_14
2019-05-27 21:44:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 21:44:59 -Generating unique operation named: editUsingGET_15
2019-05-27 21:44:59 -Generating unique operation named: listUsingGET_16
2019-05-27 21:44:59 -Generating unique operation named: saveUsingPOST_13
2019-05-27 21:44:59 -Generating unique operation named: saveUsingPOST_14
2019-05-27 21:44:59 -Generating unique operation named: updateUsingPOST_15
2019-05-27 21:44:59 -Generating unique operation named: listUsingGET_17
2019-05-27 21:44:59 -Generating unique operation named: listUsingHEAD_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingPOST_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingPUT_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingPATCH_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingDELETE_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 21:44:59 -Generating unique operation named: listUsingTRACE_1
2019-05-27 21:44:59 -Generating unique operation named: countDDUsingGET_1
2019-05-27 21:44:59 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 21:44:59 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 21:45:00 -Generating unique operation named: addUsingGET_15
2019-05-27 21:45:00 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 21:45:00 -Generating unique operation named: editUsingGET_16
2019-05-27 21:45:00 -Generating unique operation named: listUsingGET_18
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_27
2019-05-27 21:45:00 -Generating unique operation named: saveUsingPOST_15
2019-05-27 21:45:00 -Generating unique operation named: treeUsingGET_3
2019-05-27 21:45:00 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPOST_16
2019-05-27 21:45:00 -Generating unique operation named: addUsingGET_16
2019-05-27 21:45:00 -Generating unique operation named: editUsingGET_17
2019-05-27 21:45:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 21:45:00 -Generating unique operation named: listUsingGET_19
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_28
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_29
2019-05-27 21:45:00 -Generating unique operation named: saveUsingPOST_16
2019-05-27 21:45:00 -Generating unique operation named: updateUsingGET_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPOST_17
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPUT_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 21:45:00 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 21:45:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 21:45:00 -Generating unique operation named: addUsingGET_17
2019-05-27 21:45:00 -Generating unique operation named: editUsingGET_18
2019-05-27 21:45:00 -Generating unique operation named: listUsingGET_20
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_30
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_31
2019-05-27 21:45:00 -Generating unique operation named: saveUsingPOST_17
2019-05-27 21:45:00 -Generating unique operation named: updateUsingGET_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPOST_18
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPUT_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 21:45:00 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 21:45:00 -Generating unique operation named: addUsingGET_18
2019-05-27 21:45:00 -Generating unique operation named: editUsingGET_19
2019-05-27 21:45:00 -Generating unique operation named: listUsingGET_21
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_32
2019-05-27 21:45:00 -Generating unique operation named: removeUsingPOST_33
2019-05-27 21:45:00 -Generating unique operation named: saveUsingPOST_18
2019-05-27 21:45:00 -Generating unique operation named: updateUsingGET_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPOST_19
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPUT_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 21:45:00 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 21:45:00 -Starting Quartz Scheduler now
2019-05-27 21:45:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 21:45:00 -Starting...
2019-05-27 21:45:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:45:00 -Started.
2019-05-27 21:45:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 21:45:00 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-05-27 21:45:00 -Pausing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:45:00 -Stopping service [Tomcat]
2019-05-27 21:45:00 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-05-27 21:45:00 -Stopping ProtocolHandler ["http-nio-8081"]
2019-05-27 21:45:00 -Destroying ProtocolHandler ["http-nio-8081"]
2019-05-27 21:45:00 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-27 21:45:00 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-05-27 21:45:00 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Mon May 27 21:44:19 CST 2019]; root of context hierarchy
2019-05-27 21:45:00 -Stopping beans in phase 2147483647
2019-05-27 21:45:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-27 21:45:00 -Stopping...
2019-05-27 21:45:00 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:45:00 -Stopped.
2019-05-27 21:45:01 -Unregistering JMX-exposed beans on shutdown
2019-05-27 21:45:01 -Unregistering JMX-exposed beans
2019-05-27 21:45:01 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-05-27 21:45:01 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-05-27 21:45:01 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-05-27 21:45:01 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-05-27 21:45:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-05-27 21:45:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-27 21:45:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-05-27 21:45:01 -Shutting down Quartz Scheduler
2019-05-27 21:45:27 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:45:27 -HTTP METHOD : POST
2019-05-27 21:45:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:45:27 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3de6ff55, com.bootdo.elec.vo.ElecVo@3a056d3b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c1d8139]
2019-05-27 21:45:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 21:45:28 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 21:45:28 -<==      Total: 1
2019-05-27 21:45:28 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:45:28 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:45:28 -<==      Total: 1
2019-05-27 21:45:28 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:45:28 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 21:45:28 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 21:45:28 -<==      Total: 0
2019-05-27 21:45:28 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:45:28 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:45:28 -<==      Total: 1
2019-05-27 21:45:28 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 21:45:28 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:45:28 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 21:45:28.088(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:45:28.088(Timestamp), 1(Long), null
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:45:28 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 21:45:28.137(Timestamp), 2019-02(String), 1(Long), 2019-05-27 21:45:28.137(Timestamp), 1(Long), null
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:45:28 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:45:28.088(Timestamp), 1(Long), null
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:45:28 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 0.465(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 20(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 21:45:28.137(Timestamp), 1(Long), null
2019-05-27 21:45:28 -<==    Updates: 1
2019-05-27 21:45:28 -耗时 : 424
2019-05-27 21:45:28 -返回值 : success
2019-05-27 21:53:58 -Starting BootdoApplication on PC-201905091110 with PID 20936 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 21:53:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 21:53:58 -The following profiles are active: dev
2019-05-27 21:53:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Mon May 27 21:53:58 CST 2019]; root of context hierarchy
2019-05-27 21:54:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 21:54:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33285f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$25818e1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 21:54:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 21:54:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 21:54:07 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 21:54:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 21:54:07 -Starting service [Tomcat]
2019-05-27 21:54:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 21:54:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 21:54:08 -Initializing Spring embedded WebApplicationContext
2019-05-27 21:54:08 -Root WebApplicationContext: initialization completed in 9917 ms
2019-05-27 21:54:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 21:54:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 21:54:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 21:54:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 21:54:08 -Filter xssFilter was not registered (disabled)
2019-05-27 21:54:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 21:54:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 21:54:08 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 21:54:08 -Servlet dispatcherServlet mapped to [/]
2019-05-27 21:54:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Mon May 27 21:53:58 CST 2019]; root of context hierarchy
2019-05-27 21:54:13 -Using default implementation for ThreadExecutor
2019-05-27 21:54:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 21:54:13 -Quartz Scheduler v.2.2.1 created.
2019-05-27 21:54:13 -RAMJobStore initialized.
2019-05-27 21:54:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 21:54:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 21:54:13 -Quartz scheduler version: 2.2.1
2019-05-27 21:54:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@51172948
2019-05-27 21:54:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 21:54:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 21:54:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 21:54:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 21:54:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 21:54:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 21:54:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 21:54:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 21:54:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 21:54:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 21:54:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 21:54:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 21:54:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 21:54:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 21:54:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 21:54:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 21:54:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 21:54:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 21:54:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 21:54:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:54:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 21:54:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 21:54:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 21:54:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 21:54:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 21:54:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 21:54:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 21:54:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 21:54:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 21:54:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 21:54:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 21:54:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 21:54:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 21:54:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 21:54:17 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 21:54:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 21:54:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 21:54:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 21:54:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 21:54:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 21:54:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 21:54:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 21:54:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 21:54:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 21:54:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 21:54:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 21:54:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 21:54:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 21:54:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 21:54:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 21:54:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 21:54:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 21:54:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 21:54:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 21:54:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 21:54:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 21:54:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 21:54:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 21:54:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 21:54:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 21:54:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 21:54:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 21:54:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 21:54:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 21:54:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 21:54:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 21:54:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 21:54:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:54:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 21:54:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 21:54:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 21:54:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 21:54:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 21:54:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 21:54:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 21:54:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 21:54:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 21:54:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 21:54:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 21:54:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 21:54:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 21:54:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 21:54:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 21:54:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 21:54:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 21:54:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 21:54:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:54:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Mon May 27 21:53:58 CST 2019]; root of context hierarchy
2019-05-27 21:54:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:54:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:54:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 21:54:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 21:54:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 21:54:21 -Registering beans for JMX exposure on startup
2019-05-27 21:54:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 21:54:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 21:54:21 -Starting beans in phase 2147483647
2019-05-27 21:54:21 -Context refreshed
2019-05-27 21:54:21 -Found 1 custom documentation plugin(s)
2019-05-27 21:54:21 -Scanning for api listing references
2019-05-27 21:54:22 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 21:54:22 -Generating unique operation named: removeUsingPOST_1
2019-05-27 21:54:22 -Generating unique operation named: addUsingGET_1
2019-05-27 21:54:22 -Generating unique operation named: editUsingGET_1
2019-05-27 21:54:22 -Generating unique operation named: listUsingGET_1
2019-05-27 21:54:22 -Generating unique operation named: removeUsingPOST_2
2019-05-27 21:54:22 -Generating unique operation named: removeUsingPOST_3
2019-05-27 21:54:22 -Generating unique operation named: saveUsingPOST_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingGET_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingPOST_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingPUT_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 21:54:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 21:54:22 -Generating unique operation named: addUsingGET_2
2019-05-27 21:54:22 -Generating unique operation named: editUsingGET_2
2019-05-27 21:54:22 -Generating unique operation named: listUsingGET_2
2019-05-27 21:54:22 -Generating unique operation named: removeUsingPOST_4
2019-05-27 21:54:22 -Generating unique operation named: removeUsingPOST_5
2019-05-27 21:54:22 -Generating unique operation named: saveUsingPOST_2
2019-05-27 21:54:22 -Generating unique operation named: updateUsingPOST_2
2019-05-27 21:54:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 21:54:22 -Generating unique operation named: addUsingGET_3
2019-05-27 21:54:22 -Generating unique operation named: editUsingGET_3
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_3
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_6
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_7
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPUT_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 21:54:23 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 21:54:23 -Generating unique operation named: addUsingGET_4
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_4
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_4
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_8
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_9
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPUT_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 21:54:23 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 21:54:23 -Generating unique operation named: ElecUsingGET_1
2019-05-27 21:54:23 -Generating unique operation named: addUsingGET_5
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_5
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_5
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_10
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_11
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPUT_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 21:54:23 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_6
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_6
2019-05-27 21:54:23 -Generating unique operation named: addUsingGET_6
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_7
2019-05-27 21:54:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_7
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_12
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_13
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_7
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPUT_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 21:54:23 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 21:54:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 21:54:23 -Generating unique operation named: addUsingGET_7
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_8
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_8
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_14
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_15
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_7
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPOST_8
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPUT_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 21:54:23 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 21:54:23 -Generating unique operation named: addUsingGET_8
2019-05-27 21:54:23 -Generating unique operation named: editUsingGET_9
2019-05-27 21:54:23 -Generating unique operation named: listUsingGET_9
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_16
2019-05-27 21:54:23 -Generating unique operation named: removeUsingPOST_17
2019-05-27 21:54:23 -Generating unique operation named: saveUsingPOST_8
2019-05-27 21:54:23 -Generating unique operation named: updateUsingGET_7
2019-05-27 21:54:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPOST_9
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPUT_7
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 21:54:24 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 21:54:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 21:54:24 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 21:54:24 -Generating unique operation named: addUsingGET_9
2019-05-27 21:54:24 -Generating unique operation named: editUsingGET_10
2019-05-27 21:54:24 -Generating unique operation named: infoUsingGET_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingPOST_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingPUT_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 21:54:24 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 21:54:24 -Generating unique operation named: listUsingGET_10
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_18
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_19
2019-05-27 21:54:24 -Generating unique operation named: saveUsingPOST_9
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPOST_10
2019-05-27 21:54:24 -Generating unique operation named: listUsingGET_11
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_20
2019-05-27 21:54:24 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 21:54:24 -Generating unique operation named: addUsingGET_10
2019-05-27 21:54:24 -Generating unique operation named: editUsingGET_11
2019-05-27 21:54:24 -Generating unique operation named: listUsingGET_12
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_21
2019-05-27 21:54:24 -Generating unique operation named: saveUsingPOST_10
2019-05-27 21:54:24 -Generating unique operation named: treeUsingGET_1
2019-05-27 21:54:24 -Generating unique operation named: treeUsingGET_2
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPOST_11
2019-05-27 21:54:24 -Generating unique operation named: addUsingGET_11
2019-05-27 21:54:24 -Generating unique operation named: editUsingGET_12
2019-05-27 21:54:24 -Generating unique operation named: listUsingGET_13
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_22
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_23
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPOST_12
2019-05-27 21:54:24 -Generating unique operation named: addUsingGET_12
2019-05-27 21:54:24 -Generating unique operation named: editUsingGET_13
2019-05-27 21:54:24 -Generating unique operation named: listUsingGET_14
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_24
2019-05-27 21:54:24 -Generating unique operation named: removeUsingPOST_25
2019-05-27 21:54:24 -Generating unique operation named: saveUsingPOST_11
2019-05-27 21:54:24 -Generating unique operation named: updateUsingGET_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPOST_13
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPUT_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 21:54:24 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 21:54:24 -Generating unique operation named: addUsingGET_13
2019-05-27 21:54:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_14
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_15
2019-05-27 21:54:25 -Generating unique operation named: printEditUsingGET_1
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_26
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingGET_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_14
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPUT_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 21:54:25 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 21:54:25 -Generating unique operation named: addUsingGET_14
2019-05-27 21:54:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_15
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_16
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_13
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_14
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_15
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_17
2019-05-27 21:54:25 -Generating unique operation named: listUsingHEAD_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingPOST_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingPUT_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingPATCH_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingDELETE_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 21:54:25 -Generating unique operation named: listUsingTRACE_1
2019-05-27 21:54:25 -Generating unique operation named: countDDUsingGET_1
2019-05-27 21:54:25 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 21:54:25 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 21:54:25 -Generating unique operation named: addUsingGET_15
2019-05-27 21:54:25 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_16
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_18
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_27
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_15
2019-05-27 21:54:25 -Generating unique operation named: treeUsingGET_3
2019-05-27 21:54:25 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_16
2019-05-27 21:54:25 -Generating unique operation named: addUsingGET_16
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_17
2019-05-27 21:54:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_19
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_28
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_29
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_16
2019-05-27 21:54:25 -Generating unique operation named: updateUsingGET_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_17
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPUT_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 21:54:25 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 21:54:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 21:54:25 -Generating unique operation named: addUsingGET_17
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_18
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_20
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_30
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_31
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_17
2019-05-27 21:54:25 -Generating unique operation named: updateUsingGET_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_18
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPUT_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 21:54:25 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 21:54:25 -Generating unique operation named: addUsingGET_18
2019-05-27 21:54:25 -Generating unique operation named: editUsingGET_19
2019-05-27 21:54:25 -Generating unique operation named: listUsingGET_21
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_32
2019-05-27 21:54:25 -Generating unique operation named: removeUsingPOST_33
2019-05-27 21:54:25 -Generating unique operation named: saveUsingPOST_18
2019-05-27 21:54:25 -Generating unique operation named: updateUsingGET_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPOST_19
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPUT_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 21:54:25 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 21:54:25 -Starting Quartz Scheduler now
2019-05-27 21:54:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 21:54:25 -Starting...
2019-05-27 21:54:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 21:54:25 -Started.
2019-05-27 21:54:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 21:54:26 -Using a shared selector for servlet write/read
2019-05-27 21:54:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 21:54:26 -Started BootdoApplication in 30.129 seconds (JVM running for 31.813)
2019-05-27 21:54:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 21:54:26 -==> Parameters: 
2019-05-27 21:54:26 -<==      Total: 1
2019-05-27 21:54:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 21:54:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 21:54:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2019-05-27 21:54:49 -Enabling session validation scheduler...
2019-05-27 21:54:49 -请求地址 : http://localhost:8081/login;JSESSIONID=0c4702f2-8528-44da-93f3-55a5528a5766
2019-05-27 21:54:49 -HTTP METHOD : GET
2019-05-27 21:54:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:54:49 -参数 : [{}]
2019-05-27 21:54:49 -耗时 : 4
2019-05-27 21:54:49 -返回值 : login
2019-05-27 21:54:51 -请求地址 : http://localhost:8081/getVerify
2019-05-27 21:54:51 -HTTP METHOD : GET
2019-05-27 21:54:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 21:54:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1feac984, org.apache.shiro.web.servlet.ShiroHttpServletResponse@112d3409]
2019-05-27 21:54:51 -7501
2019-05-27 21:54:51 -耗时 : 615
2019-05-27 21:54:51 -返回值 : null
2019-05-27 21:54:52 -请求地址 : http://localhost:8081/login
2019-05-27 21:54:52 -HTTP METHOD : GET
2019-05-27 21:54:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 21:54:52 -参数 : [{}]
2019-05-27 21:54:52 -耗时 : 0
2019-05-27 21:54:52 -返回值 : login
2019-05-27 21:55:01 -请求地址 : http://localhost:8081/login
2019-05-27 21:55:01 -HTTP METHOD : POST
2019-05-27 21:55:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 21:55:01 -参数 : [admin, 111111, 7501, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62ac3804]
2019-05-27 21:55:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 21:55:01 -==> Parameters: admin(String)
2019-05-27 21:55:01 -<==      Total: 1
2019-05-27 21:55:01 -耗时 : 191
2019-05-27 21:55:01 -返回值 : {msg=操作成功, code=0}
2019-05-27 21:55:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 21:55:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:55:01 -==> Parameters: 1(Long), admin(String), 登录(String), 192(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 21:55:01.567(Timestamp)
2019-05-27 21:55:01 -<==    Updates: 1
2019-05-27 21:55:01 -请求地址 : http://localhost:8081/index
2019-05-27 21:55:01 -HTTP METHOD : GET
2019-05-27 21:55:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 21:55:01 -参数 : [{}]
2019-05-27 21:55:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 21:55:01 -==> Parameters: 1(Long)
2019-05-27 21:55:01 -<==      Total: 50
2019-05-27 21:55:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 21:55:01 -==> Parameters: 138(Long)
2019-05-27 21:55:01 -<==      Total: 1
2019-05-27 21:55:01 -耗时 : 143
2019-05-27 21:55:01 -返回值 : index_v1
2019-05-27 21:55:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 21:55:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 21:55:01.917(Timestamp)
2019-05-27 21:55:01 -<==    Updates: 1
2019-05-27 21:55:02 -请求地址 : http://localhost:8081/main
2019-05-27 21:55:02 -HTTP METHOD : GET
2019-05-27 21:55:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:55:02 -参数 : []
2019-05-27 21:55:02 -耗时 : 0
2019-05-27 21:55:02 -返回值 : main
2019-05-27 21:55:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 21:55:02 -HTTP METHOD : GET
2019-05-27 21:55:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 21:55:02 -参数 : []
2019-05-27 21:55:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 21:55:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 21:55:02 -<==      Total: 0
2019-05-27 21:55:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 21:55:02 -==> Parameters: 1(Long), 0(String)
2019-05-27 21:55:02 -<==      Total: 1
2019-05-27 21:55:02 -耗时 : 38
2019-05-27 21:55:02 -返回值 : com.bootdo.common.utils.PageUtils@1da25d08
2019-05-27 21:55:02 -请求地址 : http://localhost:8081/main
2019-05-27 21:55:02 -HTTP METHOD : GET
2019-05-27 21:55:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 21:55:02 -参数 : []
2019-05-27 21:55:02 -耗时 : 1
2019-05-27 21:55:02 -返回值 : main
2019-05-27 21:55:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 21:55:11 -==> Parameters: 1(Long)
2019-05-27 21:55:11 -<==      Total: 94
2019-05-27 21:55:11 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 21:55:11 -HTTP METHOD : GET
2019-05-27 21:55:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 21:55:11 -参数 : []
2019-05-27 21:55:11 -耗时 : 1
2019-05-27 21:55:11 -返回值 : elec/elecInto/elecInto
2019-05-27 21:55:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-27 21:55:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 21:55:20 -HTTP METHOD : GET
2019-05-27 21:55:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 21:55:20 -参数 : []
2019-05-27 21:55:20 -耗时 : 0
2019-05-27 21:55:20 -返回值 : system/dept/deptTree
2019-05-27 21:55:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 21:55:20 -HTTP METHOD : GET
2019-05-27 21:55:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 21:55:20 -参数 : []
2019-05-27 21:55:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 21:55:20 -==> Parameters: 
2019-05-27 21:55:20 -<==      Total: 3
2019-05-27 21:55:20 -耗时 : 39
2019-05-27 21:55:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 21:55:22 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 21:55:22 -HTTP METHOD : POST
2019-05-27 21:55:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 21:55:22 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@12adb363, com.bootdo.elec.vo.ElecVo@659d938f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ec66840]
2019-05-27 22:01:29 -Starting BootdoApplication on PC-201905091110 with PID 26700 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-27 22:01:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-27 22:01:29 -The following profiles are active: dev
2019-05-27 22:01:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@207b8649: startup date [Mon May 27 22:01:29 CST 2019]; root of context hierarchy
2019-05-27 22:01:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-27 22:01:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ac300f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6d1c2f97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-27 22:01:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-27 22:01:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-27 22:01:40 -Tomcat initialized with port(s): 8081 (http)
2019-05-27 22:01:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-27 22:01:40 -Starting service [Tomcat]
2019-05-27 22:01:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-27 22:01:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-27 22:01:40 -Initializing Spring embedded WebApplicationContext
2019-05-27 22:01:40 -Root WebApplicationContext: initialization completed in 11289 ms
2019-05-27 22:01:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-27 22:01:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-27 22:01:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-27 22:01:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-27 22:01:41 -Filter xssFilter was not registered (disabled)
2019-05-27 22:01:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-27 22:01:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-27 22:01:41 -Servlet statViewServlet mapped to [/druid/*]
2019-05-27 22:01:41 -Servlet dispatcherServlet mapped to [/]
2019-05-27 22:01:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@207b8649: startup date [Mon May 27 22:01:29 CST 2019]; root of context hierarchy
2019-05-27 22:01:46 -Using default implementation for ThreadExecutor
2019-05-27 22:01:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-27 22:01:46 -Quartz Scheduler v.2.2.1 created.
2019-05-27 22:01:46 -RAMJobStore initialized.
2019-05-27 22:01:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-27 22:01:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-27 22:01:46 -Quartz scheduler version: 2.2.1
2019-05-27 22:01:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@204c5ddf
2019-05-27 22:01:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-27 22:01:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-27 22:01:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-27 22:01:51 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-27 22:01:51 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-27 22:01:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-27 22:01:51 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-27 22:01:51 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-27 22:01:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-27 22:01:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-27 22:01:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-27 22:01:51 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-27 22:01:51 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-27 22:01:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-27 22:01:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-27 22:01:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-27 22:01:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-27 22:01:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-27 22:01:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 22:01:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-27 22:01:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-27 22:01:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-27 22:01:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-27 22:01:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-27 22:01:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-27 22:01:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-27 22:01:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-27 22:01:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-27 22:01:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-27 22:01:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-27 22:01:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-27 22:01:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-27 22:01:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-27 22:01:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-27 22:01:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-27 22:01:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-27 22:01:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-27 22:01:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-27 22:01:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-27 22:01:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-27 22:01:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-27 22:01:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-27 22:01:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-27 22:01:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-27 22:01:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-27 22:01:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-27 22:01:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-27 22:01:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-27 22:01:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-27 22:01:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-27 22:01:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-27 22:01:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-27 22:01:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-27 22:01:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-27 22:01:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-27 22:01:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-27 22:01:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-27 22:01:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-27 22:01:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-27 22:01:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-27 22:01:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-27 22:01:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-27 22:01:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-27 22:01:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-27 22:01:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-27 22:01:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-27 22:01:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-27 22:01:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-27 22:01:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-27 22:01:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 22:01:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-27 22:01:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-27 22:01:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-27 22:01:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-27 22:01:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-27 22:01:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-27 22:01:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-27 22:01:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-27 22:01:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-27 22:01:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-27 22:01:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-27 22:01:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-27 22:01:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-27 22:01:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-27 22:01:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-27 22:01:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-27 22:01:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-27 22:01:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-27 22:01:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 22:01:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@207b8649: startup date [Mon May 27 22:01:29 CST 2019]; root of context hierarchy
2019-05-27 22:01:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 22:01:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 22:01:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-27 22:01:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-27 22:01:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-27 22:01:56 -Registering beans for JMX exposure on startup
2019-05-27 22:01:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-27 22:01:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-27 22:01:56 -Starting beans in phase 2147483647
2019-05-27 22:01:56 -Context refreshed
2019-05-27 22:01:56 -Found 1 custom documentation plugin(s)
2019-05-27 22:01:56 -Scanning for api listing references
2019-05-27 22:01:57 -Generating unique operation named: getCountDUsingPOST_1
2019-05-27 22:01:57 -Generating unique operation named: removeUsingPOST_1
2019-05-27 22:01:57 -Generating unique operation named: addUsingGET_1
2019-05-27 22:01:57 -Generating unique operation named: editUsingGET_1
2019-05-27 22:01:57 -Generating unique operation named: listUsingGET_1
2019-05-27 22:01:57 -Generating unique operation named: removeUsingPOST_2
2019-05-27 22:01:57 -Generating unique operation named: removeUsingPOST_3
2019-05-27 22:01:58 -Generating unique operation named: saveUsingPOST_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingGET_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingHEAD_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPOST_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPUT_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPATCH_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingDELETE_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-27 22:01:58 -Generating unique operation named: updateUsingTRACE_1
2019-05-27 22:01:58 -Generating unique operation named: addUsingGET_2
2019-05-27 22:01:58 -Generating unique operation named: editUsingGET_2
2019-05-27 22:01:58 -Generating unique operation named: listUsingGET_2
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_4
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_5
2019-05-27 22:01:58 -Generating unique operation named: saveUsingPOST_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPOST_2
2019-05-27 22:01:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-27 22:01:58 -Generating unique operation named: addUsingGET_3
2019-05-27 22:01:58 -Generating unique operation named: editUsingGET_3
2019-05-27 22:01:58 -Generating unique operation named: listUsingGET_3
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_6
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_7
2019-05-27 22:01:58 -Generating unique operation named: saveUsingPOST_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingGET_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingHEAD_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPOST_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPUT_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPATCH_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingDELETE_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-27 22:01:58 -Generating unique operation named: updateUsingTRACE_2
2019-05-27 22:01:58 -Generating unique operation named: addUsingGET_4
2019-05-27 22:01:58 -Generating unique operation named: editUsingGET_4
2019-05-27 22:01:58 -Generating unique operation named: listUsingGET_4
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_8
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_9
2019-05-27 22:01:58 -Generating unique operation named: saveUsingPOST_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingGET_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingHEAD_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPOST_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPUT_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPATCH_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingDELETE_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-27 22:01:58 -Generating unique operation named: updateUsingTRACE_3
2019-05-27 22:01:58 -Generating unique operation named: ElecUsingGET_1
2019-05-27 22:01:58 -Generating unique operation named: addUsingGET_5
2019-05-27 22:01:58 -Generating unique operation named: editUsingGET_5
2019-05-27 22:01:58 -Generating unique operation named: listUsingGET_5
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_10
2019-05-27 22:01:58 -Generating unique operation named: removeUsingPOST_11
2019-05-27 22:01:58 -Generating unique operation named: saveUsingPOST_5
2019-05-27 22:01:58 -Generating unique operation named: updateUsingGET_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingHEAD_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPOST_5
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPUT_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingPATCH_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingDELETE_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-27 22:01:58 -Generating unique operation named: updateUsingTRACE_4
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_6
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_6
2019-05-27 22:01:59 -Generating unique operation named: addUsingGET_6
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_7
2019-05-27 22:01:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_7
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_12
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_13
2019-05-27 22:01:59 -Generating unique operation named: saveUsingPOST_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingGET_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingHEAD_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPUT_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPATCH_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingDELETE_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-27 22:01:59 -Generating unique operation named: updateUsingTRACE_5
2019-05-27 22:01:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-27 22:01:59 -Generating unique operation named: addUsingGET_7
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_8
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_8
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_14
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_15
2019-05-27 22:01:59 -Generating unique operation named: saveUsingPOST_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingGET_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingHEAD_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_8
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPUT_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPATCH_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingDELETE_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-27 22:01:59 -Generating unique operation named: updateUsingTRACE_6
2019-05-27 22:01:59 -Generating unique operation named: addUsingGET_8
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_9
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_9
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_16
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_17
2019-05-27 22:01:59 -Generating unique operation named: saveUsingPOST_8
2019-05-27 22:01:59 -Generating unique operation named: updateUsingGET_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingHEAD_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_9
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPUT_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPATCH_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingDELETE_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-27 22:01:59 -Generating unique operation named: updateUsingTRACE_7
2019-05-27 22:01:59 -Generating unique operation named: addUsingGET_9
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_10
2019-05-27 22:01:59 -Generating unique operation named: infoUsingGET_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingHEAD_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingPOST_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingPUT_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingPATCH_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingDELETE_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-27 22:01:59 -Generating unique operation named: infoUsingTRACE_1
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_10
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_18
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_19
2019-05-27 22:01:59 -Generating unique operation named: saveUsingPOST_9
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_10
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_11
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_20
2019-05-27 22:01:59 -Generating unique operation named: welcomeUsingGET_1
2019-05-27 22:01:59 -Generating unique operation named: addUsingGET_10
2019-05-27 22:01:59 -Generating unique operation named: editUsingGET_11
2019-05-27 22:01:59 -Generating unique operation named: listUsingGET_12
2019-05-27 22:01:59 -Generating unique operation named: removeUsingPOST_21
2019-05-27 22:01:59 -Generating unique operation named: saveUsingPOST_10
2019-05-27 22:01:59 -Generating unique operation named: treeUsingGET_1
2019-05-27 22:01:59 -Generating unique operation named: treeUsingGET_2
2019-05-27 22:01:59 -Generating unique operation named: updateUsingPOST_11
2019-05-27 22:02:00 -Generating unique operation named: addUsingGET_11
2019-05-27 22:02:00 -Generating unique operation named: editUsingGET_12
2019-05-27 22:02:00 -Generating unique operation named: listUsingGET_13
2019-05-27 22:02:00 -Generating unique operation named: removeUsingPOST_22
2019-05-27 22:02:00 -Generating unique operation named: removeUsingPOST_23
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPOST_12
2019-05-27 22:02:00 -Generating unique operation named: addUsingGET_12
2019-05-27 22:02:00 -Generating unique operation named: editUsingGET_13
2019-05-27 22:02:00 -Generating unique operation named: listUsingGET_14
2019-05-27 22:02:00 -Generating unique operation named: removeUsingPOST_24
2019-05-27 22:02:00 -Generating unique operation named: removeUsingPOST_25
2019-05-27 22:02:00 -Generating unique operation named: saveUsingPOST_11
2019-05-27 22:02:00 -Generating unique operation named: updateUsingGET_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingHEAD_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPOST_13
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPUT_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPATCH_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingDELETE_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-27 22:02:00 -Generating unique operation named: updateUsingTRACE_8
2019-05-27 22:02:00 -Generating unique operation named: addUsingGET_13
2019-05-27 22:02:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-27 22:02:00 -Generating unique operation named: editUsingGET_14
2019-05-27 22:02:00 -Generating unique operation named: listUsingGET_15
2019-05-27 22:02:00 -Generating unique operation named: printEditUsingGET_1
2019-05-27 22:02:00 -Generating unique operation named: removeUsingPOST_26
2019-05-27 22:02:00 -Generating unique operation named: saveUsingPOST_12
2019-05-27 22:02:00 -Generating unique operation named: updateUsingGET_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingHEAD_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPOST_14
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPUT_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPATCH_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingDELETE_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-27 22:02:00 -Generating unique operation named: updateUsingTRACE_9
2019-05-27 22:02:00 -Generating unique operation named: addUsingGET_14
2019-05-27 22:02:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-27 22:02:00 -Generating unique operation named: editUsingGET_15
2019-05-27 22:02:00 -Generating unique operation named: listUsingGET_16
2019-05-27 22:02:00 -Generating unique operation named: saveUsingPOST_13
2019-05-27 22:02:00 -Generating unique operation named: saveUsingPOST_14
2019-05-27 22:02:00 -Generating unique operation named: updateUsingPOST_15
2019-05-27 22:02:00 -Generating unique operation named: listUsingGET_17
2019-05-27 22:02:00 -Generating unique operation named: listUsingHEAD_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingPOST_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingPUT_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingPATCH_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingDELETE_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingOPTIONS_1
2019-05-27 22:02:00 -Generating unique operation named: listUsingTRACE_1
2019-05-27 22:02:00 -Generating unique operation named: countDDUsingGET_1
2019-05-27 22:02:00 -Generating unique operation named: exportDDUsingGET_1
2019-05-27 22:02:00 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-27 22:02:00 -Generating unique operation named: addUsingGET_15
2019-05-27 22:02:01 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-27 22:02:01 -Generating unique operation named: editUsingGET_16
2019-05-27 22:02:01 -Generating unique operation named: listUsingGET_18
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_27
2019-05-27 22:02:01 -Generating unique operation named: saveUsingPOST_15
2019-05-27 22:02:01 -Generating unique operation named: treeUsingGET_3
2019-05-27 22:02:01 -Generating unique operation named: treeViewUsingGET_1
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPOST_16
2019-05-27 22:02:01 -Generating unique operation named: addUsingGET_16
2019-05-27 22:02:01 -Generating unique operation named: editUsingGET_17
2019-05-27 22:02:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-27 22:02:01 -Generating unique operation named: listUsingGET_19
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_28
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_29
2019-05-27 22:02:01 -Generating unique operation named: saveUsingPOST_16
2019-05-27 22:02:01 -Generating unique operation named: updateUsingGET_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingHEAD_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPOST_17
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPUT_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPATCH_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingDELETE_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-27 22:02:01 -Generating unique operation named: updateUsingTRACE_10
2019-05-27 22:02:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-27 22:02:01 -Generating unique operation named: addUsingGET_17
2019-05-27 22:02:01 -Generating unique operation named: editUsingGET_18
2019-05-27 22:02:01 -Generating unique operation named: listUsingGET_20
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_30
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_31
2019-05-27 22:02:01 -Generating unique operation named: saveUsingPOST_17
2019-05-27 22:02:01 -Generating unique operation named: updateUsingGET_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingHEAD_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPOST_18
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPUT_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPATCH_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingDELETE_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-27 22:02:01 -Generating unique operation named: updateUsingTRACE_11
2019-05-27 22:02:01 -Generating unique operation named: addUsingGET_18
2019-05-27 22:02:01 -Generating unique operation named: editUsingGET_19
2019-05-27 22:02:01 -Generating unique operation named: listUsingGET_21
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_32
2019-05-27 22:02:01 -Generating unique operation named: removeUsingPOST_33
2019-05-27 22:02:01 -Generating unique operation named: saveUsingPOST_18
2019-05-27 22:02:01 -Generating unique operation named: updateUsingGET_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingHEAD_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPOST_19
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPUT_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingPATCH_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingDELETE_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-27 22:02:01 -Generating unique operation named: updateUsingTRACE_12
2019-05-27 22:02:01 -Starting Quartz Scheduler now
2019-05-27 22:02:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-27 22:02:01 -Starting...
2019-05-27 22:02:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-27 22:02:01 -Started.
2019-05-27 22:02:01 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-27 22:02:01 -Using a shared selector for servlet write/read
2019-05-27 22:02:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-27 22:02:01 -Started BootdoApplication in 35.289 seconds (JVM running for 36.902)
2019-05-27 22:02:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-27 22:02:02 -==> Parameters: 
2019-05-27 22:02:03 -<==      Total: 1
2019-05-27 22:02:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-27 22:02:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-27 22:02:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-27 22:02:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2019-05-27 22:02:57 -Enabling session validation scheduler...
2019-05-27 22:02:57 -请求地址 : http://localhost:8081/login;JSESSIONID=f0035c0c-a45c-4705-871c-c01d8814fe1d
2019-05-27 22:02:57 -HTTP METHOD : GET
2019-05-27 22:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 22:02:57 -参数 : [{}]
2019-05-27 22:02:57 -耗时 : 4
2019-05-27 22:02:57 -返回值 : login
2019-05-27 22:02:59 -请求地址 : http://localhost:8081/getVerify
2019-05-27 22:02:59 -HTTP METHOD : GET
2019-05-27 22:02:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-27 22:02:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b6c0337, org.apache.shiro.web.servlet.ShiroHttpServletResponse@44bb0c6a]
2019-05-27 22:02:59 -7327
2019-05-27 22:02:59 -耗时 : 438
2019-05-27 22:02:59 -返回值 : null
2019-05-27 22:02:59 -请求地址 : http://localhost:8081/login
2019-05-27 22:02:59 -HTTP METHOD : GET
2019-05-27 22:02:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-27 22:02:59 -参数 : [{}]
2019-05-27 22:02:59 -耗时 : 0
2019-05-27 22:02:59 -返回值 : login
2019-05-27 22:03:05 -请求地址 : http://localhost:8081/login
2019-05-27 22:03:05 -HTTP METHOD : POST
2019-05-27 22:03:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 22:03:05 -参数 : [admin, 111111, 7372, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ea2137]
2019-05-27 22:03:05 -耗时 : 13
2019-05-27 22:03:05 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-27 22:03:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-27 22:03:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:03:05 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 22:03:05.271(Timestamp)
2019-05-27 22:03:05 -<==    Updates: 1
2019-05-27 22:03:11 -请求地址 : http://localhost:8081/login
2019-05-27 22:03:11 -HTTP METHOD : POST
2019-05-27 22:03:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-27 22:03:11 -参数 : [admin, 111111, 7327, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cf3c7db]
2019-05-27 22:03:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-27 22:03:11 -==> Parameters: admin(String)
2019-05-27 22:03:11 -<==      Total: 1
2019-05-27 22:03:11 -耗时 : 194
2019-05-27 22:03:11 -返回值 : {msg=操作成功, code=0}
2019-05-27 22:03:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:03:11 -==> Parameters: 1(Long), admin(String), 登录(String), 194(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-27 22:03:11.803(Timestamp)
2019-05-27 22:03:11 -请求地址 : http://localhost:8081/index
2019-05-27 22:03:11 -HTTP METHOD : GET
2019-05-27 22:03:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 22:03:11 -参数 : [{}]
2019-05-27 22:03:11 -<==    Updates: 1
2019-05-27 22:03:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 22:03:11 -==> Parameters: 1(Long)
2019-05-27 22:03:12 -<==      Total: 50
2019-05-27 22:03:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 22:03:12 -==> Parameters: 138(Long)
2019-05-27 22:03:12 -<==      Total: 1
2019-05-27 22:03:12 -耗时 : 190
2019-05-27 22:03:12 -返回值 : index_v1
2019-05-27 22:03:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:03:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 191(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 22:03:12.084(Timestamp)
2019-05-27 22:03:12 -<==    Updates: 1
2019-05-27 22:03:12 -请求地址 : http://localhost:8081/main
2019-05-27 22:03:12 -HTTP METHOD : GET
2019-05-27 22:03:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:03:12 -参数 : []
2019-05-27 22:03:12 -耗时 : 1
2019-05-27 22:03:12 -返回值 : main
2019-05-27 22:03:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 22:03:12 -HTTP METHOD : GET
2019-05-27 22:03:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 22:03:12 -参数 : []
2019-05-27 22:03:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 22:03:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 22:03:13 -请求地址 : http://localhost:8081/main
2019-05-27 22:03:13 -HTTP METHOD : GET
2019-05-27 22:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:03:13 -参数 : []
2019-05-27 22:03:13 -耗时 : 0
2019-05-27 22:03:13 -返回值 : main
2019-05-27 22:03:13 -<==      Total: 0
2019-05-27 22:03:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 22:03:13 -==> Parameters: 1(Long), 0(String)
2019-05-27 22:03:13 -<==      Total: 1
2019-05-27 22:03:13 -耗时 : 228
2019-05-27 22:03:13 -返回值 : com.bootdo.common.utils.PageUtils@1ac22866
2019-05-27 22:03:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 22:03:21 -==> Parameters: 1(Long)
2019-05-27 22:03:21 -<==      Total: 94
2019-05-27 22:03:21 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 22:03:21 -HTTP METHOD : GET
2019-05-27 22:03:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 22:03:21 -参数 : []
2019-05-27 22:03:21 -耗时 : 1
2019-05-27 22:03:21 -返回值 : elec/elecInto/elecInto
2019-05-27 22:03:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 22:03:30 -HTTP METHOD : GET
2019-05-27 22:03:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 22:03:30 -参数 : []
2019-05-27 22:03:30 -耗时 : 1
2019-05-27 22:03:30 -返回值 : system/dept/deptTree
2019-05-27 22:03:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 22:03:30 -HTTP METHOD : GET
2019-05-27 22:03:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 22:03:30 -参数 : []
2019-05-27 22:03:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 22:03:30 -==> Parameters: 
2019-05-27 22:03:30 -<==      Total: 3
2019-05-27 22:03:30 -耗时 : 36
2019-05-27 22:03:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 22:03:31 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:03:31 -HTTP METHOD : POST
2019-05-27 22:03:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:03:31 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@308586f9, com.bootdo.elec.vo.ElecVo@22963a1c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@62a8c79e]
2019-05-27 22:03:32 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:03:32 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:03:32 -<==      Total: 1
2019-05-27 22:03:32 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:03:32 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:03:32 -<==    Updates: 1
2019-05-27 22:03:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 22:03:32 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 22:03:32 -<==      Total: 1
2019-05-27 22:04:28 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:04:28 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:04:28 -<==      Total: 1
2019-05-27 22:04:29 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:04:29 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:04:29 -<==    Updates: 1
2019-05-27 22:04:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:04:30 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 22:04:30 -<==      Total: 0
2019-05-27 22:04:41 -耗时 : 69256
2019-05-27 22:04:41 -返回值 : success
2019-05-27 22:08:36 -请求地址 : http://localhost:8081/index
2019-05-27 22:08:36 -HTTP METHOD : GET
2019-05-27 22:08:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 22:08:36 -参数 : [{}]
2019-05-27 22:08:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 22:08:36 -==> Parameters: 1(Long)
2019-05-27 22:08:36 -<==      Total: 50
2019-05-27 22:08:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 22:08:36 -==> Parameters: 138(Long)
2019-05-27 22:08:36 -<==      Total: 1
2019-05-27 22:08:36 -耗时 : 119
2019-05-27 22:08:36 -返回值 : index_v1
2019-05-27 22:08:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:08:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 22:08:36.806(Timestamp)
2019-05-27 22:08:36 -请求地址 : http://localhost:8081/main
2019-05-27 22:08:36 -HTTP METHOD : GET
2019-05-27 22:08:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:08:36 -参数 : []
2019-05-27 22:08:36 -耗时 : 1
2019-05-27 22:08:36 -返回值 : main
2019-05-27 22:08:36 -<==    Updates: 1
2019-05-27 22:08:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 22:08:37 -HTTP METHOD : GET
2019-05-27 22:08:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 22:08:37 -参数 : []
2019-05-27 22:08:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 22:08:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 22:08:37 -<==      Total: 0
2019-05-27 22:08:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 22:08:37 -==> Parameters: 1(Long), 0(String)
2019-05-27 22:08:37 -<==      Total: 1
2019-05-27 22:08:37 -耗时 : 10
2019-05-27 22:08:37 -返回值 : com.bootdo.common.utils.PageUtils@1cd68880
2019-05-27 22:08:37 -请求地址 : http://localhost:8081/main
2019-05-27 22:08:37 -HTTP METHOD : GET
2019-05-27 22:08:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:08:37 -参数 : []
2019-05-27 22:08:37 -耗时 : 0
2019-05-27 22:08:37 -返回值 : main
2019-05-27 22:08:39 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 22:08:39 -HTTP METHOD : GET
2019-05-27 22:08:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 22:08:39 -参数 : []
2019-05-27 22:08:39 -耗时 : 0
2019-05-27 22:08:39 -返回值 : elec/elecInto/elecInto
2019-05-27 22:08:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 22:08:47 -HTTP METHOD : GET
2019-05-27 22:08:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 22:08:47 -参数 : []
2019-05-27 22:08:47 -耗时 : 0
2019-05-27 22:08:47 -返回值 : system/dept/deptTree
2019-05-27 22:08:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 22:08:47 -HTTP METHOD : GET
2019-05-27 22:08:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 22:08:47 -参数 : []
2019-05-27 22:08:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 22:08:47 -==> Parameters: 
2019-05-27 22:08:47 -<==      Total: 3
2019-05-27 22:08:47 -耗时 : 4
2019-05-27 22:08:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 22:08:49 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:08:49 -HTTP METHOD : POST
2019-05-27 22:08:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:08:49 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@bf4c767, com.bootdo.elec.vo.ElecVo@341a3ad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b091da9]
2019-05-27 22:08:49 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:08:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:08:49 -<==      Total: 1
2019-05-27 22:08:49 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:08:49 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:08:49 -<==    Updates: 1
2019-05-27 22:09:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 22:09:00 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 22:09:00 -<==      Total: 1
2019-05-27 22:12:57 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:12:58 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:12:58 -<==      Total: 1
2019-05-27 22:17:52 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:17:52 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:17:52 -<==      Total: 1
2019-05-27 22:17:55 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:17:55 -==> Parameters: 20.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:17:55 -<==    Updates: 1
2019-05-27 22:17:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:17:58 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0001(String)
2019-05-27 22:17:58 -<==      Total: 1
2019-05-27 22:17:58 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:17:58 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:17:58.685(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:17:58.686(Timestamp), 1(Long), null
2019-05-27 22:17:58 -<==    Updates: 1
2019-05-27 22:18:10 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:18:10 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:18:10 -<==      Total: 1
2019-05-27 22:18:10 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:18:10 -==> Parameters: 160.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:18:10 -<==    Updates: 1
2019-05-27 22:18:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:18:10 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 22:18:10 -<==      Total: 0
2019-05-27 22:18:10 -耗时 : 561394
2019-05-27 22:18:10 -返回值 : success
2019-05-27 22:19:58 -请求地址 : http://localhost:8081/index
2019-05-27 22:19:58 -HTTP METHOD : GET
2019-05-27 22:19:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-27 22:19:58 -参数 : [{}]
2019-05-27 22:19:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-27 22:19:58 -==> Parameters: 1(Long)
2019-05-27 22:19:58 -<==      Total: 50
2019-05-27 22:19:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-27 22:19:58 -==> Parameters: 138(Long)
2019-05-27 22:19:58 -<==      Total: 1
2019-05-27 22:19:58 -耗时 : 217
2019-05-27 22:19:58 -返回值 : index_v1
2019-05-27 22:19:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:19:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 217(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-27 22:19:58.926(Timestamp)
2019-05-27 22:19:59 -请求地址 : http://localhost:8081/main
2019-05-27 22:19:59 -HTTP METHOD : GET
2019-05-27 22:19:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:19:59 -参数 : []
2019-05-27 22:19:59 -耗时 : 0
2019-05-27 22:19:59 -返回值 : main
2019-05-27 22:19:59 -<==    Updates: 1
2019-05-27 22:19:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-27 22:19:59 -HTTP METHOD : GET
2019-05-27 22:19:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-27 22:19:59 -参数 : []
2019-05-27 22:19:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-27 22:19:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-27 22:19:59 -<==      Total: 0
2019-05-27 22:19:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-27 22:19:59 -==> Parameters: 1(Long), 0(String)
2019-05-27 22:19:59 -<==      Total: 1
2019-05-27 22:19:59 -耗时 : 29
2019-05-27 22:19:59 -返回值 : com.bootdo.common.utils.PageUtils@2bdfcb66
2019-05-27 22:19:59 -请求地址 : http://localhost:8081/main
2019-05-27 22:19:59 -HTTP METHOD : GET
2019-05-27 22:19:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-27 22:19:59 -参数 : []
2019-05-27 22:19:59 -耗时 : 0
2019-05-27 22:19:59 -返回值 : main
2019-05-27 22:20:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-27 22:20:03 -==> Parameters: 1(Long)
2019-05-27 22:20:03 -<==      Total: 94
2019-05-27 22:20:03 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-27 22:20:03 -HTTP METHOD : GET
2019-05-27 22:20:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-27 22:20:03 -参数 : []
2019-05-27 22:20:03 -耗时 : 0
2019-05-27 22:20:03 -返回值 : elec/elecInto/elecInto
2019-05-27 22:20:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-27 22:20:11 -HTTP METHOD : GET
2019-05-27 22:20:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-27 22:20:11 -参数 : []
2019-05-27 22:20:11 -耗时 : 0
2019-05-27 22:20:11 -返回值 : system/dept/deptTree
2019-05-27 22:20:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-27 22:20:11 -HTTP METHOD : GET
2019-05-27 22:20:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-27 22:20:11 -参数 : []
2019-05-27 22:20:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-27 22:20:11 -==> Parameters: 
2019-05-27 22:20:11 -<==      Total: 3
2019-05-27 22:20:11 -耗时 : 197
2019-05-27 22:20:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-27 22:20:13 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:20:13 -HTTP METHOD : POST
2019-05-27 22:20:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:20:13 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2a8b35a2, com.bootdo.elec.vo.ElecVo@51075211, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5914b0dd]
2019-05-27 22:20:13 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:20:13 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:20:13 -<==      Total: 1
2019-05-27 22:20:13 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:20:13 -==> Parameters: 40.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:20:13 -<==    Updates: 1
2019-05-27 22:20:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 22:20:13 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 22:20:13 -<==      Total: 1
2019-05-27 22:20:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:20:13 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:20:13.19(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:20:13.19(Timestamp), 1(Long), null
2019-05-27 22:20:13 -<==    Updates: 1
2019-05-27 22:20:13 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:20:13 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:20:13 -<==      Total: 1
2019-05-27 22:20:13 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:20:13 -==> Parameters: 320.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:20:13 -<==    Updates: 1
2019-05-27 22:20:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:20:13 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 22:20:13 -<==      Total: 0
2019-05-27 22:20:13 -耗时 : 281
2019-05-27 22:20:13 -返回值 : success
2019-05-27 22:21:18 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:21:18 -HTTP METHOD : POST
2019-05-27 22:21:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:21:18 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d5b23a, com.bootdo.elec.vo.ElecVo@656fa56, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38d54cf7]
2019-05-27 22:21:19 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:21:19 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:21:19 -<==      Total: 0
2019-05-27 22:21:19 -耗时 : 131
2019-05-27 22:21:19 -返回值 : 第2行，数据出错请认真编写
2019-05-27 22:21:28 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:21:28 -HTTP METHOD : POST
2019-05-27 22:21:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:21:28 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@231c18ba, com.bootdo.elec.vo.ElecVo@58a4223a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79bea226]
2019-05-27 22:21:28 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:21:28 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:21:28 -<==      Total: 0
2019-05-27 22:21:28 -耗时 : 80
2019-05-27 22:21:28 -返回值 : 第2行，数据出错请认真编写
2019-05-27 22:32:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 426]
2019-05-27 22:33:18 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:33:18 -HTTP METHOD : POST
2019-05-27 22:33:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:33:18 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@a91412f, com.bootdo.elec.vo.ElecVo@6a2d3b75, org.apache.shiro.web.servlet.ShiroHttpServletResponse@599374f2]
2019-05-27 22:33:27 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:33:27 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:33:27 -<==      Total: 1
2019-05-27 22:33:36 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:33:36 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:33:36 -<==    Updates: 1
2019-05-27 22:33:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 22:33:38 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 22:33:38 -<==      Total: 1
2019-05-27 22:34:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:34:23 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:34:23.921(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:34:23.922(Timestamp), 1(Long), null
2019-05-27 22:34:23 -<==    Updates: 1
2019-05-27 22:34:23 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:34:24 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 2(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:34:23.989(Timestamp), 1(Long), null
2019-05-27 22:34:24 -<==    Updates: 1
2019-05-27 22:34:28 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:34:28 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:34:28 -<==      Total: 1
2019-05-27 22:34:34 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:34:34 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:34:34 -<==    Updates: 1
2019-05-27 22:34:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:34:38 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 22:34:38 -<==      Total: 0
2019-05-27 22:39:15 -耗时 : 356624
2019-05-27 22:39:15 -返回值 : success
2019-05-27 22:39:19 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:39:19 -HTTP METHOD : POST
2019-05-27 22:39:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:39:19 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@157118af, com.bootdo.elec.vo.ElecVo@2a4acef0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7b7f17ad]
2019-05-27 22:39:24 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:39:24 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:39:24 -<==      Total: 1
2019-05-27 22:39:24 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:39:24 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:39:24 -<==    Updates: 1
2019-05-27 22:40:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-05-27 22:40:31 -==> Parameters: 2019-02(String), 2(String), 1-0001(String)
2019-05-27 22:40:31 -<==      Total: 1
2019-05-27 22:40:31 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:40:31 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:40:31.274(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:40:31.275(Timestamp), 1(Long), null
2019-05-27 22:40:31 -<==    Updates: 1
2019-05-27 22:40:31 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:40:31 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 2(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:40:31.429(Timestamp), 1(Long), null
2019-05-27 22:40:31 -<==    Updates: 1
2019-05-27 22:40:32 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:40:32 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:40:33 -<==      Total: 1
2019-05-27 22:40:35 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:40:35 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:40:35 -<==    Updates: 1
2019-05-27 22:40:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? and user_id = ? 
2019-05-27 22:40:57 -==> Parameters: 2019-02(String), B(String), 1(String), 2(String), 1-0004(String)
2019-05-27 22:40:57 -<==      Total: 0
2019-05-27 22:43:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:43:06 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:43:06 -<==      Total: 1
2019-05-27 22:43:08 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:43:08 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:43:08 -<==    Updates: 1
2019-05-27 22:43:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:43:12 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:43:12.893(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:43:12.893(Timestamp), 1(Long), null
2019-05-27 22:43:12 -<==    Updates: 1
2019-05-27 22:43:13 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:43:13 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 2(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:43:13.0(Timestamp), 1(Long), null
2019-05-27 22:43:13 -<==    Updates: 1
2019-05-27 22:43:14 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:43:14 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:43:14 -<==      Total: 1
2019-05-27 22:43:14 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:43:14 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:43:14 -<==    Updates: 1
2019-05-27 22:43:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:43:15 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 22:43:15.251(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:43:15.251(Timestamp), 1(Long), null
2019-05-27 22:43:15 -<==    Updates: 1
2019-05-27 22:43:15 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:43:15 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 3(String), 2(Integer), 0.789(BigDecimal), 2.00(BigDecimal), 2.00(BigDecimal), 0.00(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:43:15.35(Timestamp), 1(Long), null
2019-05-27 22:43:15 -<==    Updates: 1
2019-05-27 22:43:15 -耗时 : 235825
2019-05-27 22:43:15 -返回值 : success
2019-05-27 22:44:29 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:44:29 -HTTP METHOD : POST
2019-05-27 22:44:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:44:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@129194a6, com.bootdo.elec.vo.ElecVo@7df3ef8b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b5934c7]
2019-05-27 22:44:34 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:34 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:44:34 -<==      Total: 1
2019-05-27 22:44:34 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:34 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:34 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:44:34.128(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:44:34.129(Timestamp), 1(Long), null
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:34 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 2(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:44:34.232(Timestamp), 1(Long), null
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:34 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:44:34 -<==      Total: 1
2019-05-27 22:44:34 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:34 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:34 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 22:44:34.279(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:44:34.279(Timestamp), 1(Long), null
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:34 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 3(String), 2(Integer), 0.789(BigDecimal), 2.00(BigDecimal), 2.00(BigDecimal), 0.00(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:44:34.307(Timestamp), 1(Long), null
2019-05-27 22:44:34 -<==    Updates: 1
2019-05-27 22:44:34 -耗时 : 4551
2019-05-27 22:44:34 -返回值 : success
2019-05-27 22:44:49 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-27 22:44:49 -HTTP METHOD : POST
2019-05-27 22:44:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-27 22:44:49 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@61d277d5, com.bootdo.elec.vo.ElecVo@4f6b85e2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2090cd65]
2019-05-27 22:44:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:44:50 -<==      Total: 1
2019-05-27 22:44:50 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:50 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:50 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-27 22:44:50.077(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:44:50.077(Timestamp), 1(Long), null
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:50 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 2(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:44:50.112(Timestamp), 1(Long), null
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:50 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:44:50 -<==      Total: 1
2019-05-27 22:44:50 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-27 22:44:50 -==> Parameters: 0.00(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:50 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-27 22:44:50.173(Timestamp), 2019-02(String), 1(Long), 2019-05-27 22:44:50.173(Timestamp), 1(Long), null
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-27 22:44:50 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 3(String), 2(Integer), 0.789(BigDecimal), 2.00(BigDecimal), 2.00(BigDecimal), 0.00(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-02(String), 1(Long), 2019-05-27 22:44:50.202(Timestamp), 1(Long), null
2019-05-27 22:44:50 -<==    Updates: 1
2019-05-27 22:44:50 -耗时 : 267
2019-05-27 22:44:50 -返回值 : success

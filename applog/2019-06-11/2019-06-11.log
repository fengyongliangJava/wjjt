2019-06-11 10:11:14 -Starting BootdoApplication on PC-201905091110 with PID 2324 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-11 10:11:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-11 10:11:14 -The following profiles are active: dev
2019-06-11 10:11:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674658f7: startup date [Tue Jun 11 10:11:14 CST 2019]; root of context hierarchy
2019-06-11 10:11:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-11 10:11:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b4ea6e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3da7d588] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-11 10:11:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-11 10:11:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 10:11:36 -Tomcat initialized with port(s): 8081 (http)
2019-06-11 10:11:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-11 10:11:36 -Starting service [Tomcat]
2019-06-11 10:11:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-11 10:11:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-11 10:11:37 -Initializing Spring embedded WebApplicationContext
2019-06-11 10:11:37 -Root WebApplicationContext: initialization completed in 23109 ms
2019-06-11 10:11:39 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-11 10:11:39 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-11 10:11:39 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-11 10:11:39 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-11 10:11:39 -Filter xssFilter was not registered (disabled)
2019-06-11 10:11:39 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-11 10:11:39 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-11 10:11:39 -Servlet statViewServlet mapped to [/druid/*]
2019-06-11 10:11:39 -Servlet dispatcherServlet mapped to [/]
2019-06-11 10:11:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674658f7: startup date [Tue Jun 11 10:11:14 CST 2019]; root of context hierarchy
2019-06-11 10:11:48 -Using default implementation for ThreadExecutor
2019-06-11 10:11:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-11 10:11:48 -Quartz Scheduler v.2.3.0 created.
2019-06-11 10:11:48 -RAMJobStore initialized.
2019-06-11 10:11:48 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-11 10:11:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-11 10:11:48 -Quartz scheduler version: 2.3.0
2019-06-11 10:11:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6f2a3b37
2019-06-11 10:11:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-11 10:11:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-11 10:11:54 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-11 10:11:54 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-11 10:11:54 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-11 10:11:54 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-11 10:11:54 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-11 10:11:54 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-11 10:11:54 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-11 10:11:54 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-11 10:11:54 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-11 10:11:54 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:54 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 10:11:54 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-11 10:11:54 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-11 10:11:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 10:11:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-11 10:11:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-11 10:11:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-11 10:11:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-11 10:11:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-11 10:11:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 10:11:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-11 10:11:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 10:11:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-11 10:11:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-11 10:11:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-11 10:11:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-11 10:11:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-11 10:11:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-11 10:11:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-11 10:11:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-11 10:11:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-11 10:11:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-11 10:11:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-11 10:11:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-11 10:11:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-11 10:11:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-11 10:11:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-11 10:11:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-11 10:11:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-11 10:11:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-11 10:11:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-11 10:11:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-11 10:11:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-11 10:11:55 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-11 10:11:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-11 10:11:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-11 10:11:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-11 10:11:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-11 10:11:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-11 10:11:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-11 10:11:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-11 10:11:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-11 10:11:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-11 10:11:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-11 10:11:55 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-11 10:11:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-11 10:11:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-11 10:11:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-11 10:11:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-11 10:11:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-11 10:11:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-11 10:11:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-11 10:11:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-11 10:11:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-11 10:11:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-11 10:11:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-11 10:11:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-11 10:11:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-11 10:11:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-11 10:11:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-11 10:11:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-11 10:11:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-11 10:11:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 10:11:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 10:11:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-11 10:11:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-11 10:11:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-11 10:11:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-11 10:11:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-11 10:11:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-11 10:11:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 10:11:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 10:11:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-11 10:11:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-11 10:11:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 10:11:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 10:11:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-11 10:11:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-11 10:11:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-11 10:11:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-11 10:11:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-11 10:11:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-11 10:11:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 10:11:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@674658f7: startup date [Tue Jun 11 10:11:14 CST 2019]; root of context hierarchy
2019-06-11 10:11:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 10:11:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 10:11:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-11 10:11:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-11 10:12:02 -Registering beans for JMX exposure on startup
2019-06-11 10:12:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-11 10:12:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-11 10:12:02 -Starting beans in phase 2147483647
2019-06-11 10:12:02 -Context refreshed
2019-06-11 10:12:02 -Found 1 custom documentation plugin(s)
2019-06-11 10:12:02 -Scanning for api listing references
2019-06-11 10:12:03 -Generating unique operation named: removeUsingPOST_1
2019-06-11 10:12:04 -Generating unique operation named: addUsingGET_1
2019-06-11 10:12:04 -Generating unique operation named: editUsingGET_1
2019-06-11 10:12:04 -Generating unique operation named: listUsingGET_1
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_2
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_3
2019-06-11 10:12:04 -Generating unique operation named: saveUsingPOST_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingGET_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingHEAD_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPOST_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPUT_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPATCH_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingDELETE_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-11 10:12:04 -Generating unique operation named: updateUsingTRACE_1
2019-06-11 10:12:04 -Generating unique operation named: addUsingGET_2
2019-06-11 10:12:04 -Generating unique operation named: editUsingGET_2
2019-06-11 10:12:04 -Generating unique operation named: listUsingGET_2
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_4
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_5
2019-06-11 10:12:04 -Generating unique operation named: saveUsingPOST_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPOST_2
2019-06-11 10:12:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-11 10:12:04 -Generating unique operation named: addUsingGET_3
2019-06-11 10:12:04 -Generating unique operation named: editUsingGET_3
2019-06-11 10:12:04 -Generating unique operation named: listUsingGET_3
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_6
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_7
2019-06-11 10:12:04 -Generating unique operation named: saveUsingPOST_3
2019-06-11 10:12:04 -Generating unique operation named: updateUsingGET_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingHEAD_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPOST_3
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPUT_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingPATCH_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingDELETE_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-11 10:12:04 -Generating unique operation named: updateUsingTRACE_2
2019-06-11 10:12:04 -Generating unique operation named: addUsingGET_4
2019-06-11 10:12:04 -Generating unique operation named: editUsingGET_4
2019-06-11 10:12:04 -Generating unique operation named: listUsingGET_4
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_8
2019-06-11 10:12:04 -Generating unique operation named: removeUsingPOST_9
2019-06-11 10:12:05 -Generating unique operation named: saveUsingPOST_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingGET_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingHEAD_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPOST_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPUT_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPATCH_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingDELETE_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-11 10:12:05 -Generating unique operation named: updateUsingTRACE_3
2019-06-11 10:12:05 -Generating unique operation named: ElecUsingGET_1
2019-06-11 10:12:05 -Generating unique operation named: addUsingGET_5
2019-06-11 10:12:05 -Generating unique operation named: editUsingGET_5
2019-06-11 10:12:05 -Generating unique operation named: listUsingGET_5
2019-06-11 10:12:05 -Generating unique operation named: removeUsingPOST_10
2019-06-11 10:12:05 -Generating unique operation named: removeUsingPOST_11
2019-06-11 10:12:05 -Generating unique operation named: saveUsingPOST_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingGET_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingHEAD_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPOST_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPUT_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPATCH_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingDELETE_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-11 10:12:05 -Generating unique operation named: updateUsingTRACE_4
2019-06-11 10:12:05 -Generating unique operation named: editUsingGET_6
2019-06-11 10:12:05 -Generating unique operation named: listUsingGET_6
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPOST_6
2019-06-11 10:12:05 -Generating unique operation named: addUsingGET_6
2019-06-11 10:12:05 -Generating unique operation named: editUsingGET_7
2019-06-11 10:12:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-11 10:12:05 -Generating unique operation named: listUsingGET_7
2019-06-11 10:12:05 -Generating unique operation named: removeUsingPOST_12
2019-06-11 10:12:05 -Generating unique operation named: removeUsingPOST_13
2019-06-11 10:12:05 -Generating unique operation named: saveUsingPOST_6
2019-06-11 10:12:05 -Generating unique operation named: updateUsingGET_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingHEAD_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPOST_7
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPUT_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingPATCH_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingDELETE_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-11 10:12:05 -Generating unique operation named: updateUsingTRACE_5
2019-06-11 10:12:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-11 10:12:05 -Generating unique operation named: addUsingGET_7
2019-06-11 10:12:05 -Generating unique operation named: editUsingGET_8
2019-06-11 10:12:05 -Generating unique operation named: listUsingGET_8
2019-06-11 10:12:05 -Generating unique operation named: removeUsingPOST_14
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_15
2019-06-11 10:12:06 -Generating unique operation named: saveUsingPOST_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingGET_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingHEAD_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPOST_8
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPUT_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPATCH_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingDELETE_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-11 10:12:06 -Generating unique operation named: updateUsingTRACE_6
2019-06-11 10:12:06 -Generating unique operation named: addUsingGET_8
2019-06-11 10:12:06 -Generating unique operation named: editUsingGET_9
2019-06-11 10:12:06 -Generating unique operation named: listUsingGET_9
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_16
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_17
2019-06-11 10:12:06 -Generating unique operation named: saveUsingPOST_8
2019-06-11 10:12:06 -Generating unique operation named: updateUsingGET_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingHEAD_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPOST_9
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPUT_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPATCH_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingDELETE_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-11 10:12:06 -Generating unique operation named: updateUsingTRACE_7
2019-06-11 10:12:06 -Generating unique operation named: addUsingGET_9
2019-06-11 10:12:06 -Generating unique operation named: editUsingGET_10
2019-06-11 10:12:06 -Generating unique operation named: infoUsingGET_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingHEAD_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingPOST_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingPUT_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingPATCH_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingDELETE_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-11 10:12:06 -Generating unique operation named: infoUsingTRACE_1
2019-06-11 10:12:06 -Generating unique operation named: listUsingGET_10
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_18
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_19
2019-06-11 10:12:06 -Generating unique operation named: saveUsingPOST_9
2019-06-11 10:12:06 -Generating unique operation named: updateUsingPOST_10
2019-06-11 10:12:06 -Generating unique operation named: listUsingGET_11
2019-06-11 10:12:06 -Generating unique operation named: removeUsingPOST_20
2019-06-11 10:12:06 -Generating unique operation named: welcomeUsingGET_1
2019-06-11 10:12:07 -Generating unique operation named: addUsingGET_10
2019-06-11 10:12:07 -Generating unique operation named: editUsingGET_11
2019-06-11 10:12:07 -Generating unique operation named: listUsingGET_12
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_21
2019-06-11 10:12:07 -Generating unique operation named: saveUsingPOST_10
2019-06-11 10:12:07 -Generating unique operation named: treeUsingGET_1
2019-06-11 10:12:07 -Generating unique operation named: treeUsingGET_2
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPOST_11
2019-06-11 10:12:07 -Generating unique operation named: addUsingGET_11
2019-06-11 10:12:07 -Generating unique operation named: editUsingGET_12
2019-06-11 10:12:07 -Generating unique operation named: listUsingGET_13
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_22
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_23
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPOST_12
2019-06-11 10:12:07 -Generating unique operation named: addUsingGET_12
2019-06-11 10:12:07 -Generating unique operation named: editUsingGET_13
2019-06-11 10:12:07 -Generating unique operation named: listUsingGET_14
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_24
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_25
2019-06-11 10:12:07 -Generating unique operation named: saveUsingPOST_11
2019-06-11 10:12:07 -Generating unique operation named: updateUsingGET_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingHEAD_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPOST_13
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPUT_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPATCH_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingDELETE_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-11 10:12:07 -Generating unique operation named: updateUsingTRACE_8
2019-06-11 10:12:07 -Generating unique operation named: addUsingGET_13
2019-06-11 10:12:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-11 10:12:07 -Generating unique operation named: editUsingGET_14
2019-06-11 10:12:07 -Generating unique operation named: listUsingGET_15
2019-06-11 10:12:07 -Generating unique operation named: printEditUsingGET_1
2019-06-11 10:12:07 -Generating unique operation named: removeUsingPOST_26
2019-06-11 10:12:07 -Generating unique operation named: saveUsingPOST_12
2019-06-11 10:12:07 -Generating unique operation named: updateUsingGET_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingHEAD_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPOST_14
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPUT_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingPATCH_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingDELETE_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-11 10:12:07 -Generating unique operation named: updateUsingTRACE_9
2019-06-11 10:12:07 -Generating unique operation named: addUsingGET_14
2019-06-11 10:12:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-11 10:12:08 -Generating unique operation named: editUsingGET_15
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_16
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_13
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_14
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPOST_15
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_17
2019-06-11 10:12:08 -Generating unique operation named: listUsingHEAD_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingPOST_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingPUT_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingPATCH_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingDELETE_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingOPTIONS_1
2019-06-11 10:12:08 -Generating unique operation named: listUsingTRACE_1
2019-06-11 10:12:08 -Generating unique operation named: countDDUsingGET_1
2019-06-11 10:12:08 -Generating unique operation named: exportDDUsingGET_1
2019-06-11 10:12:08 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-11 10:12:08 -Generating unique operation named: addUsingGET_15
2019-06-11 10:12:08 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-11 10:12:08 -Generating unique operation named: editUsingGET_16
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_18
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_27
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_15
2019-06-11 10:12:08 -Generating unique operation named: treeUsingGET_3
2019-06-11 10:12:08 -Generating unique operation named: treeViewUsingGET_1
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPOST_16
2019-06-11 10:12:08 -Generating unique operation named: addUsingGET_16
2019-06-11 10:12:08 -Generating unique operation named: editUsingGET_17
2019-06-11 10:12:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_19
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_28
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_29
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_16
2019-06-11 10:12:08 -Generating unique operation named: updateUsingGET_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingHEAD_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPOST_17
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPUT_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPATCH_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingDELETE_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-11 10:12:08 -Generating unique operation named: updateUsingTRACE_10
2019-06-11 10:12:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-11 10:12:08 -Generating unique operation named: addUsingGET_17
2019-06-11 10:12:08 -Generating unique operation named: editUsingGET_18
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_20
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_30
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_31
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_17
2019-06-11 10:12:08 -Generating unique operation named: updateUsingGET_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingHEAD_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPOST_18
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPUT_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPATCH_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingDELETE_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-11 10:12:08 -Generating unique operation named: updateUsingTRACE_11
2019-06-11 10:12:08 -Generating unique operation named: addUsingGET_18
2019-06-11 10:12:08 -Generating unique operation named: editUsingGET_19
2019-06-11 10:12:08 -Generating unique operation named: listUsingGET_21
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_32
2019-06-11 10:12:08 -Generating unique operation named: removeUsingPOST_33
2019-06-11 10:12:08 -Generating unique operation named: saveUsingPOST_18
2019-06-11 10:12:08 -Generating unique operation named: updateUsingGET_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingHEAD_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPOST_19
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPUT_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingPATCH_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingDELETE_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-11 10:12:08 -Generating unique operation named: updateUsingTRACE_12
2019-06-11 10:12:09 -Starting Quartz Scheduler now
2019-06-11 10:12:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-11 10:12:09 -Starting...
2019-06-11 10:12:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-11 10:12:09 -Started.
2019-06-11 10:12:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-11 10:12:09 -Using a shared selector for servlet write/read
2019-06-11 10:12:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-11 10:12:09 -Started BootdoApplication in 60.049 seconds (JVM running for 62.547)
2019-06-11 10:12:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-11 10:12:10 -==> Parameters: 
2019-06-11 10:12:10 -<==      Total: 1
2019-06-11 10:12:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-11 10:12:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-11 10:12:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-06-11 10:12:34 -Enabling session validation scheduler...
2019-06-11 10:12:34 -请求地址 : http://localhost:8081/login;JSESSIONID=53555fda-df34-4ed3-aab6-70039ab79e97
2019-06-11 10:12:34 -HTTP METHOD : GET
2019-06-11 10:12:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 10:12:34 -参数 : [{}]
2019-06-11 10:12:34 -耗时 : 4
2019-06-11 10:12:34 -返回值 : login
2019-06-11 10:12:37 -请求地址 : http://localhost:8081/getVerify
2019-06-11 10:12:37 -HTTP METHOD : GET
2019-06-11 10:12:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 10:12:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ca3530f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1c03453b]
2019-06-11 10:12:51 -3885
2019-06-11 10:12:53 -耗时 : 15866
2019-06-11 10:12:53 -返回值 : null
2019-06-11 10:12:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-11 10:13:03 -请求地址 : http://localhost:8081/login
2019-06-11 10:13:03 -HTTP METHOD : POST
2019-06-11 10:13:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 10:13:03 -参数 : [admin, 111111, 3886, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e12192b]
2019-06-11 10:13:03 -耗时 : 9
2019-06-11 10:13:03 -返回值 : {msg=请输入正确的验证码, code=500}
2019-06-11 10:13:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-11 10:13:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:13:04 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 10:13:04.016(Timestamp)
2019-06-11 10:13:04 -<==    Updates: 1
2019-06-11 10:13:09 -请求地址 : http://localhost:8081/login
2019-06-11 10:13:09 -HTTP METHOD : POST
2019-06-11 10:13:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 10:13:09 -参数 : [admin, 111111, 3885, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a753a1]
2019-06-11 10:13:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 10:13:09 -==> Parameters: admin(String)
2019-06-11 10:13:10 -<==      Total: 1
2019-06-11 10:13:10 -耗时 : 246
2019-06-11 10:13:10 -返回值 : {msg=操作成功, code=0}
2019-06-11 10:13:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:13:10 -==> Parameters: 1(Long), admin(String), 登录(String), 246(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 10:13:10.006(Timestamp)
2019-06-11 10:13:10 -请求地址 : http://localhost:8081/index
2019-06-11 10:13:10 -HTTP METHOD : GET
2019-06-11 10:13:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:13:10 -参数 : [{}]
2019-06-11 10:13:10 -<==    Updates: 1
2019-06-11 10:13:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:13:10 -==> Parameters: 1(Long)
2019-06-11 10:13:10 -<==      Total: 50
2019-06-11 10:13:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:13:10 -==> Parameters: 138(Long)
2019-06-11 10:13:10 -<==      Total: 1
2019-06-11 10:13:10 -耗时 : 477
2019-06-11 10:13:10 -返回值 : index_v1
2019-06-11 10:13:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:13:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 478(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:13:10.844(Timestamp)
2019-06-11 10:13:11 -请求地址 : http://localhost:8081/main
2019-06-11 10:13:11 -HTTP METHOD : GET
2019-06-11 10:13:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:13:11 -参数 : []
2019-06-11 10:13:11 -耗时 : 1
2019-06-11 10:13:11 -返回值 : main
2019-06-11 10:13:11 -<==    Updates: 1
2019-06-11 10:13:12 -请求地址 : http://localhost:8081/main
2019-06-11 10:13:12 -HTTP METHOD : GET
2019-06-11 10:13:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:13:12 -参数 : []
2019-06-11 10:13:12 -耗时 : 1
2019-06-11 10:13:12 -返回值 : main
2019-06-11 10:13:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:13:12 -HTTP METHOD : GET
2019-06-11 10:13:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:13:12 -参数 : []
2019-06-11 10:13:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:13:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:13:12 -<==      Total: 0
2019-06-11 10:13:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:13:12 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:13:12 -<==      Total: 1
2019-06-11 10:13:12 -耗时 : 63
2019-06-11 10:13:12 -返回值 : com.bootdo.common.utils.PageUtils@73aa0981
2019-06-11 10:13:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 10:13:29 -==> Parameters: 1(Long)
2019-06-11 10:13:29 -<==      Total: 94
2019-06-11 10:13:29 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:13:29 -HTTP METHOD : GET
2019-06-11 10:13:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:13:29 -参数 : []
2019-06-11 10:13:29 -耗时 : 0
2019-06-11 10:13:29 -返回值 : print/print/print
2019-06-11 10:13:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:13:30 -HTTP METHOD : GET
2019-06-11 10:13:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:13:30 -参数 : [userType]
2019-06-11 10:13:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:13:30 -==> Parameters: userType(String)
2019-06-11 10:13:30 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:13:30 -HTTP METHOD : GET
2019-06-11 10:13:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:13:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:13:30 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:13:31 -<==      Total: 4
2019-06-11 10:13:31 -耗时 : 324
2019-06-11 10:13:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:13:31 -<==      Total: 3
2019-06-11 10:13:31 -==>  Preparing: select count(*) from print 
2019-06-11 10:13:31 -==> Parameters: 
2019-06-11 10:13:31 -<==      Total: 1
2019-06-11 10:13:31 -耗时 : 373
2019-06-11 10:13:31 -返回值 : com.bootdo.common.utils.PageUtils@261f83c8
2019-06-11 10:13:38 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:13:38 -HTTP METHOD : POST
2019-06-11 10:13:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:13:38 -参数 : [[Ljava.lang.Long;@847e7f7]
2019-06-11 10:13:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:13:38 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:13:38 -<==      Total: 3
2019-06-11 10:13:38 -耗时 : 126
2019-06-11 10:13:38 -返回值 : [com.bootdo.print.vo.PrintVo@3685d07e, com.bootdo.print.vo.PrintVo@2c6f3587, com.bootdo.print.vo.PrintVo@1631e260]
2019-06-11 10:13:45 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:13:45 -HTTP METHOD : POST
2019-06-11 10:13:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:13:45 -参数 : [[Ljava.lang.Long;@71fa749b]
2019-06-11 10:13:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:13:45 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:13:45 -<==      Total: 3
2019-06-11 10:13:45 -耗时 : 6
2019-06-11 10:13:45 -返回值 : [com.bootdo.print.vo.PrintVo@dad8e35, com.bootdo.print.vo.PrintVo@2b0ff340, com.bootdo.print.vo.PrintVo@9730416]
2019-06-11 10:18:39 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-11 10:20:39 -请求地址 : http://localhost:8081/main
2019-06-11 10:20:39 -HTTP METHOD : GET
2019-06-11 10:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:20:39 -参数 : []
2019-06-11 10:20:39 -耗时 : 4
2019-06-11 10:20:39 -返回值 : main
2019-06-11 10:20:43 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:20:43 -HTTP METHOD : GET
2019-06-11 10:20:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:20:43 -参数 : []
2019-06-11 10:20:43 -耗时 : 1
2019-06-11 10:20:43 -返回值 : print/print/print
2019-06-11 10:20:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:20:43 -HTTP METHOD : GET
2019-06-11 10:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:20:43 -参数 : [userType]
2019-06-11 10:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:20:43 -==> Parameters: userType(String)
2019-06-11 10:20:43 -<==      Total: 4
2019-06-11 10:20:43 -耗时 : 30
2019-06-11 10:20:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:20:43 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:20:43 -HTTP METHOD : GET
2019-06-11 10:20:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:20:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:20:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:20:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:20:43 -<==      Total: 3
2019-06-11 10:20:43 -==>  Preparing: select count(*) from print 
2019-06-11 10:20:43 -==> Parameters: 
2019-06-11 10:20:43 -<==      Total: 1
2019-06-11 10:20:43 -耗时 : 12
2019-06-11 10:20:43 -返回值 : com.bootdo.common.utils.PageUtils@1113ef4a
2019-06-11 10:20:55 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:20:55 -HTTP METHOD : POST
2019-06-11 10:20:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:20:55 -参数 : [[Ljava.lang.Long;@3d4aa948]
2019-06-11 10:20:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:20:55 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:20:55 -<==      Total: 3
2019-06-11 10:20:55 -耗时 : 14
2019-06-11 10:20:55 -返回值 : [com.bootdo.print.vo.PrintVo@2bef45bc, com.bootdo.print.vo.PrintVo@56628df1, com.bootdo.print.vo.PrintVo@3eeedbf4]
2019-06-11 10:20:56 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:20:56 -HTTP METHOD : POST
2019-06-11 10:20:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:20:56 -参数 : [[Ljava.lang.Long;@687296a4]
2019-06-11 10:20:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:20:56 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:20:56 -<==      Total: 3
2019-06-11 10:20:56 -耗时 : 69
2019-06-11 10:20:56 -返回值 : [com.bootdo.print.vo.PrintVo@6a06e5c7, com.bootdo.print.vo.PrintVo@5a785672, com.bootdo.print.vo.PrintVo@11c778fc]
2019-06-11 10:21:04 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:21:04 -HTTP METHOD : POST
2019-06-11 10:21:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:21:04 -参数 : [[Ljava.lang.Long;@2779dfd0]
2019-06-11 10:21:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:21:04 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:21:04 -<==      Total: 3
2019-06-11 10:21:04 -耗时 : 7
2019-06-11 10:21:04 -返回值 : [com.bootdo.print.vo.PrintVo@174bc373, com.bootdo.print.vo.PrintVo@734db510, com.bootdo.print.vo.PrintVo@1a2373f6]
2019-06-11 10:21:15 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:21:15 -HTTP METHOD : POST
2019-06-11 10:21:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:21:15 -参数 : [[Ljava.lang.Long;@592c23b0]
2019-06-11 10:21:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:21:15 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:21:15 -<==      Total: 3
2019-06-11 10:21:15 -耗时 : 11
2019-06-11 10:21:15 -返回值 : [com.bootdo.print.vo.PrintVo@275cb2b4, com.bootdo.print.vo.PrintVo@a92330, com.bootdo.print.vo.PrintVo@46ad3e6a]
2019-06-11 10:22:19 -请求地址 : http://localhost:8081/index
2019-06-11 10:22:19 -HTTP METHOD : GET
2019-06-11 10:22:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:22:19 -参数 : [{}]
2019-06-11 10:22:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:22:19 -==> Parameters: 1(Long)
2019-06-11 10:22:19 -<==      Total: 50
2019-06-11 10:22:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:22:19 -==> Parameters: 138(Long)
2019-06-11 10:22:19 -<==      Total: 1
2019-06-11 10:22:19 -耗时 : 44
2019-06-11 10:22:19 -返回值 : index_v1
2019-06-11 10:22:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:22:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 44(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:22:19.756(Timestamp)
2019-06-11 10:22:19 -<==    Updates: 1
2019-06-11 10:22:19 -请求地址 : http://localhost:8081/main
2019-06-11 10:22:19 -HTTP METHOD : GET
2019-06-11 10:22:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:22:19 -参数 : []
2019-06-11 10:22:19 -耗时 : 1
2019-06-11 10:22:19 -返回值 : main
2019-06-11 10:22:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:22:20 -HTTP METHOD : GET
2019-06-11 10:22:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:22:20 -参数 : []
2019-06-11 10:22:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:22:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:22:20 -<==      Total: 0
2019-06-11 10:22:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:22:20 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:22:20 -<==      Total: 1
2019-06-11 10:22:20 -耗时 : 13
2019-06-11 10:22:20 -返回值 : com.bootdo.common.utils.PageUtils@705b6a84
2019-06-11 10:22:20 -请求地址 : http://localhost:8081/main
2019-06-11 10:22:20 -HTTP METHOD : GET
2019-06-11 10:22:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:22:20 -参数 : []
2019-06-11 10:22:20 -耗时 : 1
2019-06-11 10:22:20 -返回值 : main
2019-06-11 10:22:22 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:22:22 -HTTP METHOD : GET
2019-06-11 10:22:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:22:22 -参数 : []
2019-06-11 10:22:22 -耗时 : 0
2019-06-11 10:22:22 -返回值 : print/print/print
2019-06-11 10:22:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:22:22 -HTTP METHOD : GET
2019-06-11 10:22:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:22:22 -参数 : [userType]
2019-06-11 10:22:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:22:22 -==> Parameters: userType(String)
2019-06-11 10:22:22 -<==      Total: 4
2019-06-11 10:22:22 -耗时 : 4
2019-06-11 10:22:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:22:22 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:22:22 -HTTP METHOD : GET
2019-06-11 10:22:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:22:22 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:22:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:22:22 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:22:22 -<==      Total: 3
2019-06-11 10:22:22 -==>  Preparing: select count(*) from print 
2019-06-11 10:22:22 -==> Parameters: 
2019-06-11 10:22:22 -<==      Total: 1
2019-06-11 10:22:22 -耗时 : 9
2019-06-11 10:22:22 -返回值 : com.bootdo.common.utils.PageUtils@19a7c42b
2019-06-11 10:22:25 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:22:25 -HTTP METHOD : POST
2019-06-11 10:22:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:22:25 -参数 : [[Ljava.lang.Long;@1e96ae64]
2019-06-11 10:22:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:22:25 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:22:25 -<==      Total: 3
2019-06-11 10:22:25 -耗时 : 6
2019-06-11 10:22:25 -返回值 : [com.bootdo.print.vo.PrintVo@202c4f87, com.bootdo.print.vo.PrintVo@45d42537, com.bootdo.print.vo.PrintVo@6e9a5667]
2019-06-11 10:23:52 -请求地址 : http://localhost:8081/index
2019-06-11 10:23:52 -HTTP METHOD : GET
2019-06-11 10:23:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:23:52 -参数 : [{}]
2019-06-11 10:23:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:23:52 -==> Parameters: 1(Long)
2019-06-11 10:23:52 -<==      Total: 50
2019-06-11 10:23:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:23:52 -==> Parameters: 138(Long)
2019-06-11 10:23:52 -<==      Total: 1
2019-06-11 10:23:52 -耗时 : 26
2019-06-11 10:23:52 -返回值 : index_v1
2019-06-11 10:23:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:23:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:23:52.794(Timestamp)
2019-06-11 10:23:52 -请求地址 : http://localhost:8081/main
2019-06-11 10:23:52 -HTTP METHOD : GET
2019-06-11 10:23:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:23:52 -参数 : []
2019-06-11 10:23:52 -耗时 : 0
2019-06-11 10:23:52 -返回值 : main
2019-06-11 10:23:53 -<==    Updates: 1
2019-06-11 10:23:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:23:53 -HTTP METHOD : GET
2019-06-11 10:23:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:23:53 -参数 : []
2019-06-11 10:23:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:23:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:23:53 -<==      Total: 0
2019-06-11 10:23:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:23:53 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:23:53 -<==      Total: 1
2019-06-11 10:23:53 -耗时 : 11
2019-06-11 10:23:53 -返回值 : com.bootdo.common.utils.PageUtils@1c1ca5f1
2019-06-11 10:23:53 -请求地址 : http://localhost:8081/main
2019-06-11 10:23:53 -HTTP METHOD : GET
2019-06-11 10:23:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:23:53 -参数 : []
2019-06-11 10:23:53 -耗时 : 0
2019-06-11 10:23:53 -返回值 : main
2019-06-11 10:23:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 10:23:54 -==> Parameters: 1(Long)
2019-06-11 10:23:54 -<==      Total: 94
2019-06-11 10:23:54 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:23:54 -HTTP METHOD : GET
2019-06-11 10:23:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:23:54 -参数 : []
2019-06-11 10:23:54 -耗时 : 1
2019-06-11 10:23:54 -返回值 : print/print/print
2019-06-11 10:23:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:23:55 -HTTP METHOD : GET
2019-06-11 10:23:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:23:55 -参数 : [userType]
2019-06-11 10:23:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:23:55 -==> Parameters: userType(String)
2019-06-11 10:23:55 -<==      Total: 4
2019-06-11 10:23:55 -耗时 : 13
2019-06-11 10:23:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:23:55 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:23:55 -HTTP METHOD : GET
2019-06-11 10:23:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:23:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:23:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:23:55 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:23:55 -<==      Total: 3
2019-06-11 10:23:55 -==>  Preparing: select count(*) from print 
2019-06-11 10:23:55 -==> Parameters: 
2019-06-11 10:23:55 -<==      Total: 1
2019-06-11 10:23:55 -耗时 : 8
2019-06-11 10:23:55 -返回值 : com.bootdo.common.utils.PageUtils@73e4260d
2019-06-11 10:23:59 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:23:59 -HTTP METHOD : POST
2019-06-11 10:23:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:23:59 -参数 : [[Ljava.lang.Long;@20cbba9]
2019-06-11 10:23:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:23:59 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:23:59 -<==      Total: 3
2019-06-11 10:23:59 -耗时 : 5
2019-06-11 10:23:59 -返回值 : [com.bootdo.print.vo.PrintVo@63f72d5a, com.bootdo.print.vo.PrintVo@4ef353ec, com.bootdo.print.vo.PrintVo@5bbbed04]
2019-06-11 10:24:05 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:24:05 -HTTP METHOD : POST
2019-06-11 10:24:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:24:05 -参数 : [[Ljava.lang.Long;@69cd1568]
2019-06-11 10:24:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:24:05 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:24:05 -<==      Total: 3
2019-06-11 10:24:05 -耗时 : 5
2019-06-11 10:24:05 -返回值 : [com.bootdo.print.vo.PrintVo@10398d58, com.bootdo.print.vo.PrintVo@4e8569d1, com.bootdo.print.vo.PrintVo@4f62533c]
2019-06-11 10:27:33 -请求地址 : http://localhost:8081/index
2019-06-11 10:27:33 -HTTP METHOD : GET
2019-06-11 10:27:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:27:33 -参数 : [{}]
2019-06-11 10:27:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:27:33 -==> Parameters: 1(Long)
2019-06-11 10:27:33 -<==      Total: 50
2019-06-11 10:27:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:27:33 -==> Parameters: 138(Long)
2019-06-11 10:27:33 -<==      Total: 1
2019-06-11 10:27:33 -耗时 : 29
2019-06-11 10:27:33 -返回值 : index_v1
2019-06-11 10:27:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:27:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:27:33.79(Timestamp)
2019-06-11 10:27:33 -请求地址 : http://localhost:8081/main
2019-06-11 10:27:33 -HTTP METHOD : GET
2019-06-11 10:27:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:27:33 -参数 : []
2019-06-11 10:27:33 -耗时 : 1
2019-06-11 10:27:33 -返回值 : main
2019-06-11 10:27:33 -<==    Updates: 1
2019-06-11 10:27:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:27:34 -HTTP METHOD : GET
2019-06-11 10:27:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:27:34 -参数 : []
2019-06-11 10:27:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:27:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:27:34 -<==      Total: 0
2019-06-11 10:27:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:27:34 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:27:34 -<==      Total: 1
2019-06-11 10:27:34 -耗时 : 6
2019-06-11 10:27:34 -返回值 : com.bootdo.common.utils.PageUtils@7fdbe007
2019-06-11 10:27:34 -请求地址 : http://localhost:8081/main
2019-06-11 10:27:34 -HTTP METHOD : GET
2019-06-11 10:27:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:27:34 -参数 : []
2019-06-11 10:27:34 -耗时 : 1
2019-06-11 10:27:34 -返回值 : main
2019-06-11 10:28:07 -请求地址 : http://localhost:8081/login;JSESSIONID=a14d57cb-85f0-46ee-9dba-9065745dbd86
2019-06-11 10:28:07 -HTTP METHOD : GET
2019-06-11 10:28:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 10:28:07 -参数 : [{}]
2019-06-11 10:28:07 -耗时 : 0
2019-06-11 10:28:07 -返回值 : login
2019-06-11 10:28:07 -请求地址 : http://localhost:8081/login;JSESSIONID=a14d57cb-85f0-46ee-9dba-9065745dbd86
2019-06-11 10:28:07 -HTTP METHOD : GET
2019-06-11 10:28:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 10:28:07 -参数 : [{}]
2019-06-11 10:28:07 -耗时 : 1
2019-06-11 10:28:07 -返回值 : login
2019-06-11 10:28:07 -请求地址 : http://localhost:8081/getVerify
2019-06-11 10:28:07 -HTTP METHOD : GET
2019-06-11 10:28:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 10:28:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1952512c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e232158]
2019-06-11 10:28:07 -0372
2019-06-11 10:28:07 -耗时 : 64
2019-06-11 10:28:07 -返回值 : null
2019-06-11 10:28:08 -请求地址 : http://localhost:8081/getVerify
2019-06-11 10:28:08 -HTTP METHOD : GET
2019-06-11 10:28:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 10:28:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c433478, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40b5ed92]
2019-06-11 10:28:08 -1189
2019-06-11 10:28:08 -耗时 : 24
2019-06-11 10:28:08 -返回值 : null
2019-06-11 10:28:08 -请求地址 : http://localhost:8081/login
2019-06-11 10:28:08 -HTTP METHOD : GET
2019-06-11 10:28:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 10:28:08 -参数 : [{}]
2019-06-11 10:28:08 -耗时 : 1
2019-06-11 10:28:08 -返回值 : login
2019-06-11 10:28:11 -请求地址 : http://localhost:8081/login
2019-06-11 10:28:11 -HTTP METHOD : POST
2019-06-11 10:28:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 10:28:11 -参数 : [admin, 111111, 1189, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d2d1960]
2019-06-11 10:28:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 10:28:11 -==> Parameters: admin(String)
2019-06-11 10:28:11 -<==      Total: 1
2019-06-11 10:28:11 -耗时 : 8
2019-06-11 10:28:11 -返回值 : {msg=操作成功, code=0}
2019-06-11 10:28:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:28:12 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 10:28:11.971(Timestamp)
2019-06-11 10:28:12 -请求地址 : http://localhost:8081/index
2019-06-11 10:28:12 -HTTP METHOD : GET
2019-06-11 10:28:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:28:12 -参数 : [{}]
2019-06-11 10:28:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:28:12 -==> Parameters: 1(Long)
2019-06-11 10:28:12 -<==      Total: 50
2019-06-11 10:28:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:28:12 -==> Parameters: 138(Long)
2019-06-11 10:28:12 -<==      Total: 1
2019-06-11 10:28:12 -耗时 : 21
2019-06-11 10:28:12 -返回值 : index_v1
2019-06-11 10:28:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:28:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:28:12.044(Timestamp)
2019-06-11 10:28:12 -<==    Updates: 1
2019-06-11 10:28:12 -请求地址 : http://localhost:8081/main
2019-06-11 10:28:12 -HTTP METHOD : GET
2019-06-11 10:28:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:28:12 -参数 : []
2019-06-11 10:28:12 -耗时 : 1
2019-06-11 10:28:12 -返回值 : main
2019-06-11 10:28:12 -<==    Updates: 1
2019-06-11 10:28:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:28:12 -HTTP METHOD : GET
2019-06-11 10:28:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:28:12 -参数 : []
2019-06-11 10:28:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:28:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:28:12 -<==      Total: 0
2019-06-11 10:28:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:28:12 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:28:12 -<==      Total: 1
2019-06-11 10:28:12 -耗时 : 5
2019-06-11 10:28:12 -返回值 : com.bootdo.common.utils.PageUtils@cd27caf
2019-06-11 10:28:12 -请求地址 : http://localhost:8081/main
2019-06-11 10:28:12 -HTTP METHOD : GET
2019-06-11 10:28:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:28:12 -参数 : []
2019-06-11 10:28:12 -耗时 : 1
2019-06-11 10:28:12 -返回值 : main
2019-06-11 10:28:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 10:28:17 -==> Parameters: 1(Long)
2019-06-11 10:28:17 -<==      Total: 94
2019-06-11 10:28:17 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:28:17 -HTTP METHOD : GET
2019-06-11 10:28:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:28:17 -参数 : []
2019-06-11 10:28:17 -耗时 : 0
2019-06-11 10:28:17 -返回值 : print/print/print
2019-06-11 10:28:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:28:18 -HTTP METHOD : GET
2019-06-11 10:28:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:28:18 -参数 : [userType]
2019-06-11 10:28:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:28:18 -==> Parameters: userType(String)
2019-06-11 10:28:18 -<==      Total: 4
2019-06-11 10:28:18 -耗时 : 7
2019-06-11 10:28:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:28:18 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:28:18 -HTTP METHOD : GET
2019-06-11 10:28:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:28:18 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:28:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:28:18 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:28:18 -<==      Total: 3
2019-06-11 10:28:18 -==>  Preparing: select count(*) from print 
2019-06-11 10:28:18 -==> Parameters: 
2019-06-11 10:28:18 -<==      Total: 1
2019-06-11 10:28:18 -耗时 : 12
2019-06-11 10:28:18 -返回值 : com.bootdo.common.utils.PageUtils@491f826f
2019-06-11 10:28:22 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:28:22 -HTTP METHOD : POST
2019-06-11 10:28:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:28:22 -参数 : [[Ljava.lang.Long;@12124bcc]
2019-06-11 10:28:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:28:22 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:28:22 -<==      Total: 3
2019-06-11 10:28:22 -耗时 : 14
2019-06-11 10:28:22 -返回值 : [com.bootdo.print.vo.PrintVo@5552d665, com.bootdo.print.vo.PrintVo@5c88707b, com.bootdo.print.vo.PrintVo@5cc41c0d]
2019-06-11 10:28:53 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:28:53 -HTTP METHOD : POST
2019-06-11 10:28:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:28:53 -参数 : [[Ljava.lang.Long;@5268d19e]
2019-06-11 10:28:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:28:53 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:28:53 -<==      Total: 3
2019-06-11 10:28:53 -耗时 : 34
2019-06-11 10:28:53 -返回值 : [com.bootdo.print.vo.PrintVo@71b7bccd, com.bootdo.print.vo.PrintVo@73abe2f8, com.bootdo.print.vo.PrintVo@c49d268]
2019-06-11 10:29:04 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:29:04 -HTTP METHOD : POST
2019-06-11 10:29:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:29:04 -参数 : [[Ljava.lang.Long;@557f00b6]
2019-06-11 10:29:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:29:04 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:29:04 -<==      Total: 3
2019-06-11 10:29:04 -耗时 : 5
2019-06-11 10:29:04 -返回值 : [com.bootdo.print.vo.PrintVo@333b5e82, com.bootdo.print.vo.PrintVo@3106b43e, com.bootdo.print.vo.PrintVo@1c516818]
2019-06-11 10:29:47 -请求地址 : http://localhost:8081/index
2019-06-11 10:29:47 -HTTP METHOD : GET
2019-06-11 10:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:29:47 -参数 : [{}]
2019-06-11 10:29:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:29:47 -==> Parameters: 1(Long)
2019-06-11 10:29:47 -<==      Total: 50
2019-06-11 10:29:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:29:47 -==> Parameters: 138(Long)
2019-06-11 10:29:47 -<==      Total: 1
2019-06-11 10:29:47 -耗时 : 18
2019-06-11 10:29:47 -返回值 : index_v1
2019-06-11 10:29:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:29:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:29:47.713(Timestamp)
2019-06-11 10:29:47 -请求地址 : http://localhost:8081/main
2019-06-11 10:29:47 -HTTP METHOD : GET
2019-06-11 10:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:29:47 -参数 : []
2019-06-11 10:29:47 -耗时 : 0
2019-06-11 10:29:47 -返回值 : main
2019-06-11 10:29:47 -<==    Updates: 1
2019-06-11 10:29:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:29:48 -HTTP METHOD : GET
2019-06-11 10:29:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:29:48 -参数 : []
2019-06-11 10:29:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:29:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:29:48 -<==      Total: 0
2019-06-11 10:29:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:29:48 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:29:48 -<==      Total: 1
2019-06-11 10:29:48 -耗时 : 47
2019-06-11 10:29:48 -返回值 : com.bootdo.common.utils.PageUtils@f3690ce
2019-06-11 10:29:48 -请求地址 : http://localhost:8081/main
2019-06-11 10:29:48 -HTTP METHOD : GET
2019-06-11 10:29:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:29:48 -参数 : []
2019-06-11 10:29:48 -耗时 : 0
2019-06-11 10:29:48 -返回值 : main
2019-06-11 10:29:51 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:29:51 -HTTP METHOD : GET
2019-06-11 10:29:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:29:51 -参数 : []
2019-06-11 10:29:51 -耗时 : 1
2019-06-11 10:29:51 -返回值 : print/print/print
2019-06-11 10:29:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:29:51 -HTTP METHOD : GET
2019-06-11 10:29:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:29:51 -参数 : [userType]
2019-06-11 10:29:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:29:51 -==> Parameters: userType(String)
2019-06-11 10:29:51 -<==      Total: 4
2019-06-11 10:29:51 -耗时 : 4
2019-06-11 10:29:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:29:51 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:29:51 -HTTP METHOD : GET
2019-06-11 10:29:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:29:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:29:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:29:51 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:29:51 -<==      Total: 3
2019-06-11 10:29:51 -==>  Preparing: select count(*) from print 
2019-06-11 10:29:51 -==> Parameters: 
2019-06-11 10:29:51 -<==      Total: 1
2019-06-11 10:29:51 -耗时 : 8
2019-06-11 10:29:51 -返回值 : com.bootdo.common.utils.PageUtils@12eac8f8
2019-06-11 10:29:54 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:29:54 -HTTP METHOD : POST
2019-06-11 10:29:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:29:54 -参数 : [[Ljava.lang.Long;@3e2611ee]
2019-06-11 10:29:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:29:54 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:29:54 -<==      Total: 3
2019-06-11 10:29:54 -耗时 : 5
2019-06-11 10:29:54 -返回值 : [com.bootdo.print.vo.PrintVo@3ea50d0f, com.bootdo.print.vo.PrintVo@26968530, com.bootdo.print.vo.PrintVo@28b1596d]
2019-06-11 10:33:50 -请求地址 : http://localhost:8081/index
2019-06-11 10:33:50 -HTTP METHOD : GET
2019-06-11 10:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:33:50 -参数 : [{}]
2019-06-11 10:33:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:33:50 -==> Parameters: 1(Long)
2019-06-11 10:33:50 -<==      Total: 50
2019-06-11 10:33:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:33:50 -==> Parameters: 138(Long)
2019-06-11 10:33:50 -<==      Total: 1
2019-06-11 10:33:50 -耗时 : 18
2019-06-11 10:33:50 -返回值 : index_v1
2019-06-11 10:33:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:33:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:33:50.995(Timestamp)
2019-06-11 10:33:51 -请求地址 : http://localhost:8081/main
2019-06-11 10:33:51 -HTTP METHOD : GET
2019-06-11 10:33:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:33:51 -参数 : []
2019-06-11 10:33:51 -耗时 : 0
2019-06-11 10:33:51 -返回值 : main
2019-06-11 10:33:51 -<==    Updates: 1
2019-06-11 10:33:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:33:51 -HTTP METHOD : GET
2019-06-11 10:33:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:33:51 -参数 : []
2019-06-11 10:33:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:33:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:33:51 -<==      Total: 0
2019-06-11 10:33:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:33:51 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:33:51 -<==      Total: 1
2019-06-11 10:33:51 -耗时 : 8
2019-06-11 10:33:51 -返回值 : com.bootdo.common.utils.PageUtils@3a28145f
2019-06-11 10:33:51 -请求地址 : http://localhost:8081/main
2019-06-11 10:33:51 -HTTP METHOD : GET
2019-06-11 10:33:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:33:51 -参数 : []
2019-06-11 10:33:51 -耗时 : 1
2019-06-11 10:33:51 -返回值 : main
2019-06-11 10:33:58 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:33:58 -HTTP METHOD : GET
2019-06-11 10:33:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:33:58 -参数 : []
2019-06-11 10:33:58 -耗时 : 1
2019-06-11 10:33:58 -返回值 : print/print/print
2019-06-11 10:33:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:33:58 -HTTP METHOD : GET
2019-06-11 10:33:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:33:58 -参数 : [userType]
2019-06-11 10:33:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:33:58 -==> Parameters: userType(String)
2019-06-11 10:33:58 -<==      Total: 4
2019-06-11 10:33:58 -耗时 : 4
2019-06-11 10:33:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:33:58 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:33:58 -HTTP METHOD : GET
2019-06-11 10:33:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:33:58 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:33:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:33:58 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:33:58 -<==      Total: 3
2019-06-11 10:33:58 -==>  Preparing: select count(*) from print 
2019-06-11 10:33:58 -==> Parameters: 
2019-06-11 10:33:58 -<==      Total: 1
2019-06-11 10:33:58 -耗时 : 8
2019-06-11 10:33:58 -返回值 : com.bootdo.common.utils.PageUtils@3af0f724
2019-06-11 10:35:44 -请求地址 : http://localhost:8081/index
2019-06-11 10:35:44 -HTTP METHOD : GET
2019-06-11 10:35:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:35:44 -参数 : [{}]
2019-06-11 10:35:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:35:44 -==> Parameters: 1(Long)
2019-06-11 10:35:44 -<==      Total: 50
2019-06-11 10:35:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:35:44 -==> Parameters: 138(Long)
2019-06-11 10:35:44 -<==      Total: 1
2019-06-11 10:35:44 -耗时 : 18
2019-06-11 10:35:44 -返回值 : index_v1
2019-06-11 10:35:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:35:45 -请求地址 : http://localhost:8081/main
2019-06-11 10:35:45 -HTTP METHOD : GET
2019-06-11 10:35:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:35:45 -参数 : []
2019-06-11 10:35:45 -耗时 : 0
2019-06-11 10:35:45 -返回值 : main
2019-06-11 10:35:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:35:44.96(Timestamp)
2019-06-11 10:35:45 -<==    Updates: 1
2019-06-11 10:35:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:35:45 -HTTP METHOD : GET
2019-06-11 10:35:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:35:45 -参数 : []
2019-06-11 10:35:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:35:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:35:45 -<==      Total: 0
2019-06-11 10:35:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:35:45 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:35:45 -<==      Total: 1
2019-06-11 10:35:45 -耗时 : 9
2019-06-11 10:35:45 -返回值 : com.bootdo.common.utils.PageUtils@245fb97
2019-06-11 10:35:45 -请求地址 : http://localhost:8081/main
2019-06-11 10:35:45 -HTTP METHOD : GET
2019-06-11 10:35:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:35:45 -参数 : []
2019-06-11 10:35:45 -耗时 : 0
2019-06-11 10:35:45 -返回值 : main
2019-06-11 10:35:50 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:35:50 -HTTP METHOD : GET
2019-06-11 10:35:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:35:50 -参数 : []
2019-06-11 10:35:50 -耗时 : 1
2019-06-11 10:35:50 -返回值 : print/print/print
2019-06-11 10:35:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:35:51 -HTTP METHOD : GET
2019-06-11 10:35:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:35:51 -参数 : [userType]
2019-06-11 10:35:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:35:51 -==> Parameters: userType(String)
2019-06-11 10:35:51 -<==      Total: 4
2019-06-11 10:35:51 -耗时 : 4
2019-06-11 10:35:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:35:51 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:35:51 -HTTP METHOD : GET
2019-06-11 10:35:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:35:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:35:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:35:51 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:35:51 -<==      Total: 3
2019-06-11 10:35:51 -==>  Preparing: select count(*) from print 
2019-06-11 10:35:51 -==> Parameters: 
2019-06-11 10:35:51 -<==      Total: 1
2019-06-11 10:35:51 -耗时 : 7
2019-06-11 10:35:51 -返回值 : com.bootdo.common.utils.PageUtils@f4c455e
2019-06-11 10:35:55 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:35:55 -HTTP METHOD : POST
2019-06-11 10:35:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:35:55 -参数 : [[Ljava.lang.Long;@78b1fb62]
2019-06-11 10:35:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:35:55 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:35:55 -<==      Total: 3
2019-06-11 10:35:55 -耗时 : 5
2019-06-11 10:35:55 -返回值 : [com.bootdo.print.vo.PrintVo@42e68c34, com.bootdo.print.vo.PrintVo@69d1cf8a, com.bootdo.print.vo.PrintVo@1e4c4339]
2019-06-11 10:37:52 -请求地址 : http://localhost:8081/index
2019-06-11 10:37:52 -HTTP METHOD : GET
2019-06-11 10:37:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:37:52 -参数 : [{}]
2019-06-11 10:37:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:37:52 -==> Parameters: 1(Long)
2019-06-11 10:37:52 -<==      Total: 50
2019-06-11 10:37:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:37:52 -==> Parameters: 138(Long)
2019-06-11 10:37:52 -<==      Total: 1
2019-06-11 10:37:52 -耗时 : 17
2019-06-11 10:37:52 -返回值 : index_v1
2019-06-11 10:37:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:37:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:37:52.17(Timestamp)
2019-06-11 10:37:52 -请求地址 : http://localhost:8081/main
2019-06-11 10:37:52 -HTTP METHOD : GET
2019-06-11 10:37:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:37:52 -参数 : []
2019-06-11 10:37:52 -耗时 : 0
2019-06-11 10:37:52 -返回值 : main
2019-06-11 10:37:52 -<==    Updates: 1
2019-06-11 10:37:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:37:52 -HTTP METHOD : GET
2019-06-11 10:37:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:37:52 -参数 : []
2019-06-11 10:37:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:37:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:37:52 -<==      Total: 0
2019-06-11 10:37:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:37:52 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:37:52 -<==      Total: 1
2019-06-11 10:37:52 -耗时 : 7
2019-06-11 10:37:52 -返回值 : com.bootdo.common.utils.PageUtils@40634061
2019-06-11 10:37:52 -请求地址 : http://localhost:8081/main
2019-06-11 10:37:52 -HTTP METHOD : GET
2019-06-11 10:37:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:37:52 -参数 : []
2019-06-11 10:37:52 -耗时 : 0
2019-06-11 10:37:52 -返回值 : main
2019-06-11 10:37:55 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:37:55 -HTTP METHOD : GET
2019-06-11 10:37:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:37:55 -参数 : []
2019-06-11 10:37:55 -耗时 : 1
2019-06-11 10:37:55 -返回值 : print/print/print
2019-06-11 10:37:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:37:55 -HTTP METHOD : GET
2019-06-11 10:37:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:37:55 -参数 : [userType]
2019-06-11 10:37:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:37:55 -==> Parameters: userType(String)
2019-06-11 10:37:55 -<==      Total: 4
2019-06-11 10:37:55 -耗时 : 4
2019-06-11 10:37:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:37:55 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:37:55 -HTTP METHOD : GET
2019-06-11 10:37:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:37:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:37:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:37:55 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:37:55 -<==      Total: 3
2019-06-11 10:37:55 -==>  Preparing: select count(*) from print 
2019-06-11 10:37:55 -==> Parameters: 
2019-06-11 10:37:55 -<==      Total: 1
2019-06-11 10:37:55 -耗时 : 7
2019-06-11 10:37:55 -返回值 : com.bootdo.common.utils.PageUtils@15e4cebd
2019-06-11 10:37:58 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:37:58 -HTTP METHOD : POST
2019-06-11 10:37:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:37:58 -参数 : [[Ljava.lang.Long;@2c140686]
2019-06-11 10:37:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:37:58 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:37:58 -<==      Total: 3
2019-06-11 10:37:58 -耗时 : 6
2019-06-11 10:37:58 -返回值 : [com.bootdo.print.vo.PrintVo@458acde8, com.bootdo.print.vo.PrintVo@68491ba8, com.bootdo.print.vo.PrintVo@64650011]
2019-06-11 10:38:02 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:38:02 -HTTP METHOD : POST
2019-06-11 10:38:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:38:02 -参数 : [[Ljava.lang.Long;@519306d4]
2019-06-11 10:38:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:38:02 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:38:02 -<==      Total: 3
2019-06-11 10:38:02 -耗时 : 5
2019-06-11 10:38:02 -返回值 : [com.bootdo.print.vo.PrintVo@2b91424, com.bootdo.print.vo.PrintVo@3c4a0c2, com.bootdo.print.vo.PrintVo@4aa8b3c8]
2019-06-11 10:39:03 -请求地址 : http://localhost:8081/index
2019-06-11 10:39:03 -HTTP METHOD : GET
2019-06-11 10:39:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:39:03 -参数 : [{}]
2019-06-11 10:39:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:39:03 -==> Parameters: 1(Long)
2019-06-11 10:39:03 -<==      Total: 50
2019-06-11 10:39:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:39:03 -==> Parameters: 138(Long)
2019-06-11 10:39:03 -<==      Total: 1
2019-06-11 10:39:03 -耗时 : 17
2019-06-11 10:39:03 -返回值 : index_v1
2019-06-11 10:39:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:39:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:39:03.803(Timestamp)
2019-06-11 10:39:03 -请求地址 : http://localhost:8081/main
2019-06-11 10:39:03 -HTTP METHOD : GET
2019-06-11 10:39:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:39:03 -参数 : []
2019-06-11 10:39:03 -耗时 : 0
2019-06-11 10:39:03 -返回值 : main
2019-06-11 10:39:03 -<==    Updates: 1
2019-06-11 10:39:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:39:04 -HTTP METHOD : GET
2019-06-11 10:39:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:39:04 -参数 : []
2019-06-11 10:39:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:39:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:39:04 -<==      Total: 0
2019-06-11 10:39:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:39:04 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:39:04 -<==      Total: 1
2019-06-11 10:39:04 -耗时 : 9
2019-06-11 10:39:04 -返回值 : com.bootdo.common.utils.PageUtils@2488d9b3
2019-06-11 10:39:04 -请求地址 : http://localhost:8081/main
2019-06-11 10:39:04 -HTTP METHOD : GET
2019-06-11 10:39:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:39:04 -参数 : []
2019-06-11 10:39:04 -耗时 : 1
2019-06-11 10:39:04 -返回值 : main
2019-06-11 10:39:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 10:39:06 -==> Parameters: 1(Long)
2019-06-11 10:39:06 -<==      Total: 94
2019-06-11 10:39:06 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:39:06 -HTTP METHOD : GET
2019-06-11 10:39:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:39:06 -参数 : []
2019-06-11 10:39:06 -耗时 : 0
2019-06-11 10:39:06 -返回值 : print/print/print
2019-06-11 10:42:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 419]
2019-06-11 10:48:52 -请求地址 : http://localhost:8081/index
2019-06-11 10:48:52 -HTTP METHOD : GET
2019-06-11 10:48:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:48:52 -参数 : [{}]
2019-06-11 10:48:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:48:52 -==> Parameters: 1(Long)
2019-06-11 10:48:52 -<==      Total: 50
2019-06-11 10:48:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:48:52 -==> Parameters: 138(Long)
2019-06-11 10:48:52 -<==      Total: 1
2019-06-11 10:48:52 -耗时 : 15
2019-06-11 10:48:52 -返回值 : index_v1
2019-06-11 10:48:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:48:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:48:52.939(Timestamp)
2019-06-11 10:48:53 -请求地址 : http://localhost:8081/main
2019-06-11 10:48:53 -HTTP METHOD : GET
2019-06-11 10:48:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:48:53 -参数 : []
2019-06-11 10:48:53 -耗时 : 1
2019-06-11 10:48:53 -返回值 : main
2019-06-11 10:48:53 -<==    Updates: 1
2019-06-11 10:48:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:48:53 -HTTP METHOD : GET
2019-06-11 10:48:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:48:53 -参数 : []
2019-06-11 10:48:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:48:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:48:53 -<==      Total: 0
2019-06-11 10:48:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:48:53 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:48:53 -<==      Total: 1
2019-06-11 10:48:53 -耗时 : 9
2019-06-11 10:48:53 -返回值 : com.bootdo.common.utils.PageUtils@5cbd861b
2019-06-11 10:48:53 -请求地址 : http://localhost:8081/main
2019-06-11 10:48:53 -HTTP METHOD : GET
2019-06-11 10:48:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:48:53 -参数 : []
2019-06-11 10:48:53 -耗时 : 0
2019-06-11 10:48:53 -返回值 : main
2019-06-11 10:48:57 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:48:57 -HTTP METHOD : GET
2019-06-11 10:48:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:48:57 -参数 : []
2019-06-11 10:48:57 -耗时 : 0
2019-06-11 10:48:57 -返回值 : print/print/print
2019-06-11 10:50:01 -请求地址 : http://localhost:8081/index
2019-06-11 10:50:01 -HTTP METHOD : GET
2019-06-11 10:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:50:01 -参数 : [{}]
2019-06-11 10:50:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:50:01 -==> Parameters: 1(Long)
2019-06-11 10:50:01 -<==      Total: 50
2019-06-11 10:50:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:50:01 -==> Parameters: 138(Long)
2019-06-11 10:50:01 -<==      Total: 1
2019-06-11 10:50:01 -耗时 : 17
2019-06-11 10:50:01 -返回值 : index_v1
2019-06-11 10:50:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:50:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:50:01.14(Timestamp)
2019-06-11 10:50:01 -<==    Updates: 1
2019-06-11 10:50:01 -请求地址 : http://localhost:8081/main
2019-06-11 10:50:01 -HTTP METHOD : GET
2019-06-11 10:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:50:01 -参数 : []
2019-06-11 10:50:01 -耗时 : 1
2019-06-11 10:50:01 -返回值 : main
2019-06-11 10:50:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:50:01 -HTTP METHOD : GET
2019-06-11 10:50:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:50:01 -参数 : []
2019-06-11 10:50:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:50:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:50:01 -<==      Total: 0
2019-06-11 10:50:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:50:01 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:50:01 -<==      Total: 1
2019-06-11 10:50:01 -耗时 : 9
2019-06-11 10:50:01 -返回值 : com.bootdo.common.utils.PageUtils@65d7cd85
2019-06-11 10:50:02 -请求地址 : http://localhost:8081/main
2019-06-11 10:50:02 -HTTP METHOD : GET
2019-06-11 10:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:50:02 -参数 : []
2019-06-11 10:50:02 -耗时 : 0
2019-06-11 10:50:02 -返回值 : main
2019-06-11 10:50:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 10:50:05 -==> Parameters: 1(Long)
2019-06-11 10:50:05 -<==      Total: 94
2019-06-11 10:50:05 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:50:05 -HTTP METHOD : GET
2019-06-11 10:50:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:50:05 -参数 : []
2019-06-11 10:50:05 -耗时 : 1
2019-06-11 10:50:05 -返回值 : print/print/print
2019-06-11 10:50:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:50:05 -HTTP METHOD : GET
2019-06-11 10:50:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:50:05 -参数 : [userType]
2019-06-11 10:50:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:50:05 -==> Parameters: userType(String)
2019-06-11 10:50:05 -<==      Total: 4
2019-06-11 10:50:05 -耗时 : 4
2019-06-11 10:50:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:50:05 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:50:05 -HTTP METHOD : GET
2019-06-11 10:50:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:50:05 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:50:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:50:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:50:05 -<==      Total: 3
2019-06-11 10:50:05 -==>  Preparing: select count(*) from print 
2019-06-11 10:50:05 -==> Parameters: 
2019-06-11 10:50:05 -<==      Total: 1
2019-06-11 10:50:05 -耗时 : 7
2019-06-11 10:50:05 -返回值 : com.bootdo.common.utils.PageUtils@16fe6002
2019-06-11 10:50:10 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:50:10 -HTTP METHOD : POST
2019-06-11 10:50:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:50:10 -参数 : [[Ljava.lang.Long;@5a45aa1a]
2019-06-11 10:50:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:50:10 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:50:10 -<==      Total: 3
2019-06-11 10:50:10 -耗时 : 5
2019-06-11 10:50:10 -返回值 : [com.bootdo.print.vo.PrintVo@68e61056, com.bootdo.print.vo.PrintVo@1d1d40c7, com.bootdo.print.vo.PrintVo@6a7f3c04]
2019-06-11 10:52:50 -请求地址 : http://localhost:8081/index
2019-06-11 10:52:50 -HTTP METHOD : GET
2019-06-11 10:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:52:50 -参数 : [{}]
2019-06-11 10:52:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:52:50 -==> Parameters: 1(Long)
2019-06-11 10:52:50 -<==      Total: 50
2019-06-11 10:52:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:52:50 -==> Parameters: 138(Long)
2019-06-11 10:52:50 -<==      Total: 1
2019-06-11 10:52:50 -耗时 : 19
2019-06-11 10:52:50 -返回值 : index_v1
2019-06-11 10:52:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:52:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:52:50.45(Timestamp)
2019-06-11 10:52:50 -请求地址 : http://localhost:8081/main
2019-06-11 10:52:50 -HTTP METHOD : GET
2019-06-11 10:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:52:50 -参数 : []
2019-06-11 10:52:50 -耗时 : 0
2019-06-11 10:52:50 -返回值 : main
2019-06-11 10:52:50 -<==    Updates: 1
2019-06-11 10:52:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:52:50 -HTTP METHOD : GET
2019-06-11 10:52:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:52:50 -参数 : []
2019-06-11 10:52:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:52:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:52:50 -<==      Total: 0
2019-06-11 10:52:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:52:50 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:52:50 -<==      Total: 1
2019-06-11 10:52:50 -耗时 : 7
2019-06-11 10:52:50 -返回值 : com.bootdo.common.utils.PageUtils@9123e33
2019-06-11 10:52:50 -请求地址 : http://localhost:8081/main
2019-06-11 10:52:50 -HTTP METHOD : GET
2019-06-11 10:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:52:50 -参数 : []
2019-06-11 10:52:50 -耗时 : 1
2019-06-11 10:52:50 -返回值 : main
2019-06-11 10:52:58 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:52:58 -HTTP METHOD : GET
2019-06-11 10:52:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:52:58 -参数 : []
2019-06-11 10:52:58 -耗时 : 0
2019-06-11 10:52:58 -返回值 : print/print/print
2019-06-11 10:52:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:52:59 -HTTP METHOD : GET
2019-06-11 10:52:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:52:59 -参数 : [userType]
2019-06-11 10:52:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:52:59 -==> Parameters: userType(String)
2019-06-11 10:52:59 -<==      Total: 4
2019-06-11 10:52:59 -耗时 : 4
2019-06-11 10:52:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:52:59 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:52:59 -HTTP METHOD : GET
2019-06-11 10:52:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:52:59 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:52:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:52:59 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:52:59 -<==      Total: 3
2019-06-11 10:52:59 -==>  Preparing: select count(*) from print 
2019-06-11 10:52:59 -==> Parameters: 
2019-06-11 10:52:59 -<==      Total: 1
2019-06-11 10:52:59 -耗时 : 6
2019-06-11 10:52:59 -返回值 : com.bootdo.common.utils.PageUtils@78b029d4
2019-06-11 10:53:02 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:53:02 -HTTP METHOD : POST
2019-06-11 10:53:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:53:02 -参数 : [[Ljava.lang.Long;@32f772ee]
2019-06-11 10:53:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:53:02 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:53:02 -<==      Total: 3
2019-06-11 10:53:02 -耗时 : 5
2019-06-11 10:53:02 -返回值 : [com.bootdo.print.vo.PrintVo@1da07902, com.bootdo.print.vo.PrintVo@478282ea, com.bootdo.print.vo.PrintVo@4eebf8f6]
2019-06-11 10:53:06 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:53:06 -HTTP METHOD : POST
2019-06-11 10:53:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:53:06 -参数 : [[Ljava.lang.Long;@5ccd60cf]
2019-06-11 10:53:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:53:06 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:53:06 -<==      Total: 3
2019-06-11 10:53:06 -耗时 : 10
2019-06-11 10:53:06 -返回值 : [com.bootdo.print.vo.PrintVo@5365bc8f, com.bootdo.print.vo.PrintVo@65b61ce8, com.bootdo.print.vo.PrintVo@524ad389]
2019-06-11 10:54:50 -请求地址 : http://localhost:8081/index
2019-06-11 10:54:50 -HTTP METHOD : GET
2019-06-11 10:54:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:54:50 -参数 : [{}]
2019-06-11 10:54:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:54:50 -==> Parameters: 1(Long)
2019-06-11 10:54:50 -<==      Total: 50
2019-06-11 10:54:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:54:50 -==> Parameters: 138(Long)
2019-06-11 10:54:50 -<==      Total: 1
2019-06-11 10:54:50 -耗时 : 16
2019-06-11 10:54:50 -返回值 : index_v1
2019-06-11 10:54:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:54:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:54:50.669(Timestamp)
2019-06-11 10:54:50 -请求地址 : http://localhost:8081/main
2019-06-11 10:54:50 -HTTP METHOD : GET
2019-06-11 10:54:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:54:50 -参数 : []
2019-06-11 10:54:50 -耗时 : 0
2019-06-11 10:54:50 -返回值 : main
2019-06-11 10:54:50 -<==    Updates: 1
2019-06-11 10:54:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:54:50 -HTTP METHOD : GET
2019-06-11 10:54:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:54:50 -参数 : []
2019-06-11 10:54:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:54:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:54:50 -<==      Total: 0
2019-06-11 10:54:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:54:50 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:54:50 -请求地址 : http://localhost:8081/main
2019-06-11 10:54:50 -HTTP METHOD : GET
2019-06-11 10:54:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:54:50 -参数 : []
2019-06-11 10:54:50 -耗时 : 0
2019-06-11 10:54:50 -返回值 : main
2019-06-11 10:54:50 -<==      Total: 1
2019-06-11 10:54:50 -耗时 : 83
2019-06-11 10:54:50 -返回值 : com.bootdo.common.utils.PageUtils@740d45bb
2019-06-11 10:54:56 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:54:56 -HTTP METHOD : GET
2019-06-11 10:54:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:54:56 -参数 : []
2019-06-11 10:54:56 -耗时 : 1
2019-06-11 10:54:56 -返回值 : print/print/print
2019-06-11 10:54:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:54:56 -HTTP METHOD : GET
2019-06-11 10:54:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:54:56 -参数 : [userType]
2019-06-11 10:54:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:54:56 -==> Parameters: userType(String)
2019-06-11 10:54:56 -<==      Total: 4
2019-06-11 10:54:56 -耗时 : 4
2019-06-11 10:54:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:54:56 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:54:56 -HTTP METHOD : GET
2019-06-11 10:54:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:54:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:54:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:54:56 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:54:56 -<==      Total: 3
2019-06-11 10:54:56 -==>  Preparing: select count(*) from print 
2019-06-11 10:54:56 -==> Parameters: 
2019-06-11 10:54:56 -<==      Total: 1
2019-06-11 10:54:56 -耗时 : 8
2019-06-11 10:54:56 -返回值 : com.bootdo.common.utils.PageUtils@2adaa83d
2019-06-11 10:54:59 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:54:59 -HTTP METHOD : POST
2019-06-11 10:54:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:54:59 -参数 : [[Ljava.lang.Long;@29a3c938]
2019-06-11 10:54:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:54:59 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:54:59 -<==      Total: 3
2019-06-11 10:54:59 -耗时 : 5
2019-06-11 10:54:59 -返回值 : [com.bootdo.print.vo.PrintVo@667b5f96, com.bootdo.print.vo.PrintVo@1aafcb34, com.bootdo.print.vo.PrintVo@2df22b50]
2019-06-11 10:55:31 -请求地址 : http://localhost:8081/index
2019-06-11 10:55:31 -HTTP METHOD : GET
2019-06-11 10:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:55:31 -参数 : [{}]
2019-06-11 10:55:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:55:31 -==> Parameters: 1(Long)
2019-06-11 10:55:31 -<==      Total: 50
2019-06-11 10:55:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:55:31 -==> Parameters: 138(Long)
2019-06-11 10:55:31 -<==      Total: 1
2019-06-11 10:55:31 -耗时 : 11
2019-06-11 10:55:31 -返回值 : index_v1
2019-06-11 10:55:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:55:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:55:31.437(Timestamp)
2019-06-11 10:55:31 -请求地址 : http://localhost:8081/main
2019-06-11 10:55:31 -HTTP METHOD : GET
2019-06-11 10:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:55:31 -参数 : []
2019-06-11 10:55:31 -耗时 : 1
2019-06-11 10:55:31 -返回值 : main
2019-06-11 10:55:31 -<==    Updates: 1
2019-06-11 10:55:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:55:31 -HTTP METHOD : GET
2019-06-11 10:55:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:55:31 -参数 : []
2019-06-11 10:55:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:55:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:55:31 -<==      Total: 0
2019-06-11 10:55:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:55:31 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:55:31 -<==      Total: 1
2019-06-11 10:55:31 -耗时 : 8
2019-06-11 10:55:31 -返回值 : com.bootdo.common.utils.PageUtils@309468cf
2019-06-11 10:55:31 -请求地址 : http://localhost:8081/main
2019-06-11 10:55:31 -HTTP METHOD : GET
2019-06-11 10:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:55:31 -参数 : []
2019-06-11 10:55:31 -耗时 : 1
2019-06-11 10:55:31 -返回值 : main
2019-06-11 10:55:39 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:55:39 -HTTP METHOD : GET
2019-06-11 10:55:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:55:39 -参数 : []
2019-06-11 10:55:39 -耗时 : 1
2019-06-11 10:55:39 -返回值 : print/print/print
2019-06-11 10:55:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:55:39 -HTTP METHOD : GET
2019-06-11 10:55:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:55:39 -参数 : [userType]
2019-06-11 10:55:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:55:39 -==> Parameters: userType(String)
2019-06-11 10:55:39 -<==      Total: 4
2019-06-11 10:55:39 -耗时 : 3
2019-06-11 10:55:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:55:39 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:55:39 -HTTP METHOD : GET
2019-06-11 10:55:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:55:39 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:55:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:55:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:55:39 -<==      Total: 3
2019-06-11 10:55:39 -==>  Preparing: select count(*) from print 
2019-06-11 10:55:39 -==> Parameters: 
2019-06-11 10:55:39 -<==      Total: 1
2019-06-11 10:55:39 -耗时 : 6
2019-06-11 10:55:39 -返回值 : com.bootdo.common.utils.PageUtils@51c5a0ff
2019-06-11 10:55:43 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:55:43 -HTTP METHOD : POST
2019-06-11 10:55:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:55:43 -参数 : [[Ljava.lang.Long;@127786c8]
2019-06-11 10:55:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:55:43 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:55:43 -<==      Total: 3
2019-06-11 10:55:43 -耗时 : 6
2019-06-11 10:55:43 -返回值 : [com.bootdo.print.vo.PrintVo@104716a3, com.bootdo.print.vo.PrintVo@794103a, com.bootdo.print.vo.PrintVo@297b97c6]
2019-06-11 10:55:45 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:55:45 -HTTP METHOD : POST
2019-06-11 10:55:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:55:45 -参数 : [[Ljava.lang.Long;@8f4ef58]
2019-06-11 10:55:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:55:45 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:55:45 -<==      Total: 3
2019-06-11 10:55:45 -耗时 : 4
2019-06-11 10:55:45 -返回值 : [com.bootdo.print.vo.PrintVo@574b3ee4, com.bootdo.print.vo.PrintVo@448af6d2, com.bootdo.print.vo.PrintVo@6bab5f34]
2019-06-11 10:58:14 -请求地址 : http://localhost:8081/index
2019-06-11 10:58:14 -HTTP METHOD : GET
2019-06-11 10:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:58:14 -参数 : [{}]
2019-06-11 10:58:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:58:14 -==> Parameters: 1(Long)
2019-06-11 10:58:14 -<==      Total: 50
2019-06-11 10:58:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:58:14 -==> Parameters: 138(Long)
2019-06-11 10:58:14 -<==      Total: 1
2019-06-11 10:58:14 -耗时 : 27
2019-06-11 10:58:14 -返回值 : index_v1
2019-06-11 10:58:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:58:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:58:14.256(Timestamp)
2019-06-11 10:58:14 -请求地址 : http://localhost:8081/main
2019-06-11 10:58:14 -HTTP METHOD : GET
2019-06-11 10:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:58:14 -参数 : []
2019-06-11 10:58:14 -耗时 : 0
2019-06-11 10:58:14 -返回值 : main
2019-06-11 10:58:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:58:14 -HTTP METHOD : GET
2019-06-11 10:58:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:58:14 -参数 : []
2019-06-11 10:58:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:58:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:58:14 -<==      Total: 0
2019-06-11 10:58:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:58:14 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:58:14 -<==      Total: 1
2019-06-11 10:58:14 -耗时 : 8
2019-06-11 10:58:14 -返回值 : com.bootdo.common.utils.PageUtils@4e968b2b
2019-06-11 10:58:14 -<==    Updates: 1
2019-06-11 10:58:14 -请求地址 : http://localhost:8081/main
2019-06-11 10:58:14 -HTTP METHOD : GET
2019-06-11 10:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:58:14 -参数 : []
2019-06-11 10:58:14 -耗时 : 0
2019-06-11 10:58:14 -返回值 : main
2019-06-11 10:58:16 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:58:16 -HTTP METHOD : GET
2019-06-11 10:58:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:58:16 -参数 : []
2019-06-11 10:58:16 -耗时 : 0
2019-06-11 10:58:16 -返回值 : print/print/print
2019-06-11 10:58:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:58:16 -HTTP METHOD : GET
2019-06-11 10:58:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:58:16 -参数 : [userType]
2019-06-11 10:58:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:58:16 -==> Parameters: userType(String)
2019-06-11 10:58:16 -<==      Total: 4
2019-06-11 10:58:16 -耗时 : 3
2019-06-11 10:58:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:58:16 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:58:16 -HTTP METHOD : GET
2019-06-11 10:58:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:58:16 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:58:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:58:16 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:58:16 -<==      Total: 3
2019-06-11 10:58:16 -==>  Preparing: select count(*) from print 
2019-06-11 10:58:16 -==> Parameters: 
2019-06-11 10:58:16 -<==      Total: 1
2019-06-11 10:58:16 -耗时 : 7
2019-06-11 10:58:16 -返回值 : com.bootdo.common.utils.PageUtils@53a2ed1f
2019-06-11 10:58:21 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 10:58:21 -HTTP METHOD : POST
2019-06-11 10:58:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 10:58:21 -参数 : [[Ljava.lang.Long;@3fb766dc]
2019-06-11 10:58:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 10:58:21 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 10:58:21 -<==      Total: 3
2019-06-11 10:58:21 -耗时 : 7
2019-06-11 10:58:21 -返回值 : [com.bootdo.print.vo.PrintVo@33c9df96, com.bootdo.print.vo.PrintVo@60378050, com.bootdo.print.vo.PrintVo@64329b0c]
2019-06-11 10:59:40 -请求地址 : http://localhost:8081/index
2019-06-11 10:59:40 -HTTP METHOD : GET
2019-06-11 10:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 10:59:40 -参数 : [{}]
2019-06-11 10:59:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 10:59:40 -==> Parameters: 1(Long)
2019-06-11 10:59:40 -<==      Total: 50
2019-06-11 10:59:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 10:59:40 -==> Parameters: 138(Long)
2019-06-11 10:59:40 -<==      Total: 1
2019-06-11 10:59:40 -耗时 : 22
2019-06-11 10:59:40 -返回值 : index_v1
2019-06-11 10:59:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 10:59:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 10:59:40.96(Timestamp)
2019-06-11 10:59:41 -请求地址 : http://localhost:8081/main
2019-06-11 10:59:41 -HTTP METHOD : GET
2019-06-11 10:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:59:41 -参数 : []
2019-06-11 10:59:41 -耗时 : 0
2019-06-11 10:59:41 -返回值 : main
2019-06-11 10:59:41 -<==    Updates: 1
2019-06-11 10:59:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 10:59:41 -HTTP METHOD : GET
2019-06-11 10:59:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 10:59:41 -参数 : []
2019-06-11 10:59:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 10:59:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 10:59:41 -<==      Total: 0
2019-06-11 10:59:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 10:59:41 -==> Parameters: 1(Long), 0(String)
2019-06-11 10:59:41 -<==      Total: 1
2019-06-11 10:59:41 -耗时 : 6
2019-06-11 10:59:41 -返回值 : com.bootdo.common.utils.PageUtils@458e27e
2019-06-11 10:59:41 -请求地址 : http://localhost:8081/main
2019-06-11 10:59:41 -HTTP METHOD : GET
2019-06-11 10:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 10:59:41 -参数 : []
2019-06-11 10:59:41 -耗时 : 1
2019-06-11 10:59:41 -返回值 : main
2019-06-11 10:59:42 -请求地址 : http://localhost:8081/print/print
2019-06-11 10:59:42 -HTTP METHOD : GET
2019-06-11 10:59:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 10:59:42 -参数 : []
2019-06-11 10:59:42 -耗时 : 1
2019-06-11 10:59:42 -返回值 : print/print/print
2019-06-11 10:59:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 10:59:43 -HTTP METHOD : GET
2019-06-11 10:59:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 10:59:43 -参数 : [userType]
2019-06-11 10:59:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 10:59:43 -==> Parameters: userType(String)
2019-06-11 10:59:43 -<==      Total: 4
2019-06-11 10:59:43 -耗时 : 3
2019-06-11 10:59:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 10:59:43 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 10:59:43 -HTTP METHOD : GET
2019-06-11 10:59:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 10:59:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 10:59:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 10:59:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 10:59:43 -<==      Total: 3
2019-06-11 10:59:43 -==>  Preparing: select count(*) from print 
2019-06-11 10:59:43 -==> Parameters: 
2019-06-11 10:59:43 -<==      Total: 1
2019-06-11 10:59:43 -耗时 : 5
2019-06-11 10:59:43 -返回值 : com.bootdo.common.utils.PageUtils@5eb9b1d0
2019-06-11 11:00:39 -请求地址 : http://localhost:8081/index
2019-06-11 11:00:39 -HTTP METHOD : GET
2019-06-11 11:00:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:00:39 -参数 : [{}]
2019-06-11 11:00:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:00:39 -==> Parameters: 1(Long)
2019-06-11 11:00:39 -<==      Total: 50
2019-06-11 11:00:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:00:39 -==> Parameters: 138(Long)
2019-06-11 11:00:39 -<==      Total: 1
2019-06-11 11:00:39 -耗时 : 14
2019-06-11 11:00:39 -返回值 : index_v1
2019-06-11 11:00:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:00:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:00:39.37(Timestamp)
2019-06-11 11:00:39 -请求地址 : http://localhost:8081/main
2019-06-11 11:00:39 -HTTP METHOD : GET
2019-06-11 11:00:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:00:39 -参数 : []
2019-06-11 11:00:39 -耗时 : 0
2019-06-11 11:00:39 -返回值 : main
2019-06-11 11:00:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:00:39 -HTTP METHOD : GET
2019-06-11 11:00:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:00:39 -参数 : []
2019-06-11 11:00:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:00:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:00:39 -<==      Total: 0
2019-06-11 11:00:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:00:39 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:00:39 -<==      Total: 1
2019-06-11 11:00:39 -耗时 : 5
2019-06-11 11:00:39 -返回值 : com.bootdo.common.utils.PageUtils@29dc3176
2019-06-11 11:00:39 -请求地址 : http://localhost:8081/main
2019-06-11 11:00:39 -HTTP METHOD : GET
2019-06-11 11:00:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:00:39 -参数 : []
2019-06-11 11:00:39 -耗时 : 1
2019-06-11 11:00:39 -返回值 : main
2019-06-11 11:00:39 -<==    Updates: 1
2019-06-11 11:00:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 11:00:43 -==> Parameters: 1(Long)
2019-06-11 11:00:43 -<==      Total: 94
2019-06-11 11:00:43 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:00:43 -HTTP METHOD : GET
2019-06-11 11:00:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:00:43 -参数 : []
2019-06-11 11:00:43 -耗时 : 0
2019-06-11 11:00:43 -返回值 : print/print/print
2019-06-11 11:00:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:00:43 -HTTP METHOD : GET
2019-06-11 11:00:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:00:43 -参数 : [userType]
2019-06-11 11:00:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:00:43 -==> Parameters: userType(String)
2019-06-11 11:00:43 -<==      Total: 4
2019-06-11 11:00:43 -耗时 : 4
2019-06-11 11:00:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:00:43 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:00:43 -HTTP METHOD : GET
2019-06-11 11:00:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:00:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:00:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:00:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:00:43 -<==      Total: 3
2019-06-11 11:00:43 -==>  Preparing: select count(*) from print 
2019-06-11 11:00:43 -==> Parameters: 
2019-06-11 11:00:43 -<==      Total: 1
2019-06-11 11:00:43 -耗时 : 8
2019-06-11 11:00:43 -返回值 : com.bootdo.common.utils.PageUtils@6fd92ca0
2019-06-11 11:00:46 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:00:46 -HTTP METHOD : POST
2019-06-11 11:00:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:00:46 -参数 : [[Ljava.lang.Long;@2d38c12]
2019-06-11 11:00:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:00:46 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:00:46 -<==      Total: 3
2019-06-11 11:00:46 -耗时 : 7
2019-06-11 11:00:46 -返回值 : [com.bootdo.print.vo.PrintVo@31f11071, com.bootdo.print.vo.PrintVo@27ae30f5, com.bootdo.print.vo.PrintVo@39038b0e]
2019-06-11 11:06:45 -请求地址 : http://localhost:8081/index
2019-06-11 11:06:45 -HTTP METHOD : GET
2019-06-11 11:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:06:45 -参数 : [{}]
2019-06-11 11:06:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:06:45 -==> Parameters: 1(Long)
2019-06-11 11:06:45 -<==      Total: 50
2019-06-11 11:06:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:06:45 -==> Parameters: 138(Long)
2019-06-11 11:06:45 -<==      Total: 1
2019-06-11 11:06:45 -耗时 : 58
2019-06-11 11:06:45 -返回值 : index_v1
2019-06-11 11:06:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:06:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:06:45.539(Timestamp)
2019-06-11 11:06:45 -<==    Updates: 1
2019-06-11 11:06:45 -请求地址 : http://localhost:8081/main
2019-06-11 11:06:45 -HTTP METHOD : GET
2019-06-11 11:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:06:45 -参数 : []
2019-06-11 11:06:45 -耗时 : 0
2019-06-11 11:06:45 -返回值 : main
2019-06-11 11:06:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:06:45 -HTTP METHOD : GET
2019-06-11 11:06:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:06:45 -参数 : []
2019-06-11 11:06:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:06:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:06:45 -请求地址 : http://localhost:8081/main
2019-06-11 11:06:45 -HTTP METHOD : GET
2019-06-11 11:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:06:45 -参数 : []
2019-06-11 11:06:45 -耗时 : 0
2019-06-11 11:06:45 -返回值 : main
2019-06-11 11:06:46 -<==      Total: 0
2019-06-11 11:06:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:06:46 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:06:46 -<==      Total: 1
2019-06-11 11:06:46 -耗时 : 168
2019-06-11 11:06:46 -返回值 : com.bootdo.common.utils.PageUtils@c5ba313
2019-06-11 11:06:48 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:06:48 -HTTP METHOD : GET
2019-06-11 11:06:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:06:48 -参数 : []
2019-06-11 11:06:48 -耗时 : 1
2019-06-11 11:06:48 -返回值 : print/print/print
2019-06-11 11:06:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:06:50 -HTTP METHOD : GET
2019-06-11 11:06:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:06:50 -参数 : [userType]
2019-06-11 11:06:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:06:50 -==> Parameters: userType(String)
2019-06-11 11:06:50 -<==      Total: 4
2019-06-11 11:06:50 -耗时 : 21
2019-06-11 11:06:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:06:50 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:06:50 -HTTP METHOD : GET
2019-06-11 11:06:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:06:50 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:06:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:06:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:06:50 -<==      Total: 3
2019-06-11 11:06:50 -==>  Preparing: select count(*) from print 
2019-06-11 11:06:50 -==> Parameters: 
2019-06-11 11:06:50 -<==      Total: 1
2019-06-11 11:06:50 -耗时 : 32
2019-06-11 11:06:50 -返回值 : com.bootdo.common.utils.PageUtils@6d4a0592
2019-06-11 11:06:55 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:06:55 -HTTP METHOD : POST
2019-06-11 11:06:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:06:55 -参数 : [[Ljava.lang.Long;@3e141ab4]
2019-06-11 11:06:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:06:55 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:06:55 -<==      Total: 3
2019-06-11 11:06:55 -耗时 : 99
2019-06-11 11:06:55 -返回值 : [com.bootdo.print.vo.PrintVo@62e0ca6d, com.bootdo.print.vo.PrintVo@281fbcec, com.bootdo.print.vo.PrintVo@36c0c2e1]
2019-06-11 11:08:16 -请求地址 : http://localhost:8081/index
2019-06-11 11:08:16 -HTTP METHOD : GET
2019-06-11 11:08:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:08:16 -参数 : [{}]
2019-06-11 11:08:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:08:16 -==> Parameters: 1(Long)
2019-06-11 11:08:16 -<==      Total: 50
2019-06-11 11:08:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:08:16 -==> Parameters: 138(Long)
2019-06-11 11:08:16 -<==      Total: 1
2019-06-11 11:08:16 -耗时 : 18
2019-06-11 11:08:16 -返回值 : index_v1
2019-06-11 11:08:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:08:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:08:16.9(Timestamp)
2019-06-11 11:08:17 -<==    Updates: 1
2019-06-11 11:08:17 -请求地址 : http://localhost:8081/main
2019-06-11 11:08:17 -HTTP METHOD : GET
2019-06-11 11:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:08:17 -参数 : []
2019-06-11 11:08:17 -耗时 : 1
2019-06-11 11:08:17 -返回值 : main
2019-06-11 11:08:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:08:17 -HTTP METHOD : GET
2019-06-11 11:08:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:08:17 -参数 : []
2019-06-11 11:08:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:08:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:08:17 -<==      Total: 0
2019-06-11 11:08:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:08:17 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:08:17 -<==      Total: 1
2019-06-11 11:08:17 -耗时 : 68
2019-06-11 11:08:17 -返回值 : com.bootdo.common.utils.PageUtils@45428a
2019-06-11 11:08:17 -请求地址 : http://localhost:8081/main
2019-06-11 11:08:17 -HTTP METHOD : GET
2019-06-11 11:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:08:17 -参数 : []
2019-06-11 11:08:17 -耗时 : 0
2019-06-11 11:08:17 -返回值 : main
2019-06-11 11:08:22 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:08:22 -HTTP METHOD : GET
2019-06-11 11:08:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:08:22 -参数 : []
2019-06-11 11:08:22 -耗时 : 1
2019-06-11 11:08:22 -返回值 : print/print/print
2019-06-11 11:08:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:08:22 -HTTP METHOD : GET
2019-06-11 11:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:08:22 -参数 : [userType]
2019-06-11 11:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:08:22 -==> Parameters: userType(String)
2019-06-11 11:08:22 -<==      Total: 4
2019-06-11 11:08:22 -耗时 : 4
2019-06-11 11:08:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:08:22 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:08:22 -HTTP METHOD : GET
2019-06-11 11:08:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:08:22 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:08:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:08:22 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:08:22 -<==      Total: 3
2019-06-11 11:08:22 -==>  Preparing: select count(*) from print 
2019-06-11 11:08:22 -==> Parameters: 
2019-06-11 11:08:22 -<==      Total: 1
2019-06-11 11:08:22 -耗时 : 10
2019-06-11 11:08:22 -返回值 : com.bootdo.common.utils.PageUtils@127ef4f
2019-06-11 11:08:25 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:08:25 -HTTP METHOD : POST
2019-06-11 11:08:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:08:25 -参数 : [[Ljava.lang.Long;@3cace372]
2019-06-11 11:08:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:08:25 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:08:25 -<==      Total: 3
2019-06-11 11:08:25 -耗时 : 86
2019-06-11 11:08:25 -返回值 : [com.bootdo.print.vo.PrintVo@6cfa4d59, com.bootdo.print.vo.PrintVo@14c09fc6, com.bootdo.print.vo.PrintVo@4fac595f]
2019-06-11 11:12:34 -Validating all active sessions...
2019-06-11 11:12:34 -Finished session validation.  No sessions were stopped.
2019-06-11 11:12:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(21)-CONNECTED(21)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 252], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 846]
2019-06-11 11:18:15 -请求地址 : http://localhost:8081/index
2019-06-11 11:18:16 -HTTP METHOD : GET
2019-06-11 11:18:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:18:16 -参数 : [{}]
2019-06-11 11:18:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:18:16 -==> Parameters: 1(Long)
2019-06-11 11:18:16 -<==      Total: 50
2019-06-11 11:18:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:18:16 -==> Parameters: 138(Long)
2019-06-11 11:18:16 -<==      Total: 1
2019-06-11 11:18:16 -耗时 : 98
2019-06-11 11:18:16 -返回值 : index_v1
2019-06-11 11:18:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:18:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 98(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:18:16.096(Timestamp)
2019-06-11 11:18:16 -<==    Updates: 1
2019-06-11 11:18:16 -请求地址 : http://localhost:8081/main
2019-06-11 11:18:16 -HTTP METHOD : GET
2019-06-11 11:18:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:18:16 -参数 : []
2019-06-11 11:18:16 -耗时 : 0
2019-06-11 11:18:16 -返回值 : main
2019-06-11 11:18:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:18:16 -HTTP METHOD : GET
2019-06-11 11:18:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:18:16 -参数 : []
2019-06-11 11:18:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:18:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:18:16 -<==      Total: 0
2019-06-11 11:18:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:18:16 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:18:16 -<==      Total: 1
2019-06-11 11:18:16 -耗时 : 42
2019-06-11 11:18:16 -返回值 : com.bootdo.common.utils.PageUtils@3bd56180
2019-06-11 11:18:17 -请求地址 : http://localhost:8081/main
2019-06-11 11:18:17 -HTTP METHOD : GET
2019-06-11 11:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:18:17 -参数 : []
2019-06-11 11:18:17 -耗时 : 0
2019-06-11 11:18:17 -返回值 : main
2019-06-11 11:18:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 11:18:19 -==> Parameters: 1(Long)
2019-06-11 11:18:19 -<==      Total: 94
2019-06-11 11:18:19 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:18:19 -HTTP METHOD : GET
2019-06-11 11:18:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:18:19 -参数 : []
2019-06-11 11:18:19 -耗时 : 1
2019-06-11 11:18:19 -返回值 : print/print/print
2019-06-11 11:18:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:18:19 -HTTP METHOD : GET
2019-06-11 11:18:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:18:19 -参数 : [userType]
2019-06-11 11:18:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:18:19 -==> Parameters: userType(String)
2019-06-11 11:18:19 -<==      Total: 4
2019-06-11 11:18:19 -耗时 : 6
2019-06-11 11:18:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:18:19 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:18:19 -HTTP METHOD : GET
2019-06-11 11:18:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:18:19 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:18:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:18:19 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:18:19 -<==      Total: 3
2019-06-11 11:18:19 -==>  Preparing: select count(*) from print 
2019-06-11 11:18:19 -==> Parameters: 
2019-06-11 11:18:19 -<==      Total: 1
2019-06-11 11:18:19 -耗时 : 8
2019-06-11 11:18:19 -返回值 : com.bootdo.common.utils.PageUtils@5d3078b1
2019-06-11 11:18:22 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:18:22 -HTTP METHOD : POST
2019-06-11 11:18:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:18:22 -参数 : [[Ljava.lang.Long;@646c8754]
2019-06-11 11:18:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:18:22 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:18:22 -<==      Total: 3
2019-06-11 11:18:22 -耗时 : 3
2019-06-11 11:18:22 -返回值 : [com.bootdo.print.vo.PrintVo@155eda6e, com.bootdo.print.vo.PrintVo@7506ee1, com.bootdo.print.vo.PrintVo@7860f78]
2019-06-11 11:19:00 -请求地址 : http://localhost:8081/index
2019-06-11 11:19:00 -HTTP METHOD : GET
2019-06-11 11:19:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:19:00 -参数 : [{}]
2019-06-11 11:19:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:19:00 -==> Parameters: 1(Long)
2019-06-11 11:19:00 -<==      Total: 50
2019-06-11 11:19:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:19:00 -==> Parameters: 138(Long)
2019-06-11 11:19:00 -<==      Total: 1
2019-06-11 11:19:00 -耗时 : 91
2019-06-11 11:19:00 -返回值 : index_v1
2019-06-11 11:19:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:19:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 91(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:19:00.88(Timestamp)
2019-06-11 11:19:00 -<==    Updates: 1
2019-06-11 11:19:00 -请求地址 : http://localhost:8081/main
2019-06-11 11:19:00 -HTTP METHOD : GET
2019-06-11 11:19:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:19:00 -参数 : []
2019-06-11 11:19:00 -耗时 : 1
2019-06-11 11:19:00 -返回值 : main
2019-06-11 11:19:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:19:01 -HTTP METHOD : GET
2019-06-11 11:19:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:19:01 -参数 : []
2019-06-11 11:19:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:19:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:19:01 -<==      Total: 0
2019-06-11 11:19:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:19:01 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:19:01 -<==      Total: 1
2019-06-11 11:19:01 -耗时 : 5
2019-06-11 11:19:01 -返回值 : com.bootdo.common.utils.PageUtils@205317fe
2019-06-11 11:19:01 -请求地址 : http://localhost:8081/main
2019-06-11 11:19:01 -HTTP METHOD : GET
2019-06-11 11:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:19:01 -参数 : []
2019-06-11 11:19:01 -耗时 : 0
2019-06-11 11:19:01 -返回值 : main
2019-06-11 11:19:04 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:19:04 -HTTP METHOD : GET
2019-06-11 11:19:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:19:04 -参数 : []
2019-06-11 11:19:04 -耗时 : 0
2019-06-11 11:19:04 -返回值 : print/print/print
2019-06-11 11:19:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:19:05 -HTTP METHOD : GET
2019-06-11 11:19:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:19:05 -参数 : [userType]
2019-06-11 11:19:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:19:05 -==> Parameters: userType(String)
2019-06-11 11:19:05 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:19:05 -HTTP METHOD : GET
2019-06-11 11:19:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:19:05 -<==      Total: 4
2019-06-11 11:19:05 -耗时 : 14
2019-06-11 11:19:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:19:05 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:19:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:19:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:19:05 -<==      Total: 3
2019-06-11 11:19:05 -==>  Preparing: select count(*) from print 
2019-06-11 11:19:05 -==> Parameters: 
2019-06-11 11:19:05 -<==      Total: 1
2019-06-11 11:19:05 -耗时 : 22
2019-06-11 11:19:05 -返回值 : com.bootdo.common.utils.PageUtils@131a077
2019-06-11 11:19:09 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:19:09 -HTTP METHOD : POST
2019-06-11 11:19:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:19:09 -参数 : [[Ljava.lang.Long;@4fdaeebb]
2019-06-11 11:19:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:19:09 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:19:09 -<==      Total: 3
2019-06-11 11:19:09 -耗时 : 5
2019-06-11 11:19:09 -返回值 : [com.bootdo.print.vo.PrintVo@69b60951, com.bootdo.print.vo.PrintVo@730eb82e, com.bootdo.print.vo.PrintVo@6b392fc2]
2019-06-11 11:32:43 -请求地址 : http://localhost:8081/index
2019-06-11 11:32:43 -HTTP METHOD : GET
2019-06-11 11:32:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:32:43 -参数 : [{}]
2019-06-11 11:32:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:32:43 -==> Parameters: 1(Long)
2019-06-11 11:32:43 -<==      Total: 50
2019-06-11 11:32:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:32:43 -==> Parameters: 138(Long)
2019-06-11 11:32:43 -<==      Total: 1
2019-06-11 11:32:43 -耗时 : 23
2019-06-11 11:32:43 -返回值 : index_v1
2019-06-11 11:32:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:32:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:32:43.63(Timestamp)
2019-06-11 11:32:43 -<==    Updates: 1
2019-06-11 11:32:43 -请求地址 : http://localhost:8081/main
2019-06-11 11:32:43 -HTTP METHOD : GET
2019-06-11 11:32:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:32:43 -参数 : []
2019-06-11 11:32:43 -耗时 : 1
2019-06-11 11:32:43 -返回值 : main
2019-06-11 11:32:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:32:43 -HTTP METHOD : GET
2019-06-11 11:32:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:32:43 -参数 : []
2019-06-11 11:32:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:32:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:32:43 -<==      Total: 0
2019-06-11 11:32:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:32:43 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:32:43 -<==      Total: 1
2019-06-11 11:32:43 -耗时 : 5
2019-06-11 11:32:43 -返回值 : com.bootdo.common.utils.PageUtils@f6c8229
2019-06-11 11:32:44 -请求地址 : http://localhost:8081/main
2019-06-11 11:32:44 -HTTP METHOD : GET
2019-06-11 11:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:32:44 -参数 : []
2019-06-11 11:32:44 -耗时 : 0
2019-06-11 11:32:44 -返回值 : main
2019-06-11 11:32:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 11:32:46 -==> Parameters: 1(Long)
2019-06-11 11:32:46 -<==      Total: 94
2019-06-11 11:32:46 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:32:46 -HTTP METHOD : GET
2019-06-11 11:32:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:32:46 -参数 : []
2019-06-11 11:32:46 -耗时 : 12
2019-06-11 11:32:46 -返回值 : print/print/print
2019-06-11 11:32:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:32:47 -HTTP METHOD : GET
2019-06-11 11:32:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:32:47 -参数 : [userType]
2019-06-11 11:32:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:32:47 -==> Parameters: userType(String)
2019-06-11 11:32:47 -<==      Total: 4
2019-06-11 11:32:47 -耗时 : 4
2019-06-11 11:32:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:32:47 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:32:47 -HTTP METHOD : GET
2019-06-11 11:32:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:32:47 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:32:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:32:47 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:32:47 -<==      Total: 3
2019-06-11 11:32:47 -==>  Preparing: select count(*) from print 
2019-06-11 11:32:47 -==> Parameters: 
2019-06-11 11:32:47 -<==      Total: 1
2019-06-11 11:32:47 -耗时 : 10
2019-06-11 11:32:47 -返回值 : com.bootdo.common.utils.PageUtils@25113d54
2019-06-11 11:32:51 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:32:51 -HTTP METHOD : POST
2019-06-11 11:32:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:32:51 -参数 : [[Ljava.lang.Long;@277646f7]
2019-06-11 11:32:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:32:51 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:32:51 -<==      Total: 3
2019-06-11 11:32:51 -耗时 : 63
2019-06-11 11:32:51 -返回值 : [com.bootdo.print.vo.PrintVo@63b024e8, com.bootdo.print.vo.PrintVo@1ab73358, com.bootdo.print.vo.PrintVo@fe38f07]
2019-06-11 11:34:46 -请求地址 : http://localhost:8081/index
2019-06-11 11:34:46 -HTTP METHOD : GET
2019-06-11 11:34:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:34:46 -参数 : [{}]
2019-06-11 11:34:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:34:46 -==> Parameters: 1(Long)
2019-06-11 11:34:46 -<==      Total: 50
2019-06-11 11:34:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:34:46 -==> Parameters: 138(Long)
2019-06-11 11:34:46 -<==      Total: 1
2019-06-11 11:34:46 -耗时 : 89
2019-06-11 11:34:46 -返回值 : index_v1
2019-06-11 11:34:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:34:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:34:46.727(Timestamp)
2019-06-11 11:34:46 -<==    Updates: 1
2019-06-11 11:34:46 -请求地址 : http://localhost:8081/main
2019-06-11 11:34:46 -HTTP METHOD : GET
2019-06-11 11:34:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:34:46 -参数 : []
2019-06-11 11:34:46 -耗时 : 0
2019-06-11 11:34:46 -返回值 : main
2019-06-11 11:34:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:34:47 -HTTP METHOD : GET
2019-06-11 11:34:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:34:47 -参数 : []
2019-06-11 11:34:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:34:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:34:47 -<==      Total: 0
2019-06-11 11:34:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:34:47 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:34:47 -<==      Total: 1
2019-06-11 11:34:47 -耗时 : 6
2019-06-11 11:34:47 -返回值 : com.bootdo.common.utils.PageUtils@4e361581
2019-06-11 11:34:47 -请求地址 : http://localhost:8081/main
2019-06-11 11:34:47 -HTTP METHOD : GET
2019-06-11 11:34:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:34:47 -参数 : []
2019-06-11 11:34:47 -耗时 : 0
2019-06-11 11:34:47 -返回值 : main
2019-06-11 11:34:49 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:34:49 -HTTP METHOD : GET
2019-06-11 11:34:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:34:49 -参数 : []
2019-06-11 11:34:49 -耗时 : 0
2019-06-11 11:34:49 -返回值 : print/print/print
2019-06-11 11:34:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:34:50 -HTTP METHOD : GET
2019-06-11 11:34:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:34:50 -参数 : [userType]
2019-06-11 11:34:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:34:50 -==> Parameters: userType(String)
2019-06-11 11:34:50 -<==      Total: 4
2019-06-11 11:34:50 -耗时 : 3
2019-06-11 11:34:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:34:50 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:34:50 -HTTP METHOD : GET
2019-06-11 11:34:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:34:50 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:34:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:34:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:34:50 -<==      Total: 3
2019-06-11 11:34:50 -==>  Preparing: select count(*) from print 
2019-06-11 11:34:50 -==> Parameters: 
2019-06-11 11:34:50 -<==      Total: 1
2019-06-11 11:34:50 -耗时 : 7
2019-06-11 11:34:50 -返回值 : com.bootdo.common.utils.PageUtils@53bbf234
2019-06-11 11:34:54 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:34:54 -HTTP METHOD : POST
2019-06-11 11:34:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:34:54 -参数 : [[Ljava.lang.Long;@50bc114a]
2019-06-11 11:34:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:34:54 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:34:54 -<==      Total: 3
2019-06-11 11:34:54 -耗时 : 3
2019-06-11 11:34:54 -返回值 : [com.bootdo.print.vo.PrintVo@74a6eb91, com.bootdo.print.vo.PrintVo@a427299, com.bootdo.print.vo.PrintVo@3ac414da]
2019-06-11 11:34:55 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:34:55 -HTTP METHOD : POST
2019-06-11 11:34:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:34:55 -参数 : [[Ljava.lang.Long;@2e19ee16]
2019-06-11 11:34:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:34:55 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:34:55 -<==      Total: 3
2019-06-11 11:34:55 -耗时 : 8
2019-06-11 11:34:55 -返回值 : [com.bootdo.print.vo.PrintVo@3c25c176, com.bootdo.print.vo.PrintVo@3b8d6e7e, com.bootdo.print.vo.PrintVo@5a854e47]
2019-06-11 11:36:16 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:36:16 -HTTP METHOD : POST
2019-06-11 11:36:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:36:16 -参数 : [[Ljava.lang.Long;@33c9c054]
2019-06-11 11:36:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:36:16 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:36:16 -<==      Total: 3
2019-06-11 11:36:16 -耗时 : 7
2019-06-11 11:36:16 -返回值 : [com.bootdo.print.vo.PrintVo@3739224b, com.bootdo.print.vo.PrintVo@3b9f4cca, com.bootdo.print.vo.PrintVo@4629e08d]
2019-06-11 11:36:20 -请求地址 : http://localhost:8081/index
2019-06-11 11:36:20 -HTTP METHOD : GET
2019-06-11 11:36:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:36:20 -参数 : [{}]
2019-06-11 11:36:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:36:20 -==> Parameters: 1(Long)
2019-06-11 11:36:20 -<==      Total: 50
2019-06-11 11:36:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:36:20 -==> Parameters: 138(Long)
2019-06-11 11:36:20 -<==      Total: 1
2019-06-11 11:36:20 -耗时 : 82
2019-06-11 11:36:20 -返回值 : index_v1
2019-06-11 11:36:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:36:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:36:20.355(Timestamp)
2019-06-11 11:36:20 -请求地址 : http://localhost:8081/main
2019-06-11 11:36:20 -HTTP METHOD : GET
2019-06-11 11:36:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:36:20 -参数 : []
2019-06-11 11:36:20 -耗时 : 0
2019-06-11 11:36:20 -返回值 : main
2019-06-11 11:36:20 -<==    Updates: 1
2019-06-11 11:36:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:36:20 -HTTP METHOD : GET
2019-06-11 11:36:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:36:20 -参数 : []
2019-06-11 11:36:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:36:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:36:20 -<==      Total: 0
2019-06-11 11:36:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:36:20 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:36:20 -<==      Total: 1
2019-06-11 11:36:20 -耗时 : 12
2019-06-11 11:36:20 -返回值 : com.bootdo.common.utils.PageUtils@f9a71d1
2019-06-11 11:36:20 -请求地址 : http://localhost:8081/main
2019-06-11 11:36:20 -HTTP METHOD : GET
2019-06-11 11:36:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:36:20 -参数 : []
2019-06-11 11:36:20 -耗时 : 0
2019-06-11 11:36:20 -返回值 : main
2019-06-11 11:36:55 -请求地址 : http://localhost:8081/index
2019-06-11 11:36:55 -HTTP METHOD : GET
2019-06-11 11:36:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 11:36:55 -参数 : [{}]
2019-06-11 11:36:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 11:36:55 -==> Parameters: 1(Long)
2019-06-11 11:36:55 -<==      Total: 50
2019-06-11 11:36:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 11:36:55 -==> Parameters: 138(Long)
2019-06-11 11:36:55 -<==      Total: 1
2019-06-11 11:36:55 -耗时 : 124
2019-06-11 11:36:55 -返回值 : index_v1
2019-06-11 11:36:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 11:36:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 124(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 11:36:55.819(Timestamp)
2019-06-11 11:36:55 -<==    Updates: 1
2019-06-11 11:36:55 -请求地址 : http://localhost:8081/main
2019-06-11 11:36:55 -HTTP METHOD : GET
2019-06-11 11:36:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:36:55 -参数 : []
2019-06-11 11:36:55 -耗时 : 0
2019-06-11 11:36:55 -返回值 : main
2019-06-11 11:36:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 11:36:56 -HTTP METHOD : GET
2019-06-11 11:36:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 11:36:56 -参数 : []
2019-06-11 11:36:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 11:36:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 11:36:56 -<==      Total: 0
2019-06-11 11:36:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 11:36:56 -==> Parameters: 1(Long), 0(String)
2019-06-11 11:36:56 -<==      Total: 1
2019-06-11 11:36:56 -耗时 : 7
2019-06-11 11:36:56 -返回值 : com.bootdo.common.utils.PageUtils@620b7986
2019-06-11 11:36:56 -请求地址 : http://localhost:8081/main
2019-06-11 11:36:56 -HTTP METHOD : GET
2019-06-11 11:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 11:36:56 -参数 : []
2019-06-11 11:36:56 -耗时 : 1
2019-06-11 11:36:56 -返回值 : main
2019-06-11 11:37:02 -请求地址 : http://localhost:8081/print/print
2019-06-11 11:37:02 -HTTP METHOD : GET
2019-06-11 11:37:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 11:37:02 -参数 : []
2019-06-11 11:37:02 -耗时 : 1
2019-06-11 11:37:02 -返回值 : print/print/print
2019-06-11 11:37:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 11:37:03 -HTTP METHOD : GET
2019-06-11 11:37:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 11:37:03 -参数 : [userType]
2019-06-11 11:37:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 11:37:03 -==> Parameters: userType(String)
2019-06-11 11:37:03 -<==      Total: 4
2019-06-11 11:37:03 -耗时 : 5
2019-06-11 11:37:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 11:37:03 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 11:37:03 -HTTP METHOD : GET
2019-06-11 11:37:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 11:37:03 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 11:37:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 11:37:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 11:37:03 -<==      Total: 3
2019-06-11 11:37:03 -==>  Preparing: select count(*) from print 
2019-06-11 11:37:03 -==> Parameters: 
2019-06-11 11:37:03 -<==      Total: 1
2019-06-11 11:37:03 -耗时 : 47
2019-06-11 11:37:03 -返回值 : com.bootdo.common.utils.PageUtils@7f8c5451
2019-06-11 11:37:09 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 11:37:09 -HTTP METHOD : POST
2019-06-11 11:37:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 11:37:09 -参数 : [[Ljava.lang.Long;@43efb09b]
2019-06-11 11:37:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 11:37:09 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 11:37:09 -<==      Total: 3
2019-06-11 11:37:09 -耗时 : 5
2019-06-11 11:37:09 -返回值 : [com.bootdo.print.vo.PrintVo@4475de74, com.bootdo.print.vo.PrintVo@63d19fb2, com.bootdo.print.vo.PrintVo@5d84903b]
2019-06-11 11:42:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 324], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1274]
2019-06-11 12:12:34 -Validating all active sessions...
2019-06-11 12:12:35 -Finished session validation.  [1] sessions were stopped.
2019-06-11 12:12:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 324], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1707]
2019-06-11 12:42:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 324], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2140]
2019-06-11 13:12:34 -Validating all active sessions...
2019-06-11 13:12:34 -Finished session validation.  No sessions were stopped.
2019-06-11 13:12:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 324], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2573]
2019-06-11 13:42:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(27)-CONNECTED(27)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 324], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3006]
2019-06-11 13:54:49 -请求地址 : http://localhost:8081/login;JSESSIONID=455e6f33-b62d-43ae-8106-4e988f151071
2019-06-11 13:54:49 -HTTP METHOD : GET
2019-06-11 13:54:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 13:54:49 -参数 : [{}]
2019-06-11 13:54:49 -耗时 : 0
2019-06-11 13:54:49 -返回值 : login
2019-06-11 13:54:55 -请求地址 : http://localhost:8081/getVerify
2019-06-11 13:54:55 -HTTP METHOD : GET
2019-06-11 13:54:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 13:54:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b44f37f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5d1ac55a]
2019-06-11 13:54:56 -5384
2019-06-11 13:54:56 -耗时 : 981
2019-06-11 13:54:56 -返回值 : null
2019-06-11 13:54:56 -请求地址 : http://localhost:8081/login
2019-06-11 13:54:56 -HTTP METHOD : GET
2019-06-11 13:54:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 13:54:56 -参数 : [{}]
2019-06-11 13:54:56 -耗时 : 28
2019-06-11 13:54:56 -返回值 : login
2019-06-11 13:55:37 -请求地址 : http://localhost:8081/login
2019-06-11 13:55:37 -HTTP METHOD : POST
2019-06-11 13:55:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 13:55:37 -参数 : [admin, 111111, 5384, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d1f0848]
2019-06-11 13:55:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 13:55:37 -==> Parameters: admin(String)
2019-06-11 13:55:37 -<==      Total: 1
2019-06-11 13:55:37 -耗时 : 35
2019-06-11 13:55:37 -返回值 : {msg=操作成功, code=0}
2019-06-11 13:55:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 13:55:37 -==> Parameters: 1(Long), admin(String), 登录(String), 35(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 13:55:37.745(Timestamp)
2019-06-11 13:55:37 -请求地址 : http://localhost:8081/index
2019-06-11 13:55:37 -HTTP METHOD : GET
2019-06-11 13:55:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 13:55:37 -参数 : [{}]
2019-06-11 13:55:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 13:55:37 -==> Parameters: 1(Long)
2019-06-11 13:55:37 -<==      Total: 50
2019-06-11 13:55:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 13:55:37 -==> Parameters: 138(Long)
2019-06-11 13:55:37 -<==      Total: 1
2019-06-11 13:55:37 -耗时 : 191
2019-06-11 13:55:37 -返回值 : index_v1
2019-06-11 13:55:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 13:55:38 -<==    Updates: 1
2019-06-11 13:55:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 192(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 13:55:37.96(Timestamp)
2019-06-11 13:55:38 -请求地址 : http://localhost:8081/main
2019-06-11 13:55:38 -HTTP METHOD : GET
2019-06-11 13:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 13:55:38 -参数 : []
2019-06-11 13:55:38 -耗时 : 1
2019-06-11 13:55:38 -返回值 : main
2019-06-11 13:55:38 -<==    Updates: 1
2019-06-11 13:55:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 13:55:38 -HTTP METHOD : GET
2019-06-11 13:55:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 13:55:38 -参数 : []
2019-06-11 13:55:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 13:55:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 13:55:38 -<==      Total: 0
2019-06-11 13:55:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 13:55:38 -==> Parameters: 1(Long), 0(String)
2019-06-11 13:55:38 -<==      Total: 1
2019-06-11 13:55:38 -耗时 : 5
2019-06-11 13:55:38 -返回值 : com.bootdo.common.utils.PageUtils@75da637b
2019-06-11 13:55:38 -请求地址 : http://localhost:8081/main
2019-06-11 13:55:38 -HTTP METHOD : GET
2019-06-11 13:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 13:55:38 -参数 : []
2019-06-11 13:55:38 -耗时 : 0
2019-06-11 13:55:38 -返回值 : main
2019-06-11 13:55:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 13:55:45 -==> Parameters: 1(Long)
2019-06-11 13:55:45 -<==      Total: 94
2019-06-11 13:55:45 -请求地址 : http://localhost:8081/print/print
2019-06-11 13:55:45 -HTTP METHOD : GET
2019-06-11 13:55:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 13:55:45 -参数 : []
2019-06-11 13:55:45 -耗时 : 1
2019-06-11 13:55:45 -返回值 : print/print/print
2019-06-11 13:55:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 13:55:47 -HTTP METHOD : GET
2019-06-11 13:55:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 13:55:47 -参数 : [userType]
2019-06-11 13:55:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 13:55:47 -==> Parameters: userType(String)
2019-06-11 13:55:47 -<==      Total: 4
2019-06-11 13:55:47 -耗时 : 4
2019-06-11 13:55:47 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 13:55:47 -HTTP METHOD : GET
2019-06-11 13:55:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 13:55:47 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 13:55:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 13:55:47 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 13:55:47 -<==      Total: 3
2019-06-11 13:55:47 -==>  Preparing: select count(*) from print 
2019-06-11 13:55:47 -==> Parameters: 
2019-06-11 13:55:47 -<==      Total: 1
2019-06-11 13:55:47 -耗时 : 32
2019-06-11 13:55:47 -返回值 : com.bootdo.common.utils.PageUtils@39831441
2019-06-11 13:55:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 13:57:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-11 13:57:44 -HTTP METHOD : GET
2019-06-11 13:57:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-11 13:57:44 -参数 : []
2019-06-11 13:57:44 -耗时 : 25
2019-06-11 13:57:44 -返回值 : moneyList/moneyList
2019-06-11 13:57:53 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 13:57:53 -HTTP METHOD : POST
2019-06-11 13:57:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 13:57:53 -参数 : [[Ljava.lang.Long;@69a62f4c]
2019-06-11 13:57:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-11 13:57:53 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-11 13:57:53 -<==      Total: 3
2019-06-11 13:57:53 -耗时 : 6
2019-06-11 13:57:53 -返回值 : [com.bootdo.print.vo.PrintVo@d052e89, com.bootdo.print.vo.PrintVo@486ba1e6, com.bootdo.print.vo.PrintVo@106f2be8]
2019-06-11 14:39:08 -Starting BootdoApplication on PC-201905091110 with PID 8168 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-11 14:39:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-11 14:39:08 -The following profiles are active: dev
2019-06-11 14:39:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7756c3cd: startup date [Tue Jun 11 14:39:09 CST 2019]; root of context hierarchy
2019-06-11 14:39:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-11 14:39:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a9cf45c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9c28746b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-11 14:39:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-11 14:39:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 14:39:18 -Tomcat initialized with port(s): 8081 (http)
2019-06-11 14:39:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-11 14:39:19 -Starting service [Tomcat]
2019-06-11 14:39:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-11 14:39:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-11 14:39:19 -Initializing Spring embedded WebApplicationContext
2019-06-11 14:39:19 -Root WebApplicationContext: initialization completed in 10511 ms
2019-06-11 14:39:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-11 14:39:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-11 14:39:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-11 14:39:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-11 14:39:20 -Filter xssFilter was not registered (disabled)
2019-06-11 14:39:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-11 14:39:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-11 14:39:20 -Servlet statViewServlet mapped to [/druid/*]
2019-06-11 14:39:20 -Servlet dispatcherServlet mapped to [/]
2019-06-11 14:39:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7756c3cd: startup date [Tue Jun 11 14:39:09 CST 2019]; root of context hierarchy
2019-06-11 14:39:26 -Using default implementation for ThreadExecutor
2019-06-11 14:39:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-11 14:39:26 -Quartz Scheduler v.2.3.0 created.
2019-06-11 14:39:26 -RAMJobStore initialized.
2019-06-11 14:39:26 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-11 14:39:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-11 14:39:26 -Quartz scheduler version: 2.3.0
2019-06-11 14:39:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7944c323
2019-06-11 14:39:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-11 14:39:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-11 14:39:30 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-11 14:39:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-11 14:39:30 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-11 14:39:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-11 14:39:30 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-11 14:39:30 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-11 14:39:30 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-11 14:39:30 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-11 14:39:30 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-11 14:39:30 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-11 14:39:30 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-11 14:39:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-11 14:39:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-11 14:39:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-11 14:39:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-11 14:39:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 14:39:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 14:39:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-11 14:39:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-11 14:39:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-11 14:39:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-11 14:39:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-11 14:39:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-11 14:39:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-11 14:39:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-11 14:39:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-11 14:39:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-11 14:39:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-11 14:39:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-11 14:39:30 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-11 14:39:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-11 14:39:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-11 14:39:30 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-11 14:39:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-11 14:39:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-11 14:39:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-11 14:39:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-11 14:39:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-11 14:39:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-11 14:39:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-11 14:39:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-11 14:39:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-11 14:39:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-11 14:39:30 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-11 14:39:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-11 14:39:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-11 14:39:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-11 14:39:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-11 14:39:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-11 14:39:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-11 14:39:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-11 14:39:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-11 14:39:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-11 14:39:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-11 14:39:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-11 14:39:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-11 14:39:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-11 14:39:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-11 14:39:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-11 14:39:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-11 14:39:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-11 14:39:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 14:39:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 14:39:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-11 14:39:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-11 14:39:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-11 14:39:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-11 14:39:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-11 14:39:30 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-11 14:39:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 14:39:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-11 14:39:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-11 14:39:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 14:39:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 14:39:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 14:39:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-11 14:39:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-11 14:39:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-11 14:39:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-11 14:39:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-11 14:39:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-11 14:39:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 14:39:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7756c3cd: startup date [Tue Jun 11 14:39:09 CST 2019]; root of context hierarchy
2019-06-11 14:39:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 14:39:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 14:39:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-11 14:39:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-11 14:39:36 -Registering beans for JMX exposure on startup
2019-06-11 14:39:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-11 14:39:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-11 14:39:36 -Starting beans in phase 2147483647
2019-06-11 14:39:36 -Context refreshed
2019-06-11 14:39:36 -Found 1 custom documentation plugin(s)
2019-06-11 14:39:36 -Scanning for api listing references
2019-06-11 14:39:37 -Generating unique operation named: removeUsingPOST_1
2019-06-11 14:39:37 -Generating unique operation named: addUsingGET_1
2019-06-11 14:39:37 -Generating unique operation named: editUsingGET_1
2019-06-11 14:39:37 -Generating unique operation named: listUsingGET_1
2019-06-11 14:39:37 -Generating unique operation named: removeUsingPOST_2
2019-06-11 14:39:37 -Generating unique operation named: removeUsingPOST_3
2019-06-11 14:39:37 -Generating unique operation named: saveUsingPOST_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingGET_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingHEAD_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingPOST_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingPUT_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingPATCH_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingDELETE_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-11 14:39:37 -Generating unique operation named: updateUsingTRACE_1
2019-06-11 14:39:37 -Generating unique operation named: addUsingGET_2
2019-06-11 14:39:37 -Generating unique operation named: editUsingGET_2
2019-06-11 14:39:37 -Generating unique operation named: listUsingGET_2
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_4
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_5
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_2
2019-06-11 14:39:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_3
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_3
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_3
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_6
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_7
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_2
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_4
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_4
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_4
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_8
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_9
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_3
2019-06-11 14:39:38 -Generating unique operation named: ElecUsingGET_1
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_5
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_5
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_5
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_10
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_11
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_4
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_6
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_6
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_6
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_7
2019-06-11 14:39:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_7
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_12
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_13
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_5
2019-06-11 14:39:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_7
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_8
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_8
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_14
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_15
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_8
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_6
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_8
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_9
2019-06-11 14:39:38 -Generating unique operation named: listUsingGET_9
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_16
2019-06-11 14:39:38 -Generating unique operation named: removeUsingPOST_17
2019-06-11 14:39:38 -Generating unique operation named: saveUsingPOST_8
2019-06-11 14:39:38 -Generating unique operation named: updateUsingGET_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingHEAD_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPOST_9
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPUT_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingPATCH_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingDELETE_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-11 14:39:38 -Generating unique operation named: updateUsingTRACE_7
2019-06-11 14:39:38 -Generating unique operation named: addUsingGET_9
2019-06-11 14:39:38 -Generating unique operation named: editUsingGET_10
2019-06-11 14:39:38 -Generating unique operation named: infoUsingGET_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingHEAD_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingPOST_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingPUT_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingPATCH_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingDELETE_1
2019-06-11 14:39:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-11 14:39:39 -Generating unique operation named: infoUsingTRACE_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_10
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_18
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_19
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_10
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_11
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_20
2019-06-11 14:39:39 -Generating unique operation named: welcomeUsingGET_1
2019-06-11 14:39:39 -Generating unique operation named: addUsingGET_10
2019-06-11 14:39:39 -Generating unique operation named: editUsingGET_11
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_12
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_21
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_10
2019-06-11 14:39:39 -Generating unique operation named: treeUsingGET_1
2019-06-11 14:39:39 -Generating unique operation named: treeUsingGET_2
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_11
2019-06-11 14:39:39 -Generating unique operation named: addUsingGET_11
2019-06-11 14:39:39 -Generating unique operation named: editUsingGET_12
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_13
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_22
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_23
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_12
2019-06-11 14:39:39 -Generating unique operation named: addUsingGET_12
2019-06-11 14:39:39 -Generating unique operation named: editUsingGET_13
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_14
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_24
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_25
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_11
2019-06-11 14:39:39 -Generating unique operation named: updateUsingGET_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingHEAD_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_13
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPUT_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPATCH_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingDELETE_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-11 14:39:39 -Generating unique operation named: updateUsingTRACE_8
2019-06-11 14:39:39 -Generating unique operation named: addUsingGET_13
2019-06-11 14:39:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-11 14:39:39 -Generating unique operation named: editUsingGET_14
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_15
2019-06-11 14:39:39 -Generating unique operation named: printEditUsingGET_1
2019-06-11 14:39:39 -Generating unique operation named: removeUsingPOST_26
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_12
2019-06-11 14:39:39 -Generating unique operation named: updateUsingGET_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingHEAD_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_14
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPUT_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPATCH_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingDELETE_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-11 14:39:39 -Generating unique operation named: updateUsingTRACE_9
2019-06-11 14:39:39 -Generating unique operation named: addUsingGET_14
2019-06-11 14:39:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-11 14:39:39 -Generating unique operation named: editUsingGET_15
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_16
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_13
2019-06-11 14:39:39 -Generating unique operation named: saveUsingPOST_14
2019-06-11 14:39:39 -Generating unique operation named: updateUsingPOST_15
2019-06-11 14:39:39 -Generating unique operation named: listUsingGET_17
2019-06-11 14:39:39 -Generating unique operation named: listUsingHEAD_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingPOST_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingPUT_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingPATCH_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingDELETE_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingOPTIONS_1
2019-06-11 14:39:39 -Generating unique operation named: listUsingTRACE_1
2019-06-11 14:39:39 -Generating unique operation named: countDDUsingGET_1
2019-06-11 14:39:39 -Generating unique operation named: exportDDUsingGET_1
2019-06-11 14:39:39 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-11 14:39:40 -Generating unique operation named: addUsingGET_15
2019-06-11 14:39:40 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-11 14:39:40 -Generating unique operation named: editUsingGET_16
2019-06-11 14:39:40 -Generating unique operation named: listUsingGET_18
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_27
2019-06-11 14:39:40 -Generating unique operation named: saveUsingPOST_15
2019-06-11 14:39:40 -Generating unique operation named: treeUsingGET_3
2019-06-11 14:39:40 -Generating unique operation named: treeViewUsingGET_1
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPOST_16
2019-06-11 14:39:40 -Generating unique operation named: addUsingGET_16
2019-06-11 14:39:40 -Generating unique operation named: editUsingGET_17
2019-06-11 14:39:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-11 14:39:40 -Generating unique operation named: listUsingGET_19
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_28
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_29
2019-06-11 14:39:40 -Generating unique operation named: saveUsingPOST_16
2019-06-11 14:39:40 -Generating unique operation named: updateUsingGET_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingHEAD_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPOST_17
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPUT_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPATCH_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingDELETE_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-11 14:39:40 -Generating unique operation named: updateUsingTRACE_10
2019-06-11 14:39:40 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-11 14:39:40 -Generating unique operation named: addUsingGET_17
2019-06-11 14:39:40 -Generating unique operation named: editUsingGET_18
2019-06-11 14:39:40 -Generating unique operation named: listUsingGET_20
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_30
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_31
2019-06-11 14:39:40 -Generating unique operation named: saveUsingPOST_17
2019-06-11 14:39:40 -Generating unique operation named: updateUsingGET_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingHEAD_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPOST_18
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPUT_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPATCH_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingDELETE_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-11 14:39:40 -Generating unique operation named: updateUsingTRACE_11
2019-06-11 14:39:40 -Generating unique operation named: addUsingGET_18
2019-06-11 14:39:40 -Generating unique operation named: editUsingGET_19
2019-06-11 14:39:40 -Generating unique operation named: listUsingGET_21
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_32
2019-06-11 14:39:40 -Generating unique operation named: removeUsingPOST_33
2019-06-11 14:39:40 -Generating unique operation named: saveUsingPOST_18
2019-06-11 14:39:40 -Generating unique operation named: updateUsingGET_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingHEAD_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPOST_19
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPUT_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingPATCH_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingDELETE_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-11 14:39:40 -Generating unique operation named: updateUsingTRACE_12
2019-06-11 14:39:40 -Starting Quartz Scheduler now
2019-06-11 14:39:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-11 14:39:40 -Starting...
2019-06-11 14:39:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-11 14:39:40 -Started.
2019-06-11 14:39:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-11 14:39:40 -Using a shared selector for servlet write/read
2019-06-11 14:39:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-11 14:39:40 -Started BootdoApplication in 34.44 seconds (JVM running for 36.901)
2019-06-11 14:39:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-11 14:39:41 -==> Parameters: 
2019-06-11 14:39:41 -<==      Total: 1
2019-06-11 14:40:31 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-11 14:41:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-11 14:41:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-11 14:41:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-06-11 14:41:40 -Enabling session validation scheduler...
2019-06-11 14:41:40 -请求地址 : http://localhost:8081/login;JSESSIONID=ca71f982-22ae-4bc6-8f95-53a9fbb41a7e
2019-06-11 14:41:40 -HTTP METHOD : GET
2019-06-11 14:41:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 14:41:40 -参数 : [{}]
2019-06-11 14:41:40 -耗时 : 6
2019-06-11 14:41:40 -返回值 : login
2019-06-11 14:41:44 -请求地址 : http://localhost:8081/getVerify
2019-06-11 14:41:44 -HTTP METHOD : GET
2019-06-11 14:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 14:41:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3086f20b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@652593c9]
2019-06-11 14:41:51 -2205
2019-06-11 14:41:52 -耗时 : 8016
2019-06-11 14:41:52 -返回值 : null
2019-06-11 14:41:58 -请求地址 : http://localhost:8081/login
2019-06-11 14:41:58 -HTTP METHOD : POST
2019-06-11 14:41:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 14:41:58 -参数 : [admin, 111111, 2205, org.apache.shiro.web.servlet.ShiroHttpServletRequest@e4f2af4]
2019-06-11 14:41:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 14:41:58 -==> Parameters: admin(String)
2019-06-11 14:41:59 -<==      Total: 1
2019-06-11 14:41:59 -耗时 : 886
2019-06-11 14:41:59 -返回值 : {msg=操作成功, code=0}
2019-06-11 14:41:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-11 14:41:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 14:41:59 -==> Parameters: 1(Long), admin(String), 登录(String), 886(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 14:41:59.632(Timestamp)
2019-06-11 14:42:00 -<==    Updates: 1
2019-06-11 14:42:00 -请求地址 : http://localhost:8081/index
2019-06-11 14:42:00 -HTTP METHOD : GET
2019-06-11 14:42:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 14:42:00 -参数 : [{}]
2019-06-11 14:42:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 14:42:00 -==> Parameters: 1(Long)
2019-06-11 14:42:00 -<==      Total: 50
2019-06-11 14:42:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 14:42:00 -==> Parameters: 138(Long)
2019-06-11 14:42:00 -<==      Total: 1
2019-06-11 14:42:01 -耗时 : 937
2019-06-11 14:42:01 -返回值 : index_v1
2019-06-11 14:42:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 14:42:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 937(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 14:42:01.134(Timestamp)
2019-06-11 14:42:01 -<==    Updates: 1
2019-06-11 14:42:01 -请求地址 : http://localhost:8081/main
2019-06-11 14:42:01 -HTTP METHOD : GET
2019-06-11 14:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 14:42:01 -参数 : []
2019-06-11 14:42:01 -耗时 : 9
2019-06-11 14:42:01 -返回值 : main
2019-06-11 14:42:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 14:42:04 -HTTP METHOD : GET
2019-06-11 14:42:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 14:42:04 -参数 : []
2019-06-11 14:42:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 14:42:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 14:42:04 -<==      Total: 0
2019-06-11 14:42:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 14:42:04 -==> Parameters: 1(Long), 0(String)
2019-06-11 14:42:04 -<==      Total: 1
2019-06-11 14:42:04 -耗时 : 176
2019-06-11 14:42:04 -返回值 : com.bootdo.common.utils.PageUtils@5e2d20be
2019-06-11 14:42:04 -请求地址 : http://localhost:8081/main
2019-06-11 14:42:04 -HTTP METHOD : GET
2019-06-11 14:42:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 14:42:04 -参数 : []
2019-06-11 14:42:04 -耗时 : 1
2019-06-11 14:42:04 -返回值 : main
2019-06-11 14:42:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 14:42:10 -==> Parameters: 1(Long)
2019-06-11 14:42:10 -<==      Total: 94
2019-06-11 14:42:10 -请求地址 : http://localhost:8081/print/print
2019-06-11 14:42:10 -HTTP METHOD : GET
2019-06-11 14:42:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 14:42:10 -参数 : []
2019-06-11 14:42:10 -耗时 : 1
2019-06-11 14:42:10 -返回值 : print/print/print
2019-06-11 14:42:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 14:42:11 -HTTP METHOD : GET
2019-06-11 14:42:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 14:42:11 -参数 : [userType]
2019-06-11 14:42:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 14:42:11 -==> Parameters: userType(String)
2019-06-11 14:42:11 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 14:42:11 -HTTP METHOD : GET
2019-06-11 14:42:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 14:42:11 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 14:42:11 -<==      Total: 4
2019-06-11 14:42:11 -耗时 : 181
2019-06-11 14:42:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 14:42:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 14:42:11 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 14:42:12 -<==      Total: 3
2019-06-11 14:42:12 -==>  Preparing: select count(*) from print 
2019-06-11 14:42:12 -==> Parameters: 
2019-06-11 14:42:12 -<==      Total: 1
2019-06-11 14:42:12 -耗时 : 135
2019-06-11 14:42:12 -返回值 : com.bootdo.common.utils.PageUtils@4f3939e6
2019-06-11 14:42:35 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 14:42:35 -HTTP METHOD : POST
2019-06-11 14:42:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 14:42:35 -参数 : [[Ljava.lang.Long;@6faf0448]
2019-06-11 14:42:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 14:42:35 -==> Parameters: 1(Long), 2(Long)
2019-06-11 14:42:35 -<==      Total: 2
2019-06-11 14:42:35 -耗时 : 139
2019-06-11 14:42:35 -返回值 : [com.bootdo.print.vo.PrintVo@1b838cab, com.bootdo.print.vo.PrintVo@77512d00]
2019-06-11 15:10:31 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 411]
2019-06-11 15:24:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 15:24:52 -==> Parameters: 1(Long)
2019-06-11 15:24:52 -<==      Total: 94
2019-06-11 15:24:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-11 15:24:52 -HTTP METHOD : GET
2019-06-11 15:24:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-11 15:24:52 -参数 : []
2019-06-11 15:24:52 -耗时 : 1
2019-06-11 15:24:52 -返回值 : moneyList/moneyList
2019-06-11 15:24:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-11 15:24:58 -HTTP METHOD : GET
2019-06-11 15:24:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-11 15:24:58 -参数 : []
2019-06-11 15:24:58 -耗时 : 1
2019-06-11 15:24:58 -返回值 : system/dept/deptTree
2019-06-11 15:24:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-11 15:24:58 -HTTP METHOD : GET
2019-06-11 15:24:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-11 15:24:58 -参数 : []
2019-06-11 15:24:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-11 15:24:58 -==> Parameters: 
2019-06-11 15:24:58 -<==      Total: 3
2019-06-11 15:24:58 -耗时 : 39
2019-06-11 15:24:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-11 15:25:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-11 15:25:01 -HTTP METHOD : GET
2019-06-11 15:25:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-11 15:25:01 -参数 : []
2019-06-11 15:25:01 -耗时 : 1
2019-06-11 15:25:01 -返回值 : system/dept/deptTree
2019-06-11 15:25:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-11 15:25:01 -HTTP METHOD : GET
2019-06-11 15:25:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-11 15:25:01 -参数 : []
2019-06-11 15:25:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-11 15:25:01 -==> Parameters: 
2019-06-11 15:25:01 -<==      Total: 3
2019-06-11 15:25:01 -耗时 : 10
2019-06-11 15:25:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-11 15:25:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:04 -HTTP METHOD : POST
2019-06-11 15:25:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4817a16d]
2019-06-11 15:25:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:04 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-06-11 15:25:05 -<==      Total: 3
2019-06-11 15:25:05 -耗时 : 781
2019-06-11 15:25:05 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@d13bb70, com.bootdo.moneyList.damain.MoneyListDO@641a3c08, com.bootdo.moneyList.damain.MoneyListDO@6d060ba8]
2019-06-11 15:25:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:25:09 -HTTP METHOD : POST
2019-06-11 15:25:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:25:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4bbbabe4]
2019-06-11 15:25:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:09 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-06-11 15:25:09 -<==      Total: 3
2019-06-11 15:25:09 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-06-11 15:25:09 -<==      Total: 1
2019-06-11 15:25:09 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-06-11 15:25:09 -<==      Total: 1
2019-06-11 15:25:09 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-06-11 15:25:09 -<==      Total: 1
2019-06-11 15:25:09 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:09 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 1-0001(String)
2019-06-11 15:25:09 -<==    Updates: 1
2019-06-11 15:25:09 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-06-11 15:25:09.091(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:25:09.091(Timestamp), admin(String), null
2019-06-11 15:25:09 -<==    Updates: 1
2019-06-11 15:25:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-11 15:25:09 -<==      Total: 0
2019-06-11 15:25:09 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:25:09 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 70.00(BigDecimal), 32.55(BigDecimal), -22.02(BigDecimal), 1(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-11 15:25:09.481(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:25:09.481(Timestamp), admin(String), null
2019-06-11 15:25:09 -<==    Updates: 1
2019-06-11 15:25:09 -耗时 : 480
2019-06-11 15:25:09 -返回值 : 4
2019-06-11 15:25:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:10 -HTTP METHOD : POST
2019-06-11 15:25:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@216d114a]
2019-06-11 15:25:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:10 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-06-11 15:25:10 -<==      Total: 3
2019-06-11 15:25:10 -耗时 : 20
2019-06-11 15:25:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2a145e8b, com.bootdo.moneyList.damain.MoneyListDO@1e7fd88c, com.bootdo.moneyList.damain.MoneyListDO@57517d48]
2019-06-11 15:25:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:20 -HTTP METHOD : POST
2019-06-11 15:25:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@57bf762f]
2019-06-11 15:25:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:20 -==> Parameters: 2019-05(String), 2(String), 4-0533(String), 2019-05(String), 2(String), 4-0533(String), 2019-05(String), 2(String), 4-0533(String)
2019-06-11 15:25:20 -<==      Total: 3
2019-06-11 15:25:20 -耗时 : 17
2019-06-11 15:25:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3a13fb56, com.bootdo.moneyList.damain.MoneyListDO@732ca483, com.bootdo.moneyList.damain.MoneyListDO@5f0eaac7]
2019-06-11 15:25:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:28 -HTTP METHOD : POST
2019-06-11 15:25:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@28da9fca]
2019-06-11 15:25:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:28 -==> Parameters: 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:28 -<==      Total: 3
2019-06-11 15:25:28 -耗时 : 63
2019-06-11 15:25:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@360924d1, com.bootdo.moneyList.damain.MoneyListDO@433ddc5f, com.bootdo.moneyList.damain.MoneyListDO@11698cea]
2019-06-11 15:25:34 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:25:34 -HTTP METHOD : POST
2019-06-11 15:25:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:25:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5f2964d8]
2019-06-11 15:25:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:34 -==> Parameters: 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:34 -<==      Total: 3
2019-06-11 15:25:34 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:34 -<==      Total: 1
2019-06-11 15:25:34 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:34 -<==      Total: 1
2019-06-11 15:25:34 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:34 -<==      Total: 0
2019-06-11 15:25:34 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:34 -==> Parameters: 10(String), A(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:34 -<==    Updates: 1
2019-06-11 15:25:34 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 姚利(String), A(String), 2(String), 1(String), 10(BigDecimal), 2019-06-11 15:25:34.772(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:25:34.772(Timestamp), admin(String), null
2019-06-11 15:25:34 -<==    Updates: 1
2019-06-11 15:25:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 2(String), 2019-05(String)
2019-06-11 15:25:34 -<==      Total: 0
2019-06-11 15:25:34 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:25:34 -==> Parameters: 3-0165(String), 姚利(String), A(String), 2(String), 8460(Integer), 8534(Integer), 1(Integer), 0.465(BigDecimal), 74.00(BigDecimal), 34.41(BigDecimal), 270.68(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-11 15:25:34.946(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:25:34.946(Timestamp), admin(String), null
2019-06-11 15:25:35 -<==    Updates: 1
2019-06-11 15:25:35 -耗时 : 280
2019-06-11 15:25:35 -返回值 : 5
2019-06-11 15:25:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:36 -HTTP METHOD : POST
2019-06-11 15:25:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3f3fb611]
2019-06-11 15:25:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:36 -==> Parameters: 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:36 -<==      Total: 3
2019-06-11 15:25:36 -耗时 : 18
2019-06-11 15:25:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@654e7ce2, com.bootdo.moneyList.damain.MoneyListDO@11f5f27f, com.bootdo.moneyList.damain.MoneyListDO@53b8416e]
2019-06-11 15:25:42 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:25:42 -HTTP METHOD : POST
2019-06-11 15:25:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:25:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3e2e6275]
2019-06-11 15:25:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:42 -==> Parameters: 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:42 -<==      Total: 3
2019-06-11 15:25:42 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:25:42 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:42 -<==      Total: 1
2019-06-11 15:25:42 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:25:42 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:42 -<==      Total: 1
2019-06-11 15:25:42 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:25:42 -==> Parameters: 3-0165(String), 2019-05(String), 2(String)
2019-06-11 15:25:42 -<==      Total: 0
2019-06-11 15:25:42 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:42 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:42 -<==    Updates: 1
2019-06-11 15:25:42 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:25:42 -==> Parameters: 3-0165(String), 姚利(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-06-11 15:25:42.668(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:25:42.669(Timestamp), admin(String), null
2019-06-11 15:25:42 -<==    Updates: 1
2019-06-11 15:25:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:25:42 -==> Parameters: 3-0165(String), 2(String), 2019-05(String)
2019-06-11 15:25:42 -<==      Total: 1
2019-06-11 15:25:42 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-06-11 15:25:42 -==> Parameters: 姚利(String), 3.50(BigDecimal), 103.65(BigDecimal), 362.78(BigDecimal), 1.82(BigDecimal), 1(BigDecimal), 5(Long)
2019-06-11 15:25:42 -<==    Updates: 1
2019-06-11 15:25:42 -耗时 : 285
2019-06-11 15:25:42 -返回值 : 5
2019-06-11 15:25:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:25:44 -HTTP METHOD : POST
2019-06-11 15:25:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:25:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3075f0ec]
2019-06-11 15:25:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:25:44 -==> Parameters: 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String), 2019-05(String), 2(String), 3-0165(String)
2019-06-11 15:25:44 -<==      Total: 3
2019-06-11 15:25:44 -耗时 : 20
2019-06-11 15:25:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@156297d8, com.bootdo.moneyList.damain.MoneyListDO@48e48597, com.bootdo.moneyList.damain.MoneyListDO@5789fef7]
2019-06-11 15:27:17 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:27:17 -HTTP METHOD : POST
2019-06-11 15:27:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:27:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@55484def]
2019-06-11 15:27:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:27:17 -==> Parameters: 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String)
2019-06-11 15:27:17 -<==      Total: 3
2019-06-11 15:27:17 -耗时 : 17
2019-06-11 15:27:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@76a3a03, com.bootdo.moneyList.damain.MoneyListDO@5a39f8d8, com.bootdo.moneyList.damain.MoneyListDO@4d09f145]
2019-06-11 15:27:22 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:27:22 -HTTP METHOD : POST
2019-06-11 15:27:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:27:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77f7f5c4]
2019-06-11 15:27:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:27:22 -==> Parameters: 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String)
2019-06-11 15:27:22 -<==      Total: 3
2019-06-11 15:27:22 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:27:22 -==> Parameters: 4-0123(String), 2019-05(String), 2(String)
2019-06-11 15:27:22 -<==      Total: 1
2019-06-11 15:27:22 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:27:22 -==> Parameters: 4-0123(String), 2019-05(String), 2(String)
2019-06-11 15:27:22 -<==      Total: 1
2019-06-11 15:27:22 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:27:22 -==> Parameters: 4-0123(String), 2019-05(String), 2(String)
2019-06-11 15:27:22 -<==      Total: 2
2019-06-11 15:27:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:27:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-06-11 15:27:22.576(Timestamp)
2019-06-11 15:27:22 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:293)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7cbe51be.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-06-11 15:27:22 -<==    Updates: 1
2019-06-11 15:27:23 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:27:23 -HTTP METHOD : POST
2019-06-11 15:27:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:27:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@ea1a81f]
2019-06-11 15:27:23 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:27:23 -==> Parameters: 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String), 2019-05(String), 2(String), 4-0123(String)
2019-06-11 15:27:23 -<==      Total: 3
2019-06-11 15:27:23 -耗时 : 26
2019-06-11 15:27:23 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@73e79650, com.bootdo.moneyList.damain.MoneyListDO@42d5e5d5, com.bootdo.moneyList.damain.MoneyListDO@41374cc0]
2019-06-11 15:40:31 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 844]
2019-06-11 15:41:40 -Validating all active sessions...
2019-06-11 15:41:40 -Finished session validation.  No sessions were stopped.
2019-06-11 15:43:01 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-06-11 15:43:01 -HTTP METHOD : GET
2019-06-11 15:43:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-06-11 15:43:01 -参数 : [1, {}]
2019-06-11 15:43:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-06-11 15:43:01 -==> Parameters: 1(Long)
2019-06-11 15:43:01 -<==      Total: 1
2019-06-11 15:43:01 -耗时 : 9
2019-06-11 15:43:01 -返回值 : print/print/printEdit
2019-06-11 15:54:06 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:06 -HTTP METHOD : POST
2019-06-11 15:54:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6a21e2d5]
2019-06-11 15:54:06 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:06 -==> Parameters: 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String)
2019-06-11 15:54:06 -<==      Total: 3
2019-06-11 15:54:06 -耗时 : 28
2019-06-11 15:54:06 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2ad1338f, com.bootdo.moneyList.damain.MoneyListDO@378909d2, com.bootdo.moneyList.damain.MoneyListDO@525b72bc]
2019-06-11 15:54:10 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:54:10 -HTTP METHOD : POST
2019-06-11 15:54:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:54:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@21dccdc3]
2019-06-11 15:54:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:10 -==> Parameters: 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String)
2019-06-11 15:54:10 -<==      Total: 3
2019-06-11 15:54:10 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 2019-05(String), 2(String)
2019-06-11 15:54:10 -<==      Total: 1
2019-06-11 15:54:10 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 2019-05(String), 2(String)
2019-06-11 15:54:10 -<==      Total: 0
2019-06-11 15:54:10 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 2019-05(String), 2(String)
2019-06-11 15:54:10 -<==      Total: 0
2019-06-11 15:54:10 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:10 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 2-0596(String)
2019-06-11 15:54:10 -<==    Updates: 1
2019-06-11 15:54:10 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 系统预留(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-06-11 15:54:10.756(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:54:10.756(Timestamp), admin(String), null
2019-06-11 15:54:10 -<==    Updates: 1
2019-06-11 15:54:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 2(String), 2019-05(String)
2019-06-11 15:54:10 -<==      Total: 0
2019-06-11 15:54:10 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:54:10 -==> Parameters: 2-0596(String), 系统预留(String), A(String), 2(String), 0(Integer), 0(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 1.80(BigDecimal), 1(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-11 15:54:10.884(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:54:10.885(Timestamp), admin(String), null
2019-06-11 15:54:10 -<==    Updates: 1
2019-06-11 15:54:10 -耗时 : 328
2019-06-11 15:54:10 -返回值 : 6
2019-06-11 15:54:12 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:12 -HTTP METHOD : POST
2019-06-11 15:54:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@26ff44f5]
2019-06-11 15:54:12 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:12 -==> Parameters: 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String), 2019-05(String), 2(String), 2-0596(String)
2019-06-11 15:54:12 -<==      Total: 3
2019-06-11 15:54:12 -耗时 : 39
2019-06-11 15:54:12 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@150d766a, com.bootdo.moneyList.damain.MoneyListDO@3f7fae9e, com.bootdo.moneyList.damain.MoneyListDO@63fb8d68]
2019-06-11 15:54:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:20 -HTTP METHOD : POST
2019-06-11 15:54:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@73bfc0c2]
2019-06-11 15:54:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:20 -==> Parameters: 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String)
2019-06-11 15:54:20 -<==      Total: 3
2019-06-11 15:54:20 -耗时 : 33
2019-06-11 15:54:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3b51f2b6, com.bootdo.moneyList.damain.MoneyListDO@6aa5bb43, com.bootdo.moneyList.damain.MoneyListDO@6711cf05]
2019-06-11 15:54:26 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:54:26 -HTTP METHOD : POST
2019-06-11 15:54:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:54:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40da902c]
2019-06-11 15:54:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:26 -==> Parameters: 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String)
2019-06-11 15:54:26 -<==      Total: 3
2019-06-11 15:54:26 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:54:26 -==> Parameters: 3-0742(String), 2019-05(String), 2(String)
2019-06-11 15:54:26 -<==      Total: 1
2019-06-11 15:54:26 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:54:26 -==> Parameters: 3-0742(String), 2019-05(String), 2(String)
2019-06-11 15:54:26 -<==      Total: 0
2019-06-11 15:54:26 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:54:26 -==> Parameters: 3-0742(String), 2019-05(String), 2(String)
2019-06-11 15:54:26 -<==      Total: 0
2019-06-11 15:54:26 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:26 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 3-0742(String)
2019-06-11 15:54:27 -<==    Updates: 1
2019-06-11 15:54:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:54:27 -==> Parameters: 3-0742(String), 王洪喜(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-06-11 15:54:26.928(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:54:26.928(Timestamp), admin(String), null
2019-06-11 15:54:27 -<==    Updates: 1
2019-06-11 15:54:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:54:27 -==> Parameters: 3-0742(String), 2(String), 2019-05(String)
2019-06-11 15:54:27 -<==      Total: 0
2019-06-11 15:54:27 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:54:27 -==> Parameters: 3-0742(String), 王洪喜(String), A(String), 2(String), 5006(Integer), 5006(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 118.03(BigDecimal), 1(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-11 15:54:27.074(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:54:27.074(Timestamp), admin(String), null
2019-06-11 15:54:27 -<==    Updates: 1
2019-06-11 15:54:27 -耗时 : 264
2019-06-11 15:54:27 -返回值 : 7
2019-06-11 15:54:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:28 -HTTP METHOD : POST
2019-06-11 15:54:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2222ea85]
2019-06-11 15:54:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:28 -==> Parameters: 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String), 2019-05(String), 2(String), 3-0742(String)
2019-06-11 15:54:28 -<==      Total: 3
2019-06-11 15:54:28 -耗时 : 55
2019-06-11 15:54:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6dabc53e, com.bootdo.moneyList.damain.MoneyListDO@7230067d, com.bootdo.moneyList.damain.MoneyListDO@4773ac7c]
2019-06-11 15:54:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:35 -HTTP METHOD : POST
2019-06-11 15:54:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1b91219]
2019-06-11 15:54:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:35 -==> Parameters: 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String)
2019-06-11 15:54:35 -<==      Total: 3
2019-06-11 15:54:35 -耗时 : 17
2019-06-11 15:54:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7d305eb0, com.bootdo.moneyList.damain.MoneyListDO@59baf362, com.bootdo.moneyList.damain.MoneyListDO@105a0b96]
2019-06-11 15:54:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:36 -HTTP METHOD : POST
2019-06-11 15:54:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6e19f014]
2019-06-11 15:54:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:36 -==> Parameters: 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String)
2019-06-11 15:54:36 -<==      Total: 3
2019-06-11 15:54:36 -耗时 : 164
2019-06-11 15:54:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@32cfacf6, com.bootdo.moneyList.damain.MoneyListDO@3b08f681, com.bootdo.moneyList.damain.MoneyListDO@1a3038a4]
2019-06-11 15:54:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:54:37 -HTTP METHOD : POST
2019-06-11 15:54:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:54:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6e22136d]
2019-06-11 15:54:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:54:37 -==> Parameters: 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String), 2019-05(String), 2(String), 3-0123(String)
2019-06-11 15:54:37 -<==      Total: 3
2019-06-11 15:54:37 -耗时 : 25
2019-06-11 15:54:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@529e8a27, com.bootdo.moneyList.damain.MoneyListDO@63ac226c, com.bootdo.moneyList.damain.MoneyListDO@1debfc0f]
2019-06-11 15:55:05 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:55:05 -HTTP METHOD : POST
2019-06-11 15:55:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:55:05 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1139617b]
2019-06-11 15:55:05 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:05 -==> Parameters: 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String)
2019-06-11 15:55:05 -<==      Total: 3
2019-06-11 15:55:05 -耗时 : 19
2019-06-11 15:55:05 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6652fa51, com.bootdo.moneyList.damain.MoneyListDO@72d05590, com.bootdo.moneyList.damain.MoneyListDO@2838c008]
2019-06-11 15:55:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:55:09 -HTTP METHOD : POST
2019-06-11 15:55:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:55:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@17e51e85]
2019-06-11 15:55:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:09 -==> Parameters: 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String)
2019-06-11 15:55:09 -<==      Total: 3
2019-06-11 15:55:09 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 2019-05(String), 2(String)
2019-06-11 15:55:09 -<==      Total: 1
2019-06-11 15:55:09 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 2019-05(String), 2(String)
2019-06-11 15:55:09 -<==      Total: 0
2019-06-11 15:55:09 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 2019-05(String), 2(String)
2019-06-11 15:55:09 -<==      Total: 0
2019-06-11 15:55:09 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:09 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 4-0831(String)
2019-06-11 15:55:09 -<==    Updates: 1
2019-06-11 15:55:09 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 范庆林(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-06-11 15:55:09.217(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:55:09.217(Timestamp), admin(String), null
2019-06-11 15:55:09 -<==    Updates: 1
2019-06-11 15:55:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 2(String), 2019-05(String)
2019-06-11 15:55:09 -<==      Total: 0
2019-06-11 15:55:09 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:55:09 -==> Parameters: 4-0831(String), 范庆林(String), A(String), 2(String), 625(Integer), 625(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 1.50(BigDecimal), 1(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-11 15:55:09.321(Timestamp), 2019-05(String), admin(String), 2019-06-11 15:55:09.321(Timestamp), admin(String), null
2019-06-11 15:55:09 -<==    Updates: 1
2019-06-11 15:55:09 -耗时 : 164
2019-06-11 15:55:09 -返回值 : 8
2019-06-11 15:55:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:55:10 -HTTP METHOD : POST
2019-06-11 15:55:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:55:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@15f72203]
2019-06-11 15:55:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:10 -==> Parameters: 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String), 2019-05(String), 2(String), 4-0831(String)
2019-06-11 15:55:10 -<==      Total: 3
2019-06-11 15:55:10 -耗时 : 20
2019-06-11 15:55:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3454eef5, com.bootdo.moneyList.damain.MoneyListDO@5c06ac79, com.bootdo.moneyList.damain.MoneyListDO@70cd6ac0]
2019-06-11 15:55:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:55:37 -HTTP METHOD : POST
2019-06-11 15:55:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:55:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@68bd839a]
2019-06-11 15:55:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:37 -==> Parameters: 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String)
2019-06-11 15:55:37 -<==      Total: 3
2019-06-11 15:55:37 -耗时 : 105
2019-06-11 15:55:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1bf7823a, com.bootdo.moneyList.damain.MoneyListDO@349b69b2, com.bootdo.moneyList.damain.MoneyListDO@30be8de8]
2019-06-11 15:55:43 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:55:43 -HTTP METHOD : POST
2019-06-11 15:55:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:55:43 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@686de792]
2019-06-11 15:55:43 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:43 -==> Parameters: 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String)
2019-06-11 15:55:43 -<==      Total: 3
2019-06-11 15:55:43 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:55:43 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:43 -<==      Total: 1
2019-06-11 15:55:43 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:55:43 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:43 -<==      Total: 1
2019-06-11 15:55:43 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:55:43 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:43 -<==      Total: 2
2019-06-11 15:55:43 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:293)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7cbe51be.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-06-11 15:55:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:55:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-06-11 15:55:43.618(Timestamp)
2019-06-11 15:55:43 -<==    Updates: 1
2019-06-11 15:55:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:55:45 -HTTP METHOD : POST
2019-06-11 15:55:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:55:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5b380fca]
2019-06-11 15:55:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:45 -==> Parameters: 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String)
2019-06-11 15:55:45 -<==      Total: 3
2019-06-11 15:55:45 -耗时 : 34
2019-06-11 15:55:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7f6c9bbc, com.bootdo.moneyList.damain.MoneyListDO@3d250bda, com.bootdo.moneyList.damain.MoneyListDO@267805eb]
2019-06-11 15:55:55 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-06-11 15:55:55 -HTTP METHOD : POST
2019-06-11 15:55:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-06-11 15:55:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77d33f4a]
2019-06-11 15:55:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:55 -==> Parameters: 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String)
2019-06-11 15:55:55 -<==      Total: 3
2019-06-11 15:55:55 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-06-11 15:55:55 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:55 -<==      Total: 1
2019-06-11 15:55:55 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-06-11 15:55:55 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:55 -<==      Total: 1
2019-06-11 15:55:55 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-06-11 15:55:55 -==> Parameters: 3-0249(String), 2019-05(String), 2(String)
2019-06-11 15:55:55 -<==      Total: 2
2019-06-11 15:55:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 15:55:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-06-11 15:55:55.645(Timestamp)
2019-06-11 15:55:55 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:293)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7cbe51be.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-06-11 15:55:55 -<==    Updates: 1
2019-06-11 15:55:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-06-11 15:55:57 -HTTP METHOD : POST
2019-06-11 15:55:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-06-11 15:55:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@76db0fd4]
2019-06-11 15:55:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-06-11 15:55:57 -==> Parameters: 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String), 2019-05(String), 2(String), 3-0249(String)
2019-06-11 15:55:57 -<==      Total: 3
2019-06-11 15:55:57 -耗时 : 17
2019-06-11 15:55:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5457f3e9, com.bootdo.moneyList.damain.MoneyListDO@2f7df4ef, com.bootdo.moneyList.damain.MoneyListDO@1f6eb7b]
2019-06-11 16:10:31 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1277]
2019-06-11 16:14:12 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-11 16:40:31 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1647]
2019-06-11 16:41:40 -Validating all active sessions...
2019-06-11 16:41:40 -Finished session validation.  No sessions were stopped.
2019-06-11 17:10:31 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2008]
2019-06-11 17:24:19 -请求地址 : http://localhost:8081/login;JSESSIONID=fad21144-da04-4570-9f06-4cd7374f3f73
2019-06-11 17:24:19 -HTTP METHOD : GET
2019-06-11 17:24:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 17:24:19 -参数 : [{}]
2019-06-11 17:24:19 -耗时 : 19
2019-06-11 17:24:19 -返回值 : login
2019-06-11 17:24:20 -请求地址 : http://localhost:8081/getVerify
2019-06-11 17:24:20 -HTTP METHOD : GET
2019-06-11 17:24:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 17:24:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6611f26a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@636afac0]
2019-06-11 17:24:20 -5275
2019-06-11 17:24:20 -耗时 : 37
2019-06-11 17:24:20 -返回值 : null
2019-06-11 17:24:28 -请求地址 : http://localhost:8081/login
2019-06-11 17:24:28 -HTTP METHOD : POST
2019-06-11 17:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 17:24:28 -参数 : [admin, 111111, 5275, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6715ee04]
2019-06-11 17:24:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 17:24:28 -==> Parameters: admin(String)
2019-06-11 17:24:28 -<==      Total: 1
2019-06-11 17:24:28 -耗时 : 95
2019-06-11 17:24:28 -返回值 : {msg=操作成功, code=0}
2019-06-11 17:24:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 17:24:28 -请求地址 : http://localhost:8081/index
2019-06-11 17:24:28 -HTTP METHOD : GET
2019-06-11 17:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 17:24:28 -参数 : [{}]
2019-06-11 17:24:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 17:24:28 -==> Parameters: 1(Long)
2019-06-11 17:24:28 -==> Parameters: 1(Long), admin(String), 登录(String), 95(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 17:24:28.352(Timestamp)
2019-06-11 17:24:28 -<==    Updates: 1
2019-06-11 17:24:28 -<==      Total: 50
2019-06-11 17:24:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 17:24:28 -==> Parameters: 138(Long)
2019-06-11 17:24:28 -<==      Total: 1
2019-06-11 17:24:28 -耗时 : 316
2019-06-11 17:24:28 -返回值 : index_v1
2019-06-11 17:24:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 17:24:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 316(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 17:24:28.692(Timestamp)
2019-06-11 17:24:28 -请求地址 : http://localhost:8081/main
2019-06-11 17:24:28 -HTTP METHOD : GET
2019-06-11 17:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:24:28 -参数 : []
2019-06-11 17:24:28 -耗时 : 0
2019-06-11 17:24:28 -返回值 : main
2019-06-11 17:24:28 -<==    Updates: 1
2019-06-11 17:24:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 17:24:29 -HTTP METHOD : GET
2019-06-11 17:24:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 17:24:29 -参数 : []
2019-06-11 17:24:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 17:24:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 17:24:29 -<==      Total: 0
2019-06-11 17:24:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 17:24:29 -==> Parameters: 1(Long), 0(String)
2019-06-11 17:24:29 -<==      Total: 1
2019-06-11 17:24:29 -耗时 : 95
2019-06-11 17:24:29 -返回值 : com.bootdo.common.utils.PageUtils@424f7e0f
2019-06-11 17:24:29 -请求地址 : http://localhost:8081/main
2019-06-11 17:24:29 -HTTP METHOD : GET
2019-06-11 17:24:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:24:29 -参数 : []
2019-06-11 17:24:29 -耗时 : 0
2019-06-11 17:24:29 -返回值 : main
2019-06-11 17:24:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 17:24:32 -==> Parameters: 1(Long)
2019-06-11 17:24:32 -<==      Total: 94
2019-06-11 17:24:32 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-11 17:24:32 -HTTP METHOD : GET
2019-06-11 17:24:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-11 17:24:32 -参数 : []
2019-06-11 17:24:32 -耗时 : 0
2019-06-11 17:24:32 -返回值 : moneyList/moneyList
2019-06-11 17:24:50 -请求地址 : http://localhost:8081/print/print
2019-06-11 17:24:50 -HTTP METHOD : GET
2019-06-11 17:24:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 17:24:50 -参数 : []
2019-06-11 17:24:50 -耗时 : 0
2019-06-11 17:24:50 -返回值 : print/print/print
2019-06-11 17:24:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 17:24:50 -HTTP METHOD : GET
2019-06-11 17:24:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 17:24:50 -参数 : [userType]
2019-06-11 17:24:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 17:24:50 -==> Parameters: userType(String)
2019-06-11 17:24:50 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 17:24:50 -HTTP METHOD : GET
2019-06-11 17:24:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 17:24:50 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 17:24:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 17:24:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 17:24:50 -<==      Total: 4
2019-06-11 17:24:50 -耗时 : 90
2019-06-11 17:24:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 17:24:50 -<==      Total: 8
2019-06-11 17:24:50 -==>  Preparing: select count(*) from print 
2019-06-11 17:24:50 -==> Parameters: 
2019-06-11 17:24:50 -<==      Total: 1
2019-06-11 17:24:50 -耗时 : 102
2019-06-11 17:24:50 -返回值 : com.bootdo.common.utils.PageUtils@4f6c826f
2019-06-11 17:25:06 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 17:25:06 -HTTP METHOD : POST
2019-06-11 17:25:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 17:25:06 -参数 : [[Ljava.lang.Long;@498646ce]
2019-06-11 17:25:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 17:25:06 -==> Parameters: 1(Long), 2(Long)
2019-06-11 17:25:06 -<==      Total: 2
2019-06-11 17:25:06 -耗时 : 13
2019-06-11 17:25:06 -返回值 : [com.bootdo.print.vo.PrintVo@495ee383, com.bootdo.print.vo.PrintVo@4ea426d7]
2019-06-11 17:25:08 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 17:25:08 -HTTP METHOD : POST
2019-06-11 17:25:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 17:25:08 -参数 : [[Ljava.lang.Long;@1ac901ef]
2019-06-11 17:25:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 17:25:08 -==> Parameters: 1(Long), 2(Long)
2019-06-11 17:25:08 -<==      Total: 2
2019-06-11 17:25:08 -耗时 : 5
2019-06-11 17:25:08 -返回值 : [com.bootdo.print.vo.PrintVo@7628fd57, com.bootdo.print.vo.PrintVo@7a800303]
2019-06-11 17:26:08 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 17:26:08 -HTTP METHOD : POST
2019-06-11 17:26:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 17:26:08 -参数 : [[Ljava.lang.Long;@45420dbb]
2019-06-11 17:26:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 17:26:08 -==> Parameters: 1(Long), 2(Long)
2019-06-11 17:26:08 -<==      Total: 2
2019-06-11 17:26:08 -耗时 : 5
2019-06-11 17:26:08 -返回值 : [com.bootdo.print.vo.PrintVo@6eee3322, com.bootdo.print.vo.PrintVo@11be2cc1]
2019-06-11 17:26:45 -请求地址 : http://localhost:8081/index
2019-06-11 17:26:45 -HTTP METHOD : GET
2019-06-11 17:26:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 17:26:45 -参数 : [{}]
2019-06-11 17:26:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 17:26:45 -==> Parameters: 1(Long)
2019-06-11 17:26:45 -<==      Total: 50
2019-06-11 17:26:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 17:26:45 -==> Parameters: 138(Long)
2019-06-11 17:26:45 -<==      Total: 1
2019-06-11 17:26:45 -耗时 : 90
2019-06-11 17:26:45 -返回值 : index_v1
2019-06-11 17:26:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 17:26:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 90(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 17:26:45.606(Timestamp)
2019-06-11 17:26:45 -<==    Updates: 1
2019-06-11 17:26:45 -请求地址 : http://localhost:8081/main
2019-06-11 17:26:45 -HTTP METHOD : GET
2019-06-11 17:26:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:26:45 -参数 : []
2019-06-11 17:26:45 -耗时 : 1
2019-06-11 17:26:45 -返回值 : main
2019-06-11 17:26:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 17:26:45 -HTTP METHOD : GET
2019-06-11 17:26:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 17:26:45 -参数 : []
2019-06-11 17:26:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 17:26:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 17:26:45 -<==      Total: 0
2019-06-11 17:26:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 17:26:45 -==> Parameters: 1(Long), 0(String)
2019-06-11 17:26:45 -<==      Total: 1
2019-06-11 17:26:45 -耗时 : 15
2019-06-11 17:26:45 -返回值 : com.bootdo.common.utils.PageUtils@52ea5c93
2019-06-11 17:26:45 -请求地址 : http://localhost:8081/main
2019-06-11 17:26:45 -HTTP METHOD : GET
2019-06-11 17:26:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:26:45 -参数 : []
2019-06-11 17:26:45 -耗时 : 1
2019-06-11 17:26:45 -返回值 : main
2019-06-11 17:26:47 -请求地址 : http://localhost:8081/print/print
2019-06-11 17:26:47 -HTTP METHOD : GET
2019-06-11 17:26:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 17:26:47 -参数 : []
2019-06-11 17:26:47 -耗时 : 1
2019-06-11 17:26:47 -返回值 : print/print/print
2019-06-11 17:26:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 17:26:48 -HTTP METHOD : GET
2019-06-11 17:26:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 17:26:48 -参数 : [userType]
2019-06-11 17:26:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 17:26:48 -==> Parameters: userType(String)
2019-06-11 17:26:48 -<==      Total: 4
2019-06-11 17:26:48 -耗时 : 9
2019-06-11 17:26:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 17:26:48 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 17:26:48 -HTTP METHOD : GET
2019-06-11 17:26:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 17:26:48 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 17:26:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 17:26:48 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 17:26:48 -<==      Total: 8
2019-06-11 17:26:48 -==>  Preparing: select count(*) from print 
2019-06-11 17:26:48 -==> Parameters: 
2019-06-11 17:26:48 -<==      Total: 1
2019-06-11 17:26:48 -耗时 : 13
2019-06-11 17:26:48 -返回值 : com.bootdo.common.utils.PageUtils@61099f3c
2019-06-11 17:26:53 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 17:26:53 -HTTP METHOD : POST
2019-06-11 17:26:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 17:26:53 -参数 : [[Ljava.lang.Long;@1b722f87]
2019-06-11 17:26:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 17:26:53 -==> Parameters: 1(Long), 2(Long)
2019-06-11 17:26:53 -<==      Total: 2
2019-06-11 17:26:53 -耗时 : 4
2019-06-11 17:26:53 -返回值 : [com.bootdo.print.vo.PrintVo@18e1732a, com.bootdo.print.vo.PrintVo@1509c0ac]
2019-06-11 17:28:24 -请求地址 : http://localhost:8081/index
2019-06-11 17:28:24 -HTTP METHOD : GET
2019-06-11 17:28:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 17:28:24 -参数 : [{}]
2019-06-11 17:28:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 17:28:24 -==> Parameters: 1(Long)
2019-06-11 17:28:24 -<==      Total: 50
2019-06-11 17:28:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 17:28:24 -==> Parameters: 138(Long)
2019-06-11 17:28:24 -<==      Total: 1
2019-06-11 17:28:24 -耗时 : 19
2019-06-11 17:28:24 -返回值 : index_v1
2019-06-11 17:28:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 17:28:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 17:28:24.362(Timestamp)
2019-06-11 17:28:24 -请求地址 : http://localhost:8081/main
2019-06-11 17:28:24 -HTTP METHOD : GET
2019-06-11 17:28:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:28:24 -参数 : []
2019-06-11 17:28:24 -耗时 : 0
2019-06-11 17:28:24 -返回值 : main
2019-06-11 17:28:24 -<==    Updates: 1
2019-06-11 17:28:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 17:28:24 -HTTP METHOD : GET
2019-06-11 17:28:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 17:28:24 -参数 : []
2019-06-11 17:28:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 17:28:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 17:28:24 -<==      Total: 0
2019-06-11 17:28:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 17:28:24 -==> Parameters: 1(Long), 0(String)
2019-06-11 17:28:24 -<==      Total: 1
2019-06-11 17:28:24 -耗时 : 11
2019-06-11 17:28:24 -返回值 : com.bootdo.common.utils.PageUtils@2aaf9ba
2019-06-11 17:28:24 -请求地址 : http://localhost:8081/main
2019-06-11 17:28:24 -HTTP METHOD : GET
2019-06-11 17:28:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 17:28:24 -参数 : []
2019-06-11 17:28:24 -耗时 : 1
2019-06-11 17:28:24 -返回值 : main
2019-06-11 17:28:29 -请求地址 : http://localhost:8081/print/print
2019-06-11 17:28:29 -HTTP METHOD : GET
2019-06-11 17:28:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-11 17:28:29 -参数 : []
2019-06-11 17:28:29 -耗时 : 1
2019-06-11 17:28:29 -返回值 : print/print/print
2019-06-11 17:28:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-11 17:28:29 -HTTP METHOD : GET
2019-06-11 17:28:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-11 17:28:29 -参数 : [userType]
2019-06-11 17:28:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-11 17:28:29 -==> Parameters: userType(String)
2019-06-11 17:28:29 -<==      Total: 4
2019-06-11 17:28:29 -耗时 : 8
2019-06-11 17:28:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-11 17:28:29 -请求地址 : http://localhost:8081/print/print/list
2019-06-11 17:28:29 -HTTP METHOD : GET
2019-06-11 17:28:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-11 17:28:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-11 17:28:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-11 17:28:29 -==> Parameters: 0(Integer), 10(Integer)
2019-06-11 17:28:29 -<==      Total: 8
2019-06-11 17:28:29 -==>  Preparing: select count(*) from print 
2019-06-11 17:28:29 -==> Parameters: 
2019-06-11 17:28:29 -<==      Total: 1
2019-06-11 17:28:29 -耗时 : 15
2019-06-11 17:28:29 -返回值 : com.bootdo.common.utils.PageUtils@70df2d0
2019-06-11 17:28:34 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-11 17:28:34 -HTTP METHOD : POST
2019-06-11 17:28:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-11 17:28:34 -参数 : [[Ljava.lang.Long;@5a9274cf]
2019-06-11 17:28:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-06-11 17:28:34 -==> Parameters: 1(Long), 2(Long)
2019-06-11 17:28:34 -<==      Total: 2
2019-06-11 17:28:34 -耗时 : 5
2019-06-11 17:28:34 -返回值 : [com.bootdo.print.vo.PrintVo@1236d0c6, com.bootdo.print.vo.PrintVo@64143d70]
2019-06-11 17:40:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2406]
2019-06-11 17:41:40 -Validating all active sessions...
2019-06-11 17:41:40 -Finished session validation.  [1] sessions were stopped.
2019-06-11 20:58:20 -Starting BootdoApplication on PC-201905091110 with PID 5324 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-11 20:58:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-11 20:58:20 -The following profiles are active: dev
2019-06-11 20:58:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36546a22: startup date [Tue Jun 11 20:58:20 CST 2019]; root of context hierarchy
2019-06-11 20:58:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-11 20:58:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d45bbf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7f9eea9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-11 20:58:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-11 20:58:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-11 20:58:36 -Tomcat initialized with port(s): 8081 (http)
2019-06-11 20:58:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-11 20:58:36 -Starting service [Tomcat]
2019-06-11 20:58:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-11 20:58:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-11 20:58:36 -Initializing Spring embedded WebApplicationContext
2019-06-11 20:58:36 -Root WebApplicationContext: initialization completed in 16188 ms
2019-06-11 20:58:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-11 20:58:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-11 20:58:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-11 20:58:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-11 20:58:37 -Filter xssFilter was not registered (disabled)
2019-06-11 20:58:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-11 20:58:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-11 20:58:37 -Servlet statViewServlet mapped to [/druid/*]
2019-06-11 20:58:37 -Servlet dispatcherServlet mapped to [/]
2019-06-11 20:58:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36546a22: startup date [Tue Jun 11 20:58:20 CST 2019]; root of context hierarchy
2019-06-11 20:58:43 -Using default implementation for ThreadExecutor
2019-06-11 20:58:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-11 20:58:43 -Quartz Scheduler v.2.3.0 created.
2019-06-11 20:58:43 -RAMJobStore initialized.
2019-06-11 20:58:43 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-11 20:58:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-11 20:58:43 -Quartz scheduler version: 2.3.0
2019-06-11 20:58:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6b5e1fc5
2019-06-11 20:58:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-11 20:58:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-11 20:58:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-11 20:58:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-11 20:58:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-11 20:58:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-11 20:58:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-11 20:58:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-11 20:58:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-11 20:58:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-11 20:58:48 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-11 20:58:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-11 20:58:48 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-11 20:58:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-11 20:58:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-11 20:58:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-11 20:58:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-11 20:58:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-11 20:58:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 20:58:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-11 20:58:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-11 20:58:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-11 20:58:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-11 20:58:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-11 20:58:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-11 20:58:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-11 20:58:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-11 20:58:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-11 20:58:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-11 20:58:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-11 20:58:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-11 20:58:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-11 20:58:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-11 20:58:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-11 20:58:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-11 20:58:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-11 20:58:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-11 20:58:48 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-11 20:58:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-11 20:58:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-11 20:58:48 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-11 20:58:48 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-11 20:58:48 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogUpLoad()
2019-06-11 20:58:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-11 20:58:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-11 20:58:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-11 20:58:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-11 20:58:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-11 20:58:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-11 20:58:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-11 20:58:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-11 20:58:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-11 20:58:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-11 20:58:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-11 20:58:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-11 20:58:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-11 20:58:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-11 20:58:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-11 20:58:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-11 20:58:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-11 20:58:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-11 20:58:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-11 20:58:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-11 20:58:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-11 20:58:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-11 20:58:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-11 20:58:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-11 20:58:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-11 20:58:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-11 20:58:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-11 20:58:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-11 20:58:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-11 20:58:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-11 20:58:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 20:58:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-11 20:58:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-11 20:58:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-11 20:58:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-11 20:58:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-11 20:58:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-11 20:58:48 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-11 20:58:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-11 20:58:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-11 20:58:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-11 20:58:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-11 20:58:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-11 20:58:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-11 20:58:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-11 20:58:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-11 20:58:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-11 20:58:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-11 20:58:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-11 20:58:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-11 20:58:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 20:58:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36546a22: startup date [Tue Jun 11 20:58:20 CST 2019]; root of context hierarchy
2019-06-11 20:58:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 20:58:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-11 20:58:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-11 20:58:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-11 20:58:53 -Registering beans for JMX exposure on startup
2019-06-11 20:58:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-11 20:58:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-11 20:58:53 -Starting beans in phase 2147483647
2019-06-11 20:58:53 -Context refreshed
2019-06-11 20:58:53 -Found 1 custom documentation plugin(s)
2019-06-11 20:58:54 -Scanning for api listing references
2019-06-11 20:58:54 -Generating unique operation named: removeUsingPOST_1
2019-06-11 20:58:54 -Generating unique operation named: addUsingGET_1
2019-06-11 20:58:54 -Generating unique operation named: editUsingGET_1
2019-06-11 20:58:54 -Generating unique operation named: listUsingGET_1
2019-06-11 20:58:54 -Generating unique operation named: removeUsingPOST_2
2019-06-11 20:58:54 -Generating unique operation named: removeUsingPOST_3
2019-06-11 20:58:54 -Generating unique operation named: saveUsingPOST_1
2019-06-11 20:58:54 -Generating unique operation named: updateUsingGET_1
2019-06-11 20:58:54 -Generating unique operation named: updateUsingHEAD_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_1
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_2
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_2
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_2
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_4
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_5
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_2
2019-06-11 20:58:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_3
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_3
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_3
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_6
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_7
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_2
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_4
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_4
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_4
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_8
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_9
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_3
2019-06-11 20:58:55 -Generating unique operation named: ElecUsingGET_1
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_5
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_5
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_5
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_10
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_11
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_4
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_6
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_6
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_6
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_7
2019-06-11 20:58:55 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_7
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_12
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_13
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_5
2019-06-11 20:58:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_7
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_8
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_8
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_14
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_15
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_8
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_6
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_8
2019-06-11 20:58:55 -Generating unique operation named: editUsingGET_9
2019-06-11 20:58:55 -Generating unique operation named: listUsingGET_9
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_16
2019-06-11 20:58:55 -Generating unique operation named: removeUsingPOST_17
2019-06-11 20:58:55 -Generating unique operation named: saveUsingPOST_8
2019-06-11 20:58:55 -Generating unique operation named: updateUsingGET_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingHEAD_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPOST_9
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPUT_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingPATCH_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingDELETE_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-11 20:58:55 -Generating unique operation named: updateUsingTRACE_7
2019-06-11 20:58:55 -Generating unique operation named: addUsingGET_9
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_10
2019-06-11 20:58:56 -Generating unique operation named: infoUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingHEAD_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingPOST_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingPUT_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingPATCH_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingDELETE_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-11 20:58:56 -Generating unique operation named: infoUsingTRACE_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_10
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_18
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_19
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_10
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_11
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_20
2019-06-11 20:58:56 -Generating unique operation named: welcomeUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_10
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_11
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_12
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_21
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_10
2019-06-11 20:58:56 -Generating unique operation named: treeUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: treeUsingGET_2
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_11
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_11
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_12
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_13
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_22
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_23
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_12
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_12
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_13
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_14
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_24
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_25
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_11
2019-06-11 20:58:56 -Generating unique operation named: updateUsingGET_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingHEAD_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_13
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPUT_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPATCH_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingDELETE_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-11 20:58:56 -Generating unique operation named: updateUsingTRACE_8
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_13
2019-06-11 20:58:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_14
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_15
2019-06-11 20:58:56 -Generating unique operation named: printEditUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_26
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_12
2019-06-11 20:58:56 -Generating unique operation named: updateUsingGET_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingHEAD_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_14
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPUT_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPATCH_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingDELETE_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-11 20:58:56 -Generating unique operation named: updateUsingTRACE_9
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_14
2019-06-11 20:58:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_15
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_16
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_13
2019-06-11 20:58:56 -Generating unique operation named: saveUsingPOST_14
2019-06-11 20:58:56 -Generating unique operation named: updateUsingPOST_15
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_17
2019-06-11 20:58:56 -Generating unique operation named: listUsingHEAD_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingPOST_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingPUT_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingPATCH_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingDELETE_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingOPTIONS_1
2019-06-11 20:58:56 -Generating unique operation named: listUsingTRACE_1
2019-06-11 20:58:56 -Generating unique operation named: countDDUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: exportDDUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-11 20:58:56 -Generating unique operation named: addUsingGET_15
2019-06-11 20:58:56 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-11 20:58:56 -Generating unique operation named: editUsingGET_16
2019-06-11 20:58:56 -Generating unique operation named: listUsingGET_18
2019-06-11 20:58:56 -Generating unique operation named: removeUsingPOST_27
2019-06-11 20:58:57 -Generating unique operation named: saveUsingPOST_15
2019-06-11 20:58:57 -Generating unique operation named: treeUsingGET_3
2019-06-11 20:58:57 -Generating unique operation named: treeViewUsingGET_1
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPOST_16
2019-06-11 20:58:57 -Generating unique operation named: addUsingGET_16
2019-06-11 20:58:57 -Generating unique operation named: editUsingGET_17
2019-06-11 20:58:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-11 20:58:57 -Generating unique operation named: listUsingGET_19
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_28
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_29
2019-06-11 20:58:57 -Generating unique operation named: saveUsingPOST_16
2019-06-11 20:58:57 -Generating unique operation named: updateUsingGET_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingHEAD_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPOST_17
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPUT_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPATCH_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingDELETE_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-11 20:58:57 -Generating unique operation named: updateUsingTRACE_10
2019-06-11 20:58:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-11 20:58:57 -Generating unique operation named: addUsingGET_17
2019-06-11 20:58:57 -Generating unique operation named: editUsingGET_18
2019-06-11 20:58:57 -Generating unique operation named: listUsingGET_20
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_30
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_31
2019-06-11 20:58:57 -Generating unique operation named: saveUsingPOST_17
2019-06-11 20:58:57 -Generating unique operation named: updateUsingGET_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingHEAD_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPOST_18
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPUT_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPATCH_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingDELETE_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-11 20:58:57 -Generating unique operation named: updateUsingTRACE_11
2019-06-11 20:58:57 -Generating unique operation named: addUsingGET_18
2019-06-11 20:58:57 -Generating unique operation named: editUsingGET_19
2019-06-11 20:58:57 -Generating unique operation named: listUsingGET_21
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_32
2019-06-11 20:58:57 -Generating unique operation named: removeUsingPOST_33
2019-06-11 20:58:57 -Generating unique operation named: saveUsingPOST_18
2019-06-11 20:58:57 -Generating unique operation named: updateUsingGET_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingHEAD_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPOST_19
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPUT_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingPATCH_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingDELETE_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-11 20:58:57 -Generating unique operation named: updateUsingTRACE_12
2019-06-11 20:58:57 -Starting Quartz Scheduler now
2019-06-11 20:58:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-11 20:58:57 -Starting...
2019-06-11 20:58:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-11 20:58:57 -Started.
2019-06-11 20:58:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-11 20:58:57 -Using a shared selector for servlet write/read
2019-06-11 20:58:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-11 20:58:57 -Started BootdoApplication in 41.287 seconds (JVM running for 46.538)
2019-06-11 20:58:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-11 20:58:58 -==> Parameters: 
2019-06-11 20:58:58 -<==      Total: 1
2019-06-11 20:59:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-11 21:00:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-11 21:00:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-11 21:00:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 85 ms
2019-06-11 21:00:04 -Enabling session validation scheduler...
2019-06-11 21:00:05 -请求地址 : http://localhost:8081/login;JSESSIONID=21e69dd4-7ac8-481e-a850-a4bfb98cf29c
2019-06-11 21:00:05 -HTTP METHOD : GET
2019-06-11 21:00:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-11 21:00:05 -参数 : [{}]
2019-06-11 21:00:05 -耗时 : 7
2019-06-11 21:00:05 -返回值 : login
2019-06-11 21:00:09 -请求地址 : http://localhost:8081/getVerify
2019-06-11 21:00:09 -HTTP METHOD : GET
2019-06-11 21:00:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-11 21:00:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@556a6a6b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1068eea2]
2019-06-11 21:00:21 -3507
2019-06-11 21:00:21 -耗时 : 12707
2019-06-11 21:00:21 -返回值 : null
2019-06-11 21:00:28 -请求地址 : http://localhost:8081/login
2019-06-11 21:00:28 -HTTP METHOD : POST
2019-06-11 21:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-11 21:00:28 -参数 : [admin, 111111, 3507, org.apache.shiro.web.servlet.ShiroHttpServletRequest@20640f84]
2019-06-11 21:00:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-11 21:00:28 -==> Parameters: admin(String)
2019-06-11 21:00:28 -<==      Total: 1
2019-06-11 21:00:28 -耗时 : 147
2019-06-11 21:00:28 -返回值 : {msg=操作成功, code=0}
2019-06-11 21:00:28 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-11 21:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:00:28 -==> Parameters: 1(Long), admin(String), 登录(String), 147(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-11 21:00:28.298(Timestamp)
2019-06-11 21:00:28 -<==    Updates: 1
2019-06-11 21:00:28 -请求地址 : http://localhost:8081/index
2019-06-11 21:00:28 -HTTP METHOD : GET
2019-06-11 21:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-11 21:00:28 -参数 : [{}]
2019-06-11 21:00:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-11 21:00:28 -==> Parameters: 1(Long)
2019-06-11 21:00:28 -<==      Total: 50
2019-06-11 21:00:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-11 21:00:29 -==> Parameters: 138(Long)
2019-06-11 21:00:29 -<==      Total: 1
2019-06-11 21:00:29 -耗时 : 428
2019-06-11 21:00:29 -返回值 : index_v1
2019-06-11 21:00:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:00:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 428(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-11 21:00:29.108(Timestamp)
2019-06-11 21:00:29 -<==    Updates: 1
2019-06-11 21:00:29 -请求地址 : http://localhost:8081/main
2019-06-11 21:00:29 -HTTP METHOD : GET
2019-06-11 21:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 21:00:29 -参数 : []
2019-06-11 21:00:29 -耗时 : 0
2019-06-11 21:00:29 -返回值 : main
2019-06-11 21:00:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-11 21:00:32 -HTTP METHOD : GET
2019-06-11 21:00:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-11 21:00:32 -参数 : []
2019-06-11 21:00:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-11 21:00:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-11 21:00:32 -<==      Total: 0
2019-06-11 21:00:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-11 21:00:32 -==> Parameters: 1(Long), 0(String)
2019-06-11 21:00:32 -<==      Total: 1
2019-06-11 21:00:32 -耗时 : 158
2019-06-11 21:00:32 -返回值 : com.bootdo.common.utils.PageUtils@4740abf
2019-06-11 21:00:32 -请求地址 : http://localhost:8081/main
2019-06-11 21:00:32 -HTTP METHOD : GET
2019-06-11 21:00:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-11 21:00:32 -参数 : []
2019-06-11 21:00:32 -耗时 : 0
2019-06-11 21:00:32 -返回值 : main
2019-06-11 21:00:34 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/965/k36h01gt/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-11 21:00:34 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-11 21:00:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-11 21:00:50 -==> Parameters: 1(Long)
2019-06-11 21:00:50 -<==      Total: 94
2019-06-11 21:00:50 -请求地址 : http://localhost:8081/sys/menu/
2019-06-11 21:00:50 -HTTP METHOD : GET
2019-06-11 21:00:50 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-06-11 21:00:50 -参数 : [{}]
2019-06-11 21:00:50 -耗时 : 0
2019-06-11 21:00:50 -返回值 : system/menu/menu
2019-06-11 21:00:51 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-11 21:00:51 -HTTP METHOD : GET
2019-06-11 21:00:51 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-11 21:00:51 -参数 : [{sort=order_num}]
2019-06-11 21:00:51 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-11 21:00:51 -==> Parameters: 
2019-06-11 21:00:51 -<==      Total: 110
2019-06-11 21:00:51 -耗时 : 57
2019-06-11 21:00:51 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-11 21:01:10 -请求地址 : http://localhost:8081/sys/menu/edit/106
2019-06-11 21:01:10 -HTTP METHOD : GET
2019-06-11 21:01:10 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-06-11 21:01:10 -参数 : [{}, 106]
2019-06-11 21:01:10 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-11 21:01:10 -==> Parameters: 106(Long)
2019-06-11 21:01:10 -<==      Total: 1
2019-06-11 21:01:10 -耗时 : 14
2019-06-11 21:01:10 -返回值 : system/menu/edit
2019-06-11 21:01:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:01:10 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 14(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-06-11 21:01:10.694(Timestamp)
2019-06-11 21:01:10 -<==    Updates: 1
2019-06-11 21:01:13 -请求地址 : http://localhost:8081/sys/menu/add/106
2019-06-11 21:01:13 -HTTP METHOD : GET
2019-06-11 21:01:13 -CLASS_METHOD : com.bootdo.system.controller.MenuController.add
2019-06-11 21:01:13 -参数 : [{}, 106]
2019-06-11 21:01:13 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-11 21:01:13 -==> Parameters: 106(Long)
2019-06-11 21:01:13 -<==      Total: 1
2019-06-11 21:01:13 -耗时 : 7
2019-06-11 21:01:13 -返回值 : system/menu/add
2019-06-11 21:01:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:01:13 -==> Parameters: 1(Long), admin(String), 添加菜单(String), 7(Integer), com.bootdo.system.controller.MenuController.add()(String), null, 127.0.0.1(String), 2019-06-11 21:01:13.414(Timestamp)
2019-06-11 21:01:13 -<==    Updates: 1
2019-06-11 21:04:46 -请求地址 : http://localhost:8081/sys/menu/save
2019-06-11 21:04:46 -HTTP METHOD : POST
2019-06-11 21:04:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.save
2019-06-11 21:04:46 -参数 : [MenuDO{menuId=null, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=5, gmtCreate=null, gmtModified=null}]
2019-06-11 21:04:46 -==>  Preparing: insert into sys_menu ( `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`, `gmt_create`, `gmt_modified` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:04:46 -==> Parameters: 106(Long), 缴费上传(String), /moneyUpLoad/ElecLogUpLoad(String), moneyUpLoad:ElecLogUpLoad(String), 1(Integer), fa fa-bullseye(String), 5(Integer), null, null
2019-06-11 21:04:46 -<==    Updates: 1
2019-06-11 21:04:46 -耗时 : 101
2019-06-11 21:04:46 -返回值 : {msg=操作成功, code=0}
2019-06-11 21:04:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-11 21:04:46 -==> Parameters: 1(Long), admin(String), 保存菜单(String), 102(Integer), com.bootdo.system.controller.MenuController.save()(String), null, 127.0.0.1(String), 2019-06-11 21:04:46.883(Timestamp)
2019-06-11 21:04:46 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-11 21:04:46 -HTTP METHOD : GET
2019-06-11 21:04:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-11 21:04:46 -参数 : [{sort=order_num}]
2019-06-11 21:04:46 -<==    Updates: 1
2019-06-11 21:04:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-11 21:04:46 -==> Parameters: 
2019-06-11 21:04:46 -<==      Total: 111
2019-06-11 21:04:46 -耗时 : 40
2019-06-11 21:04:46 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-11 21:29:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 18], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 407]
2019-06-11 21:59:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 18], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 768]
2019-06-11 22:00:04 -Validating all active sessions...
2019-06-11 22:00:04 -Finished session validation.  No sessions were stopped.
2019-06-11 22:29:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 18], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1129]
2019-06-11 22:59:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 18], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1490]
2019-06-11 23:00:04 -Validating all active sessions...
2019-06-11 23:00:04 -Finished session validation.  No sessions were stopped.
